{"version":3,"sources":["webpack:///./app/components/alertLink.tsx","webpack:///./app/data/forms/accountNotificationSettings.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountNotifications.tsx","webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx"],"names":["AlertLink","this","props","size","priority","icon","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","data-test-id","IconWrapper","AlertLinkText","IconLink","direction","React","linkProps","omit","p","theme","alert","backgroundLight","textColor","border","space","route","fields","subscribeByDefault","name","type","label","t","help","workflowNotifications","choices","weeklyReports","disabled","deployNotifications","personalActivityNotifications","selfAssignOnResolve","title","AsyncView","getTitle","renderComponent","AsyncComponent","FINE_TUNE_FOOTERS","text","path","AccountNotifications","initialData","state","data","undefined","saveOnBlur","apiMethod","apiEndpoint","forms","accountNotificationFields","renderFooter","FineTuningFooter","FineTuneLink","Link","css","FormPanel","access","additionalFieldProps","renderHeader","otherProps","id","sanitizeQuerySelector","map","field","defaultValue","fieldWithoutDefaultValue","disabledReason","highlighted","JsonForm","location","hash","scrollToHash","nextProps","setState","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","fieldsWithVisibleProp","filter","defined","visible","length","every","formPanelProps","shouldDisplayForm","features","formGroup","i","renderForm","withRouter"],"mappings":"y1EAkCMA,E,wiBAQJ,WAAS,MAYHC,KAAKC,MAVPC,EAFK,EAELA,KACAC,EAHK,EAGLA,SACAC,EAJK,EAILA,KACAC,EALK,EAKLA,SACAC,EANK,EAMLA,QACAC,EAPK,EAOLA,oBACAC,EARK,EAQLA,aACAC,EATK,EASLA,GACAC,EAVK,EAULA,KACkBC,EAXb,EAWJ,gBAGH,OACE,QAACC,EAAD,CACEC,eAAcF,EACdF,GAAIA,EACJC,KAAMA,EACNJ,QAASA,EACTJ,KAAMA,EACNC,SAAUA,EACVI,oBAAqBA,EACrBC,aAAcA,EARhB,UAUGJ,IAAQ,QAACU,EAAD,UAAcV,KACvB,QAACW,EAAD,UAAgBV,KAChB,QAACW,EAAD,WACE,QAAC,KAAD,CAAaC,UAAU,mB,GApCTC,aAAlBnB,E,gCAAAA,E,eACgC,CAClCI,SAAU,UACVD,KAAM,SACNK,qBAAqB,EACrBC,cAAc,IAsClB,UAEA,IAAMI,GAAa,QAAO,YAAyD,IAAvDJ,EAAuD,EAAvDA,aAAcC,EAAyC,EAAzCA,GAAIC,EAAqC,EAArCA,KAAST,GAA4B,uCAC3EkB,EAAYC,IAAKnB,EAAO,CAAC,sBAAuB,WAAY,SAClE,OAAIS,GACK,QAAC,IAAD,OAAkBS,GAAlB,IAA6BT,KAAMA,EAAMF,aAAcA,MAGzD,QAAC,IAAD,OAAUW,GAAV,IAAqBV,GAAIA,GAAM,QANrB,qBAAH,kCASM,SAAAY,GAAC,OAAIA,EAAEC,MAAMC,MAAMF,EAAElB,UAAUqB,kBATrC,WAUL,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAVR,uBAWO,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,MAAMF,EAAElB,UAAUuB,SAXtC,aAYH,SAAAL,GAAC,MAAgB,UAAXA,EAAEnB,KAAF,WAAwByB,OAAM,GAA9B,aAAoCA,OAAM,OAASA,OAAM,KAZ5D,mBAaG,SAAAN,GAAC,OAAKA,EAAEd,oBAAsB,GAAIoB,OAAM,KAb3C,+FAmBE,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,MAAMF,EAAElB,UAAUuB,SAnBjC,kBAuBVZ,GAAc,OAAO,OAAP,qBAAH,wBAELa,OAAM,IAFD,KAESA,OAAM,KAFf,KAEuBA,OAAM,IAF7B,OAKXX,GAAW,OAAOF,EAAP,qBAAH,WACFa,OAAM,IADJ,OAIRZ,GAAgB,OAAO,MAAP,qBAAH,wD,6JC3GNa,EAAQ,mCAERC,EAAiC,CAC5CC,mBAAoB,CAClBC,KAAM,qBACNC,KAAM,UACNC,OAAOC,OAAE,kBAETC,MAAMD,OACJ,8IAGJE,sBAAuB,CACrBL,KAAM,wBACNC,KAAM,QACNC,OAAOC,OAAE,kCACTG,QAAS,CACP,CAAC,GAAGH,OAAE,WACN,CAAC,GAAGA,OAAE,kCACN,CAAC,GAAGA,OAAE,WAERC,MAAMD,OAAE,uEAEVI,cAAe,CAEbP,KAAM,gBACNC,KAAM,UACNC,OAAOC,OAAE,0BACTC,MAAMD,OAAE,0EACRK,UAAU,GAEZC,oBAAqB,CACnBT,KAAM,sBACNC,KAAM,QACNC,OAAOC,OAAE,gCACTG,QAAS,CACP,CAAC,GAAGH,OAAE,WACN,CAAC,GAAGA,OAAE,oCACN,CAAC,GAAGA,OAAE,WAERC,MAAMD,OAAE,qEAEVO,8BAA+B,CAC7BV,KAAM,gCACNC,KAAM,UACNC,OAAOC,OAAE,mCACTC,MAAMD,OAAE,2EAEVQ,oBAAqB,CACnBX,KAAM,sBACNC,KAAM,UACNC,OAAOC,OAAE,yCACTC,MAAMD,OAAE,4EAoCZ,QAhCqC,CACnC,CACES,OAAOT,OAAE,UACTL,OAAQ,CAACA,EAAOC,qBAGlB,CACEa,OAAOT,OAAE,0BACTL,OAAQ,CAACA,EAAOO,wBAGlB,CACEO,OAAOT,OAAE,iBACTL,OAAQ,IAGV,CACEc,OAAOT,OAAE,kBACTL,OAAQ,IAGV,CACEc,OAAOT,OAAE,wBACTL,OAAQ,CAACA,EAAOW,sBAGlB,CACEG,OAAOT,OAAE,eACTL,OAAQ,CAACA,EAAOY,8BAA+BZ,EAAOa,wB,8sBChFrCE,E,0iBAInB,WACE,MAAO,K,oBAGT,WACE,IAAMD,EAAQ3C,KAAK6C,WACnB,OACE,QAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,UAApB,SACG3C,KAAK8C,wB,GATJC,KAHWH,E,0+DCKrB,IAAMI,GAAiB,gBACpBd,OAAE,UAAY,CACbe,MAAMf,OAAE,+BACRgB,KAAM,aAHa,UAKpBhB,OAAE,0BAA4B,CAC7Be,MAAMf,OAAE,+CACRgB,KAAM,eAPa,UASpBhB,OAAE,iBAAmB,CACpBe,MAAMf,OAAE,sCACRgB,KAAM,YAXa,UAapBhB,OAAE,kBAAoB,CACrBe,MAAMf,OAAE,4CACRgB,KAAM,cAfa,UAiBpBhB,OAAE,wBAA0B,CAC3Be,MAAMf,OAAE,kDACRgB,KAAM,YAnBa,GA6BFC,E,8iBACnB,WACE,MAAO,CAAC,CAAC,OAAQ,+B,sBAGnB,WACE,MAAO,kB,wBAGT,WAAa,MACX,OACE,0BACE,QAAC,IAAD,CAAoBR,MAAM,mBAC1B,QAAC,IAAD,CACES,YAAW,UAAEpD,KAAKqD,MAAMC,YAAb,aAAqBC,EAChCC,YAAU,EACVC,UAAU,MACVC,YAAY,2BAJd,WAME,QAAC,IAAD,CACEC,MAAOC,UACPC,aAAc,YAAa,IAAXlB,EAAW,EAAXA,MACd,MAAqB,iBAAVA,EACF,KAELK,EAAkBL,IACb,QAACmB,E,qWAAD,IAAsBd,EAAkBL,KAE1C,SAGX,QAAC,IAAD,CAAWlC,GAAG,2BAA2BL,MAAM,QAAC,IAAD,IAA/C,UACG8B,OAAE,gF,GAhCmCU,KAwC5CmB,GAAe,OAAOC,IAAP,sBAAH,sG,4CAYZF,EAAmB,SAAC,GAAD,IAAEZ,EAAF,EAAEA,KAAMD,EAAR,EAAQA,KAAR,OACvB,QAAC,KAAD,CAAagB,IAAG,EAAhB,UACE,QAACF,EAAD,CAActD,GAAE,0CAAqCyC,GAArD,WACE,yBAAOD,KACP,QAAC,KAAD,CAAahC,UAAU,QAAQf,KAAK,eAJpC4D,E,+rEC9CeI,E,wiBAKnB,WAAS,aAUHlE,KAAKC,MARP0C,EAFK,EAELA,MACAd,EAHK,EAGLA,OACAsC,EAJK,EAILA,OACA5B,EALK,EAKLA,SACA6B,EANK,EAMLA,qBACAP,EAPK,EAOLA,aACAQ,EARK,EAQLA,aACGC,GATE,sGAYP,OACE,QAAC,KAAD,CAAOC,GAAqB,iBAAV5B,GAAqB6B,OAAsB7B,QAASY,EAAtE,UACGZ,IAAS,QAAC,KAAD,UAAcA,KACxB,QAAC,IAAD,WAC2B,mBAAjB0B,GAA+BA,EAAa,CAAC1B,QAAOd,WAE3DA,EAAO4C,KAAI,SAAAC,GACV,GAAqB,mBAAVA,EACT,OAAOA,IAG8CA,EAAhDC,aALY,IAKQC,GALR,OAKoCF,EALpC,kBAcnB,OALiB,IAAbnC,IACFqC,EAAyBrC,UAAW,EACpCqC,EAAyBC,oBAAiBtB,IAI1C,QAAC,IAAD,OACEY,OAAQA,EACR5B,SAAUA,GAEN+B,GACAF,GALN,IAMEM,MAAOE,EACPE,YAAa,EAAK7E,MAAM6E,cAAX,WAA+BJ,EAAM3C,QAJ7C2C,EAAM3C,SAQQ,mBAAjB8B,GAA+BA,EAAa,CAAClB,QAAOd,qB,GAjD/BX,aAAlBgD,E,gCAAAA,E,eACiB,CAClCE,qBAAsB,M,s6ECfpBW,E,0nBACW,CAEbD,YAAW,UAAE,EAAK7E,MAAM+E,gBAAb,aAAE,EAAqBC,O,kDAGpC,WACEjF,KAAKkF,iB,8CAGP,SAAiCC,GAC/B,GAAInF,KAAKC,MAAM+E,SAASC,OAASE,EAAUH,SAASC,KAAM,CACxD,IAAMA,EAAOE,EAAUH,SAASC,KAChCjF,KAAKkF,aAAaD,GAClBjF,KAAKoF,SAAS,CAACN,YAAaG,O,0BAIhC,SAAaI,GAAuB,MAE5BJ,EAAOI,IAAM,UAAIrF,KAAKC,MAAM+E,gBAAf,aAAI,EAAqBC,MAE5C,GAAKA,EAOL,IACEK,KAAgBd,OAAsBe,mBAAmBN,IAAQ,CAC/DO,MAAO,SACPC,QAAS,MAEX,MAAOC,GACPC,KAAwBD,M,+BAI5B,SAAkB7D,GAChB,IAAM+D,EAAwB/D,EAAOgE,QACnC,SAAAnB,GAAK,MAAqB,mBAAVA,IAAwBoB,QAAQpB,aAAD,EAACA,EAAOqB,YAGzD,GAAIlE,EAAOmE,SAAWJ,EAAsBI,OAAQ,OACThG,KAAKC,MAAvCmE,EAD2C,EAC3CA,qBAAyBnE,GADkB,mCAUlD,OAP2B2F,EAAsBK,OAAM,SAAAvB,GACrD,MAA6B,mBAAlBA,EAAMqB,SACPrB,EAAMqB,QAAN,OAAkB9F,GAAUmE,KAE9BM,EAAMqB,WAMlB,OAAO,I,wBAGT,YAiBG,IAhBDlE,EAgBC,EAhBDA,OACAqE,EAeC,EAfDA,eACAvD,EAcC,EAdDA,MAiBA,OAF0B3C,KAAKmG,kBAAkBtE,IAI9CqE,WAAgBrC,cAChBqC,WAAgB7B,cAKZ,QAAC,IAAD,GAAW1B,MAAOA,EAAOd,OAAQA,GAAYqE,IAH3C,O,oBAMX,WAAS,aAaHlG,KAAKC,MAXPkE,EAFK,EAELA,OACAtC,EAHK,EAGLA,OACAc,EAJK,EAILA,MACAgB,EALK,EAKLA,MACApB,EANK,EAMLA,SACA6D,EAPK,EAOLA,SACAhC,EARK,EAQLA,qBACAP,EATK,EASLA,aACAQ,EAVK,EAULA,aAEGC,GAZE,EAWLU,UAXK,qIAeDkB,EAAiB,CACrB/B,SACA5B,WACA6D,WACAhC,uBACAP,eACAQ,eACAS,YAAa9E,KAAKqD,MAAMyB,aAG1B,OACE,qBAASR,GAAT,mBACoB,IAAVX,GACNA,EAAMc,KAAI,SAAC4B,EAAWC,GAAZ,OACR,QAAC,WAAD,UACG,EAAKC,WAAL,GAAiBL,kBAAmBG,KADlBC,WAIP,IAAV3C,QACY,IAAX9B,GACP7B,KAAKuG,WAAW,CAAC1E,SAAQqE,iBAAgBvD,kB,GA9H5BzB,aAAjB6D,E,uBAoIN,SAAeyB,gBAAWzB","file":"app_views_settings_account_accountNotifications_tsx.6a5641fe3e72ad31e84e.js","sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n\n    return (\n      <StyledLink\n        data-test-id={dataTestId}\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import {t} from 'app/locale';\nimport {Field, JsonFormObject} from 'app/views/settings/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/notifications/';\n\nexport const fields: {[key: string]: Field} = {\n  subscribeByDefault: {\n    name: 'subscribeByDefault',\n    type: 'boolean',\n    label: t('Send Me Alerts'),\n    // TODO(billy): Make this a real link\n    help: t(\n      'Enable this to receive notifications for Alerts sent to your teams. You will always receive alerts configured to be sent directly to you.'\n    ),\n  },\n  workflowNotifications: {\n    name: 'workflowNotifications',\n    type: 'radio',\n    label: t('Send Me Workflow Notifications'),\n    choices: [\n      [0, t('Always')],\n      [1, t('Only On Issues I Subscribe To')],\n      [2, t('Never')],\n    ],\n    help: t('E.g. changes in issue assignment, resolution status, and comments.'),\n  },\n  weeklyReports: {\n    // Form is not visible because currently not implemented\n    name: 'weeklyReports',\n    type: 'boolean',\n    label: t('Send Me Weekly Reports'),\n    help: t(\"Reports contain a summary of what's happened within your organization.\"),\n    disabled: true,\n  },\n  deployNotifications: {\n    name: 'deployNotifications',\n    type: 'radio',\n    label: t('Send Me Deploy Notifications'),\n    choices: [\n      [2, t('Always')],\n      [3, t('Only On Deploys With My Commits')],\n      [4, t('Never')],\n    ],\n    help: t('Deploy emails include release, environment and commit overviews.'),\n  },\n  personalActivityNotifications: {\n    name: 'personalActivityNotifications',\n    type: 'boolean',\n    label: t('Notify Me About My Own Activity'),\n    help: t('Enable this to receive notifications about your own actions on Sentry.'),\n  },\n  selfAssignOnResolve: {\n    name: 'selfAssignOnResolve',\n    type: 'boolean',\n    label: t(\"Claim Unassigned Issues I've Resolved\"),\n    help: t(\"You'll receive notifications about any changes that happen afterwards.\"),\n  },\n};\n\nconst formGroups: JsonFormObject[] = [\n  {\n    title: t('Alerts'),\n    fields: [fields.subscribeByDefault],\n  },\n\n  {\n    title: t('Workflow Notifications'),\n    fields: [fields.workflowNotifications],\n  },\n\n  {\n    title: t('Email Routing'),\n    fields: [],\n  },\n\n  {\n    title: t('Weekly Reports'),\n    fields: [],\n  },\n\n  {\n    title: t('Deploy Notifications'),\n    fields: [fields.deployNotifications],\n  },\n\n  {\n    title: t('My Activity'),\n    fields: [fields.personalActivityNotifications, fields.selfAssignOnResolve],\n  },\n];\n\nexport default formGroups;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport AlertLink from 'app/components/alertLink';\nimport Link from 'app/components/links/link';\nimport {PanelFooter} from 'app/components/panels';\nimport accountNotificationFields from 'app/data/forms/accountNotificationSettings';\nimport {IconChevron, IconMail} from 'app/icons';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst FINE_TUNE_FOOTERS = {\n  [t('Alerts')]: {\n    text: t('Fine tune alerts by project'),\n    path: 'alerts/',\n  },\n  [t('Workflow Notifications')]: {\n    text: t('Fine tune workflow notifications by project'),\n    path: 'workflow/',\n  },\n  [t('Email Routing')]: {\n    text: t('Fine tune email routing by project'),\n    path: 'email/',\n  },\n  [t('Weekly Reports')]: {\n    text: t('Fine tune weekly reports by organization'),\n    path: 'reports/',\n  },\n  [t('Deploy Notifications')]: {\n    text: t('Fine tune deploy notifications by organization'),\n    path: 'deploy/',\n  },\n};\n\ntype Props = AsyncView['props'] & {};\n\ntype State = AsyncView['state'] & {\n  data: Record<string, unknown> | null;\n};\n\nexport default class AccountNotifications extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['data', '/users/me/notifications/']];\n  }\n\n  getTitle() {\n    return 'Notifications';\n  }\n\n  renderBody() {\n    return (\n      <div>\n        <SettingsPageHeader title=\"Notifications\" />\n        <Form\n          initialData={this.state.data ?? undefined}\n          saveOnBlur\n          apiMethod=\"PUT\"\n          apiEndpoint=\"/users/me/notifications/\"\n        >\n          <JsonForm\n            forms={accountNotificationFields}\n            renderFooter={({title}) => {\n              if (typeof title !== 'string') {\n                return null;\n              }\n              if (FINE_TUNE_FOOTERS[title]) {\n                return <FineTuningFooter {...FINE_TUNE_FOOTERS[title]} />;\n              }\n              return null;\n            }}\n          />\n          <AlertLink to=\"/settings/account/emails\" icon={<IconMail />}>\n            {t('Looking to add or remove an email address? Use the emails panel.')}\n          </AlertLink>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst FineTuneLink = styled(Link)`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 20px;\n  color: inherit;\n`;\n\ntype FooterProps = {\n  path: string;\n  text: string;\n};\n\nconst FineTuningFooter = ({path, text}: FooterProps) => (\n  <PanelFooter css={{borderTop: 'none'}}>\n    <FineTuneLink to={`/settings/account/notifications/${path}`}>\n      <span>{text}</span>\n      <IconChevron direction=\"right\" size=\"15px\" />\n    </FineTuneLink>\n  </PanelFooter>\n);\n","import * as React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {Scope} from 'app/types';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = DefaultProps & {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import * as React from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n\n  additionalFieldProps?: {[key: string]: any};\n} & WithRouterProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  state: State = {\n    // location.hash is optional because of tests.\n    highlighted: this.props.location?.hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (this.props.location.hash !== nextProps.location.hash) {\n      const hash = nextProps.location.hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    // location.hash is optional because of tests.\n    const hash = toHash || this.props.location?.hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <div {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(JsonForm);\n"],"sourceRoot":""}