{"version":3,"sources":["webpack:///./app/actionCreators/plugins.tsx","webpack:///./app/actions/pluginActions.tsx","webpack:///./app/components/pluginConfig.tsx","webpack:///./app/plugins/components/pluginIcon.tsx","webpack:///../src/sentry/static/sentry/images/logos/logo-amixr.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-asana.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-asayer.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-aws.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-azure.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-bitbucket-server.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-bitbucket.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-campfire.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-clickup.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-clubhouse.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-datadog.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-default.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-flowdock.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-fullstory.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-github-actions.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-github-enterprise.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-github.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-gitlab.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-heroku.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-jira-server.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-jira.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-komodor.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-lighthouse.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-linear.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-msteams.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-netlify.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-octohook.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-opsgenie.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-pagerduty.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-phabricator.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-pivotaltracker.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-pushover.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-quill.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-redmine.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-rocketchat.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-rookout.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-segment.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-sentry.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-slack.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-spikesh.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-split.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-taiga.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-teamwork.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-trello.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-twilio.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-vercel.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-victorops.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-visualstudio.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-youtrack.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-zepel.svg","webpack:///../src/sentry/static/sentry/images/logos/logo-zulip.svg"],"names":["activeFetch","api","Client","doUpdate","orgId","projectId","pluginId","update","params","PluginActions","request","requestPromise","then","resp","err","responseJSON","detail","Error","fetchPlugins","options","path","method","includeAllArgs","data","jqXHR","pageLinks","getResponseHeader","enablePlugin","addLoadingMessage","t","enabled","addSuccessMessage","addErrorMessage","disablePlugin","Reflux","PluginConfig","loading","plugins","props","testResults","onDisablePlugin","setState","getPluginEndpoint","test","JSON","stringify","this","loadPlugin","nextProps","nextState","isEqual","state","organization","project","slug","id","__html","doc","className","data-test-id","hasButtons","PluginName","StyledPluginIcon","name","canDisable","Actions","isTestable","TestPluginButton","onClick","handleTestPlugin","size","handleDisablePlugin","status","type","StyledPanelBody","dangerouslySetInnerHTML","createMarkup","renderSettings","Component","withApi","PluginIcon","space","Button","PanelBody","DEFAULT_ICON","placeholder","ICON_PATHS","_default","sentry","browsers","device","interface_types","os","urls","webhooks","aws","aws_lambda","amixr","asana","asayer","bitbucket","bitbucket_pipelines","bitbucket_server","bitbucketserver","campfire","clickup","clubhouse","datadog","flowdock","fullstory","github","github_actions","githubActions","github_enterprise","githubEnterprise","gitlab","heroku","jira","jira_server","jiraserver","komodor","lighthouse","linear","msteams","netlify","octohook","opsgenie","pagerduty","phabricator","pivotal","pushover","quill","redmine","rocketchat","rookout","segment","slack","spikesh","split","taiga","teamwork","trello","twilio","visualstudio","vsts","youtrack","vercel","victorops","zepel","zulip","p","undefined","defaultProps","module","exports"],"mappings":"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","file":"app_actionCreators_plugins_tsx-app_components_pluginConfig_tsx.66327b22d696a44e12ac.js","sourcesContent":["import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport PluginActions from 'app/actions/pluginActions';\nimport {Client, RequestOptions} from 'app/api';\nimport {t} from 'app/locale';\nimport {Plugin} from 'app/types';\n\nconst activeFetch = {};\n// PluginsStore always exists, so api client should be independent of component lifecycle\nconst api = new Client();\n\ntype Slugs = {\n  /**\n   * Organization slug\n   */\n  orgId: string;\n\n  /**\n   * Project slug\n   */\n  projectId: string;\n\n  /**\n   * Plugin slug\n   */\n  pluginId: string;\n};\n\ntype DoUpdateParams = Slugs & {\n  update: Partial<Plugin>;\n} & Partial<RequestOptions>;\n\nfunction doUpdate({orgId, projectId, pluginId, update, ...params}: DoUpdateParams) {\n  PluginActions.update(pluginId, update);\n  const request = api.requestPromise(\n    `/projects/${orgId}/${projectId}/plugins/${pluginId}/`,\n    {\n      ...params,\n    }\n  );\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then(() => {\n      PluginActions.updateSuccess(pluginId, update);\n    })\n    .catch(resp => {\n      const err =\n        resp && resp.responseJSON && typeof resp.responseJSON.detail === 'string'\n          ? new Error(resp.responseJSON.detail)\n          : new Error('Unable to update plugin');\n      PluginActions.updateError(pluginId, update, err);\n    });\n\n  return request;\n}\n\ntype FetchPluginsOptions = {\n  /**\n   * Reset will set loading state = true\n   */\n  resetLoading?: boolean;\n};\n\n/**\n * Fetches list of available plugins for a project\n */\nexport function fetchPlugins(\n  {orgId, projectId}: Pick<Slugs, 'orgId' | 'projectId'>,\n  options?: FetchPluginsOptions\n): Promise<Plugin[]> {\n  const path = `/projects/${orgId}/${projectId}/plugins/`;\n\n  // Make sure we throttle fetches\n  if (activeFetch[path]) {\n    return activeFetch[path];\n  }\n\n  PluginActions.fetchAll(options);\n  const request = api.requestPromise(path, {\n    method: 'GET',\n    includeAllArgs: true,\n  });\n\n  activeFetch[path] = request;\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then(([data, _, jqXHR]) => {\n      PluginActions.fetchAllSuccess(data, {\n        pageLinks: jqXHR && jqXHR.getResponseHeader('Link'),\n      });\n\n      return data;\n    })\n    .catch(err => {\n      PluginActions.fetchAllError(err);\n      throw new Error('Unable to fetch plugins');\n    })\n    .then(() => (activeFetch[path] = null));\n\n  return request;\n}\n\ntype EnableDisablePluginParams = Slugs;\n\n/**\n * Enables a plugin\n */\nexport function enablePlugin(params: EnableDisablePluginParams) {\n  addLoadingMessage(t('Enabling...'));\n  return doUpdate({...params, update: {enabled: true}, method: 'POST'})\n    .then(() => addSuccessMessage(t('Plugin was enabled')))\n    .catch(() => addErrorMessage(t('Unable to enable plugin')));\n}\n\n/**\n * Disables a plugin\n */\nexport function disablePlugin(params: EnableDisablePluginParams) {\n  addLoadingMessage(t('Disabling...'));\n  return doUpdate({...params, update: {enabled: false}, method: 'DELETE'})\n    .then(() => addSuccessMessage(t('Plugin was disabled')))\n    .catch(() => addErrorMessage(t('Unable to disable plugin')));\n}\n","import Reflux from 'reflux';\n\nconst PluginActions = Reflux.createActions([\n  'update',\n  'updateError',\n  'updateSuccess',\n  'fetchAll',\n  'fetchAllSuccess',\n  'fetchAllError',\n]);\n\nexport default PluginActions;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport plugins from 'app/plugins';\nimport PluginIcon from 'app/plugins/components/pluginIcon';\nimport space from 'app/styles/space';\nimport {Organization, Plugin, Project} from 'app/types';\nimport withApi from 'app/utils/withApi';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  data: Plugin;\n  onDisablePlugin: (data: Plugin) => void;\n  api: Client;\n  enabled?: boolean;\n};\n\ntype State = {\n  testResults: string;\n  loading?: boolean;\n};\n\nclass PluginConfig extends Component<Props, State> {\n  static defaultProps = {\n    onDisablePlugin: () => {},\n  };\n\n  state: State = {\n    loading: !plugins.isLoaded(this.props.data),\n    testResults: '',\n  };\n\n  componentDidMount() {\n    this.loadPlugin(this.props.data);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    this.loadPlugin(nextProps.data);\n  }\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    return !isEqual(nextState, this.state) || !isEqual(nextProps.data, this.props.data);\n  }\n\n  loadPlugin(data: Plugin) {\n    this.setState(\n      {\n        loading: true,\n      },\n      () => {\n        plugins.load(data, () => {\n          this.setState({loading: false});\n        });\n      }\n    );\n  }\n\n  getPluginEndpoint() {\n    const {organization, project, data} = this.props;\n    return `/projects/${organization.slug}/${project.slug}/plugins/${data.id}/`;\n  }\n\n  handleDisablePlugin = () => {\n    this.props.onDisablePlugin(this.props.data);\n  };\n\n  handleTestPlugin = async () => {\n    this.setState({testResults: ''});\n    addLoadingMessage(t('Sending test...'));\n\n    try {\n      const data = await this.props.api.requestPromise(this.getPluginEndpoint(), {\n        method: 'POST',\n        data: {\n          test: true,\n        },\n      });\n\n      this.setState({testResults: JSON.stringify(data.detail)});\n      addSuccessMessage(t('Test Complete!'));\n    } catch (_err) {\n      addErrorMessage(\n        t('An unexpected error occurred while testing your plugin. Please try again.')\n      );\n    }\n  };\n\n  createMarkup() {\n    return {__html: this.props.data.doc};\n  }\n\n  render() {\n    const {data} = this.props;\n    // If passed via props, use that value instead of from `data`\n    const enabled =\n      typeof this.props.enabled !== 'undefined' ? this.props.enabled : data.enabled;\n\n    return (\n      <Panel\n        className={`plugin-config ref-plugin-config-${data.id}`}\n        data-test-id=\"plugin-config\"\n      >\n        <PanelHeader hasButtons>\n          <PluginName>\n            <StyledPluginIcon pluginId={data.id} />\n            <span>{data.name}</span>\n          </PluginName>\n\n          {data.canDisable && enabled && (\n            <Actions>\n              {data.isTestable && (\n                <TestPluginButton onClick={this.handleTestPlugin} size=\"small\">\n                  {t('Test Plugin')}\n                </TestPluginButton>\n              )}\n              <Button size=\"small\" onClick={this.handleDisablePlugin}>\n                {t('Disable')}\n              </Button>\n            </Actions>\n          )}\n        </PanelHeader>\n\n        {data.status === 'beta' && (\n          <PanelAlert type=\"warning\">\n            {t('This plugin is considered beta and may change in the future.')}\n          </PanelAlert>\n        )}\n\n        {this.state.testResults !== '' && (\n          <PanelAlert type=\"info\">\n            <strong>Test Results</strong>\n            <div>{this.state.testResults}</div>\n          </PanelAlert>\n        )}\n\n        <StyledPanelBody>\n          <div dangerouslySetInnerHTML={this.createMarkup()} />\n          {this.state.loading ? (\n            <LoadingIndicator />\n          ) : (\n            plugins.get(data).renderSettings({\n              organization: this.props.organization,\n              project: this.props.project,\n            })\n          )}\n        </StyledPanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport {PluginConfig};\nexport default withApi(PluginConfig);\n\nconst PluginName = styled('div')`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: ${space(1)};\n`;\n\nconst Actions = styled('div')`\n  display: flex;\n`;\nconst TestPluginButton = styled(Button)`\n  margin-right: ${space(1)};\n`;\n\nconst StyledPanelBody = styled(PanelBody)`\n  padding: ${space(2)};\n  padding-bottom: 0;\n`;\n","import styled from '@emotion/styled';\nimport amixr from 'sentry-logos/logo-amixr.svg';\nimport asana from 'sentry-logos/logo-asana.svg';\nimport asayer from 'sentry-logos/logo-asayer.svg';\nimport aws from 'sentry-logos/logo-aws.svg';\nimport vsts from 'sentry-logos/logo-azure.svg';\nimport bitbucket from 'sentry-logos/logo-bitbucket.svg';\nimport bitbucketserver from 'sentry-logos/logo-bitbucket-server.svg';\nimport campfire from 'sentry-logos/logo-campfire.svg';\nimport clickup from 'sentry-logos/logo-clickup.svg';\nimport clubhouse from 'sentry-logos/logo-clubhouse.svg';\nimport datadog from 'sentry-logos/logo-datadog.svg';\nimport placeholder from 'sentry-logos/logo-default.svg';\nimport flowdock from 'sentry-logos/logo-flowdock.svg';\nimport fullstory from 'sentry-logos/logo-fullstory.svg';\nimport github from 'sentry-logos/logo-github.svg';\nimport githubActions from 'sentry-logos/logo-github-actions.svg';\nimport githubEnterprise from 'sentry-logos/logo-github-enterprise.svg';\nimport gitlab from 'sentry-logos/logo-gitlab.svg';\nimport heroku from 'sentry-logos/logo-heroku.svg';\nimport jira from 'sentry-logos/logo-jira.svg';\nimport jiraserver from 'sentry-logos/logo-jira-server.svg';\nimport komodor from 'sentry-logos/logo-komodor.svg';\nimport lighthouse from 'sentry-logos/logo-lighthouse.svg';\nimport linear from 'sentry-logos/logo-linear.svg';\nimport msteams from 'sentry-logos/logo-msteams.svg';\nimport netlify from 'sentry-logos/logo-netlify.svg';\nimport octohook from 'sentry-logos/logo-octohook.svg';\nimport opsgenie from 'sentry-logos/logo-opsgenie.svg';\nimport pagerduty from 'sentry-logos/logo-pagerduty.svg';\nimport phabricator from 'sentry-logos/logo-phabricator.svg';\nimport pivotal from 'sentry-logos/logo-pivotaltracker.svg';\nimport pushover from 'sentry-logos/logo-pushover.svg';\nimport quill from 'sentry-logos/logo-quill.svg';\nimport redmine from 'sentry-logos/logo-redmine.svg';\nimport rocketchat from 'sentry-logos/logo-rocketchat.svg';\nimport rookout from 'sentry-logos/logo-rookout.svg';\nimport segment from 'sentry-logos/logo-segment.svg';\nimport sentry from 'sentry-logos/logo-sentry.svg';\nimport slack from 'sentry-logos/logo-slack.svg';\nimport spikesh from 'sentry-logos/logo-spikesh.svg';\nimport split from 'sentry-logos/logo-split.svg';\nimport taiga from 'sentry-logos/logo-taiga.svg';\nimport teamwork from 'sentry-logos/logo-teamwork.svg';\nimport trello from 'sentry-logos/logo-trello.svg';\nimport twilio from 'sentry-logos/logo-twilio.svg';\nimport vercel from 'sentry-logos/logo-vercel.svg';\nimport victorops from 'sentry-logos/logo-victorops.svg';\nimport visualstudio from 'sentry-logos/logo-visualstudio.svg';\nimport youtrack from 'sentry-logos/logo-youtrack.svg';\nimport zepel from 'sentry-logos/logo-zepel.svg';\nimport zulip from 'sentry-logos/logo-zulip.svg';\n\n// Map of plugin id -> logo filename\nexport const DEFAULT_ICON = placeholder;\nexport const ICON_PATHS = {\n  _default: DEFAULT_ICON,\n  sentry,\n  browsers: sentry,\n  device: sentry,\n  interface_types: sentry,\n  os: sentry,\n  urls: sentry,\n  webhooks: sentry,\n\n  'amazon-sqs': aws,\n  aws_lambda: aws,\n  amixr,\n  asana,\n  asayer,\n  bitbucket,\n  bitbucket_pipelines: bitbucket,\n  bitbucket_server: bitbucketserver,\n  campfire,\n  clickup,\n  clubhouse,\n  datadog,\n  flowdock,\n  fullstory,\n  github,\n  github_actions: githubActions,\n  github_enterprise: githubEnterprise,\n  gitlab,\n  heroku,\n  jira,\n  'jira-atlassian-connect': jira,\n  'jira-ac': jira,\n  jira_server: jiraserver,\n  komodor,\n  lighthouse,\n  linear,\n  msteams,\n  netlify,\n  octohook,\n  opsgenie,\n  pagerduty,\n  phabricator,\n  pivotal,\n  pushover,\n  quill,\n  redmine,\n  rocketchat,\n  rookout,\n  segment,\n  slack,\n  spikesh,\n  split,\n  taiga,\n  teamwork,\n  trello,\n  twilio,\n  visualstudio,\n  vsts,\n  youtrack,\n  vercel,\n  victorops,\n  zepel,\n  zulip,\n};\n\ntype Props = {\n  pluginId?: string;\n  size?: number;\n};\n\nconst PluginIcon = styled('div')<Props>`\n  position: relative;\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n  border-radius: 2px;\n  border: 0;\n  display: inline-block;\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-image: url(${({pluginId}) =>\n    (pluginId !== undefined && ICON_PATHS[pluginId]) || DEFAULT_ICON});\n`;\n\nPluginIcon.defaultProps = {\n  pluginId: '_default',\n  size: 20,\n};\n\nexport default PluginIcon;\n","module.exports = __webpack_public_path__ + \"logos/logo-amixr.2d0914.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-asana.1fc18d.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-asayer.8c350d.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-aws.0dca02.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-azure.7125b5.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-bitbucket-server.427a04.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-bitbucket.5bd67b.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-campfire.3f5a91.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-clickup.705b61.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-clubhouse.626f1e.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-datadog.9ef274.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-default.ee69fb.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-flowdock.847a8d.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-fullstory.39d007.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-github-actions.702263.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-github-enterprise.aaae2f.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-github.d4d20b.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-gitlab.c2da21.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-heroku.86a7ee.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-jira-server.892d78.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-jira.a44d09.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-komodor.f81111.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-lighthouse.d75bfc.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-linear.f40d47.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-msteams.efb47c.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-netlify.c7eb07.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-octohook.41166e.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-opsgenie.d24d05.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-pagerduty.f7086d.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-phabricator.0c276f.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-pivotaltracker.8087b3.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-pushover.3e2324.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-quill.bcb021.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-redmine.e7bc8d.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-rocketchat.6797e0.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-rookout.6ab44f.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-segment.d97dfc.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-sentry.177d3a.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-slack.879bbb.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-spikesh.5158f6.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-split.3d51d0.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-taiga.5f4c0f.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-teamwork.379c9c.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-trello.7b563e.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-twilio.cbacbf.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-vercel.8507d2.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-victorops.aa439a.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-visualstudio.0ba69e.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-youtrack.0ef11d.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-zepel.3dfd9f.svg\";","module.exports = __webpack_public_path__ + \"logos/logo-zulip.4a5895.svg\";"],"sourceRoot":""}