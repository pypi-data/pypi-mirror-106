{"version":3,"sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/utils/discover/charts.tsx","webpack:///./app/views/eventsV2/table/cellAction.tsx"],"names":["SortLink","direction","this","props","StyledIconArrow","size","align","title","canSort","generateSortLink","onClick","target","StyledLink","to","renderArrow","StyledNonLink","React","forwardProps","omit","p","IconArrow","tooltipFormatter","value","seriesName","aggregateOutputType","toLocaleString","formatPercentage","getDuration","toString","axisLabelFormatter","abbreviation","formatAbbreviatedNumber","axisDuration","WEEK","label","toFixed","t","DAY","HOUR","MINUTE","SECOND","Actions","updateQuery","results","action","column","key","name","type","Array","isArray","Set","length","ADD","removeTagValue","addTagValues","removeTag","currentFilters","getTagValues","String","setTagValues","EXCLUDE","negation","currentNegations","SHOW_GREATER_THAN","SHOW_LESS_THAN","TRANSACTION","RELEASE","DRILLDOWN","Error","CellAction","isHovering","isOpen","event","menuEl","Element","contains","setState","state","preventDefault","portal","document","getElementById","createElement","setAttribute","body","appendChild","portalEl","_props","prevState","addEventListener","handleClickOutside","removeEventListener","dataRow","handleCellAction","allowActions","isRelativeSpanOperationBreakdownField","getAggregateAlias","kind","field","actions","addMenuItem","menuItem","includes","push","ActionItem","data-test-id","MenuButtons","stopPropagation","menuButtons","renderMenuButtons","menu","ReactDOM","placement","modifiers","hide","enabled","preventOverflow","padding","boundariesElement","popperRef","ref","style","arrowProps","Menu","MenuArrow","data-placement","MenuRoot","MenuButton","handleMenuToggle","color","children","Container","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","renderMenu","space","theme","zIndex","tooltip","background","border","borderRadius","dropShadowHeavy","innerBorder","fontSizeMedium","backgroundSecondary","alpha","string"],"mappings":"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","file":"app_components_gridEditable_sortLink_tsx-app_utils_discover_charts_tsx-app_views_eventsV2_tab-97a381.8ab969050a7ed185443f.js","sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'app/components/links/link';\nimport {IconArrow} from 'app/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  title: React.ReactNode;\n  direction: Directions;\n  canSort: boolean;\n\n  generateSortLink: () => LocationDescriptorObject | undefined;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nclass SortLink extends React.Component<Props> {\n  renderArrow() {\n    const {direction} = this.props;\n    if (!direction) {\n      return null;\n    }\n\n    if (direction === 'desc') {\n      return <StyledIconArrow size=\"xs\" direction=\"down\" />;\n    }\n    return <StyledIconArrow size=\"xs\" direction=\"up\" />;\n  }\n\n  render() {\n    const {align, title, canSort, generateSortLink, onClick} = this.props;\n\n    const target = generateSortLink();\n\n    if (!target || !canSort) {\n      return <StyledNonLink align={align}>{title}</StyledNonLink>;\n    }\n\n    return (\n      <StyledLink align={align} to={target} onClick={onClick}>\n        {title} {this.renderArrow()}\n      </StyledLink>\n    );\n  }\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import {t} from 'app/locale';\nimport {aggregateOutputType} from 'app/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'app/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover result values\n */\nexport function tooltipFormatter(value: number, seriesName: string = ''): string {\n  switch (aggregateOutputType(seriesName)) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  seriesName: string,\n  abbreviation: boolean = false\n): string {\n  switch (aggregateOutputType(seriesName)) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number): string {\n  if (value === 0) {\n    return '0';\n  }\n  if (value >= WEEK) {\n    const label = (value / WEEK).toFixed(0);\n    return t('%swk', label);\n  }\n  if (value >= DAY) {\n    const label = (value / DAY).toFixed(0);\n    return t('%sd', label);\n  }\n  if (value >= HOUR) {\n    const label = (value / HOUR).toFixed(0);\n    return t('%shr', label);\n  }\n  if (value >= MINUTE) {\n    const label = (value / MINUTE).toFixed(0);\n    return t('%smin', label);\n  }\n  if (value >= SECOND) {\n    const label = (value / SECOND).toFixed(0);\n    return t('%ss', label);\n  }\n  const label = value.toFixed(0);\n  return t('%sms', label);\n}\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Manager, Popper, Reference} from 'react-popper';\nimport styled from '@emotion/styled';\nimport color from 'color';\nimport * as PopperJS from 'popper.js';\n\nimport {IconEllipsis} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {TableDataRow} from 'app/utils/discover/discoverQuery';\nimport {\n  getAggregateAlias,\n  isRelativeSpanOperationBreakdownField,\n} from 'app/utils/discover/fields';\nimport {getDuration} from 'app/utils/formatters';\nimport {QueryResults} from 'app/utils/tokenizeSearch';\n\nimport {TableColumn} from './types';\n\nexport enum Actions {\n  ADD = 'add',\n  EXCLUDE = 'exclude',\n  SHOW_GREATER_THAN = 'show_greater_than',\n  SHOW_LESS_THAN = 'show_less_than',\n  TRANSACTION = 'transaction',\n  RELEASE = 'release',\n  DRILLDOWN = 'drilldown',\n}\n\nexport function updateQuery(\n  results: QueryResults,\n  action: Actions,\n  column: TableColumn<keyof TableDataRow>,\n  value: React.ReactText | string[]\n) {\n  const key = column.name;\n\n  if (column.type === 'duration' && typeof value === 'number') {\n    // values are assumed to be in milliseconds\n    value = getDuration(value / 1000, 2, true);\n  }\n\n  // De-duplicate array values\n  if (Array.isArray(value)) {\n    value = [...new Set(value)];\n    if (value.length === 1) {\n      value = value[0];\n    }\n  }\n\n  switch (action) {\n    case Actions.ADD:\n      // If the value is null/undefined create a has !has condition.\n      if (value === null || value === undefined) {\n        // Adding a null value is the same as excluding truthy values.\n        // Remove inclusion if it exists.\n        results.removeTagValue('has', key);\n        results.addTagValues('!has', [key]);\n      } else {\n        // Remove exclusion if it exists.\n        results.removeTag(`!${key}`);\n\n        if (Array.isArray(value)) {\n          // For array values, add to existing filters\n          const currentFilters = results.getTagValues(key);\n          value = [...new Set([...currentFilters, ...value])];\n        } else {\n          value = [String(value)];\n        }\n\n        results.setTagValues(key, value);\n      }\n      break;\n    case Actions.EXCLUDE:\n      if (value === null || value === undefined) {\n        // Excluding a null value is the same as including truthy values.\n        // Remove exclusion if it exists.\n        results.removeTagValue('!has', key);\n        results.addTagValues('has', [key]);\n      } else {\n        // Remove positive if it exists.\n        results.removeTag(key);\n        // Negations should stack up.\n        const negation = `!${key}`;\n        value = Array.isArray(value) ? value : [String(value)];\n        const currentNegations = results.getTagValues(negation);\n        value = [...new Set([...currentNegations, ...value])];\n        results.setTagValues(negation, value);\n      }\n      break;\n    case Actions.SHOW_GREATER_THAN: {\n      // Remove query token if it already exists\n      results.setTagValues(key, [`>${value}`]);\n      break;\n    }\n    case Actions.SHOW_LESS_THAN: {\n      // Remove query token if it already exists\n      results.setTagValues(key, [`<${value}`]);\n      break;\n    }\n    // these actions do not modify the query in any way,\n    // instead they have side effects\n    case Actions.TRANSACTION:\n    case Actions.RELEASE:\n    case Actions.DRILLDOWN:\n      break;\n    default:\n      throw new Error(`Unknown action type. ${action}`);\n  }\n}\n\ntype Props = {\n  column: TableColumn<keyof TableDataRow>;\n  dataRow: TableDataRow;\n  children: React.ReactNode;\n  handleCellAction: (action: Actions, value: React.ReactText) => void;\n\n  // allow list of actions to display on the context menu\n  allowActions?: Actions[];\n};\n\ntype State = {\n  isHovering: boolean;\n  isOpen: boolean;\n};\n\nclass CellAction extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    let portal = document.getElementById('cell-action-portal');\n    if (!portal) {\n      portal = document.createElement('div');\n      portal.setAttribute('id', 'cell-action-portal');\n      document.body.appendChild(portal);\n    }\n    this.portalEl = portal;\n    this.menuEl = null;\n  }\n\n  state: State = {\n    isHovering: false,\n    isOpen: false,\n  };\n\n  componentDidUpdate(_props: Props, prevState: State) {\n    if (this.state.isOpen && prevState.isOpen === false) {\n      document.addEventListener('click', this.handleClickOutside, true);\n    }\n    if (this.state.isOpen === false && prevState.isOpen) {\n      document.removeEventListener('click', this.handleClickOutside, true);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside, true);\n  }\n\n  private portalEl: Element;\n  private menuEl: Element | null;\n\n  handleClickOutside = (event: MouseEvent) => {\n    if (!this.menuEl) {\n      return;\n    }\n    if (!(event.target instanceof Element)) {\n      return;\n    }\n    if (this.menuEl.contains(event.target)) {\n      return;\n    }\n    this.setState({isOpen: false, isHovering: false});\n  };\n\n  handleMouseEnter = () => {\n    this.setState({isHovering: true});\n  };\n\n  handleMouseLeave = () => {\n    this.setState(state => {\n      // Don't hide the button if the menu is open.\n      if (state.isOpen) {\n        return state;\n      }\n      return {...state, isHovering: false};\n    });\n  };\n\n  handleMenuToggle = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    this.setState({isOpen: !this.state.isOpen});\n  };\n\n  renderMenuButtons() {\n    const {dataRow, column, handleCellAction, allowActions} = this.props;\n\n    // Do not render context menu buttons for the span op breakdown field.\n    if (isRelativeSpanOperationBreakdownField(column.name)) {\n      return null;\n    }\n\n    const fieldAlias = getAggregateAlias(column.name);\n\n    let value = dataRow[fieldAlias];\n\n    // error.handled is a strange field where null = true.\n    if (\n      Array.isArray(value) &&\n      value[0] === null &&\n      column.column.kind === 'field' &&\n      column.column.field === 'error.handled'\n    ) {\n      value = 1;\n    }\n    const actions: React.ReactNode[] = [];\n\n    function addMenuItem(action: Actions, menuItem: React.ReactNode) {\n      if (\n        (Array.isArray(allowActions) && allowActions.includes(action)) ||\n        !allowActions\n      ) {\n        actions.push(menuItem);\n      }\n    }\n\n    if (\n      !['duration', 'number', 'percentage'].includes(column.type) ||\n      (value === null && column.column.kind === 'field')\n    ) {\n      addMenuItem(\n        Actions.ADD,\n        <ActionItem\n          key=\"add-to-filter\"\n          data-test-id=\"add-to-filter\"\n          onClick={() => handleCellAction(Actions.ADD, value)}\n        >\n          {t('Add to filter')}\n        </ActionItem>\n      );\n\n      if (column.type !== 'date') {\n        addMenuItem(\n          Actions.EXCLUDE,\n          <ActionItem\n            key=\"exclude-from-filter\"\n            data-test-id=\"exclude-from-filter\"\n            onClick={() => handleCellAction(Actions.EXCLUDE, value)}\n          >\n            {t('Exclude from filter')}\n          </ActionItem>\n        );\n      }\n    }\n\n    if (\n      ['date', 'duration', 'integer', 'number', 'percentage'].includes(column.type) &&\n      value !== null\n    ) {\n      addMenuItem(\n        Actions.SHOW_GREATER_THAN,\n        <ActionItem\n          key=\"show-values-greater-than\"\n          data-test-id=\"show-values-greater-than\"\n          onClick={() => handleCellAction(Actions.SHOW_GREATER_THAN, value)}\n        >\n          {t('Show values greater than')}\n        </ActionItem>\n      );\n\n      addMenuItem(\n        Actions.SHOW_LESS_THAN,\n        <ActionItem\n          key=\"show-values-less-than\"\n          data-test-id=\"show-values-less-than\"\n          onClick={() => handleCellAction(Actions.SHOW_LESS_THAN, value)}\n        >\n          {t('Show values less than')}\n        </ActionItem>\n      );\n    }\n\n    if (column.column.kind === 'field' && column.column.field === 'transaction') {\n      addMenuItem(\n        Actions.TRANSACTION,\n        <ActionItem\n          key=\"transaction-summary\"\n          data-test-id=\"transaction-summary\"\n          onClick={() => handleCellAction(Actions.TRANSACTION, value)}\n        >\n          {t('Go to summary')}\n        </ActionItem>\n      );\n    }\n\n    if (column.column.kind === 'field' && column.column.field === 'release' && value) {\n      addMenuItem(\n        Actions.RELEASE,\n        <ActionItem\n          key=\"release\"\n          data-test-id=\"release\"\n          onClick={() => handleCellAction(Actions.RELEASE, value)}\n        >\n          {t('Go to release')}\n        </ActionItem>\n      );\n    }\n\n    if (\n      column.column.kind === 'function' &&\n      column.column.function[0] === 'count_unique'\n    ) {\n      addMenuItem(\n        Actions.DRILLDOWN,\n        <ActionItem\n          key=\"drilldown\"\n          data-test-id=\"per-cell-drilldown\"\n          onClick={() => handleCellAction(Actions.DRILLDOWN, value)}\n        >\n          {t('View Stacks')}\n        </ActionItem>\n      );\n    }\n\n    if (actions.length === 0) {\n      return null;\n    }\n\n    return (\n      <MenuButtons\n        onClick={event => {\n          // prevent clicks from propagating further\n          event.stopPropagation();\n        }}\n      >\n        {actions}\n      </MenuButtons>\n    );\n  }\n\n  renderMenu() {\n    const {isOpen} = this.state;\n\n    const menuButtons = this.renderMenuButtons();\n\n    if (menuButtons === null) {\n      // do not render the menu if there are no per cell actions\n      return null;\n    }\n\n    const modifiers: PopperJS.Modifiers = {\n      hide: {\n        enabled: false,\n      },\n      preventOverflow: {\n        padding: 10,\n        enabled: true,\n        boundariesElement: 'viewport',\n      },\n    };\n    let menu: React.ReactPortal | null = null;\n\n    if (isOpen) {\n      menu = ReactDOM.createPortal(\n        <Popper placement=\"top\" modifiers={modifiers}>\n          {({ref: popperRef, style, placement, arrowProps}) => (\n            <Menu\n              ref={ref => {\n                (popperRef as Function)(ref);\n                this.menuEl = ref;\n              }}\n              style={style}\n            >\n              <MenuArrow\n                ref={arrowProps.ref}\n                data-placement={placement}\n                style={arrowProps.style}\n              />\n              {menuButtons}\n            </Menu>\n          )}\n        </Popper>,\n        this.portalEl\n      );\n    }\n\n    return (\n      <MenuRoot>\n        <Manager>\n          <Reference>\n            {({ref}) => (\n              <MenuButton ref={ref} onClick={this.handleMenuToggle}>\n                <IconEllipsis size=\"sm\" data-test-id=\"cell-action\" color=\"blue300\" />\n              </MenuButton>\n            )}\n          </Reference>\n          {menu}\n        </Manager>\n      </MenuRoot>\n    );\n  }\n\n  render() {\n    const {children} = this.props;\n    const {isHovering} = this.state;\n\n    return (\n      <Container\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        {children}\n        {isHovering && this.renderMenu()}\n      </Container>\n    );\n  }\n}\n\nexport default CellAction;\n\nconst Container = styled('div')`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nconst MenuRoot = styled('div')`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst Menu = styled('div')`\n  margin: ${space(1)} 0;\n\n  z-index: ${p => p.theme.zIndex.tooltip};\n`;\n\nconst MenuButtons = styled('div')`\n  background: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  box-shadow: ${p => p.theme.dropShadowHeavy};\n  overflow: hidden;\n`;\n\nconst MenuArrow = styled('span')`\n  position: absolute;\n  width: 18px;\n  height: 9px;\n  /* left and top set by popper */\n\n  &[data-placement*='bottom'] {\n    margin-top: -9px;\n    &::before {\n      border-width: 0 9px 9px 9px;\n      border-color: transparent transparent ${p => p.theme.border} transparent;\n    }\n    &::after {\n      top: 1px;\n      left: 1px;\n      border-width: 0 8px 8px 8px;\n      border-color: transparent transparent ${p => p.theme.background} transparent;\n    }\n  }\n  &[data-placement*='top'] {\n    margin-bottom: -8px;\n    bottom: 0;\n    &::before {\n      border-width: 9px 9px 0 9px;\n      border-color: ${p => p.theme.border} transparent transparent transparent;\n    }\n    &::after {\n      bottom: 1px;\n      left: 1px;\n      border-width: 8px 8px 0 8px;\n      border-color: ${p => p.theme.background} transparent transparent transparent;\n    }\n  }\n\n  &::before,\n  &::after {\n    width: 0;\n    height: 0;\n    content: '';\n    display: block;\n    position: absolute;\n    border-style: solid;\n  }\n`;\n\nconst ActionItem = styled('button')`\n  display: block;\n  width: 100%;\n  padding: ${space(1)} ${space(2)};\n  background: transparent;\n\n  outline: none;\n  border: 0;\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-align: left;\n  line-height: 1.2;\n\n  &:hover {\n    background: ${p => p.theme.backgroundSecondary};\n  }\n\n  &:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst MenuButton = styled('button')`\n  display: flex;\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  justify-content: center;\n  align-items: center;\n\n  background: ${p => color(p.theme.background).alpha(0.85).string()};\n  border-radius: ${p => p.theme.borderRadius};\n  border: 1px solid ${p => p.theme.border};\n  cursor: pointer;\n  outline: none;\n`;\n"],"sourceRoot":""}