{"version":3,"sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/utils/isActiveSuperuser.tsx","webpack:///./app/components/fileSize.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/sourceMapsArtifactRow.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/index.tsx"],"names":["Role","user","ConfigStore","this","props","organization","role","availableRoles","currentRole","isSuperuser","Cookies","undefined","Array","isArray","roleIds","map","r","id","includes","requiredIndex","indexOf","children","hasRole","isRenderFunc","React","withOrganization","FileSize","className","bytes","getDynamicText","value","formatBytesBase2","fixed","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","getTitle","renderComponent","AsyncComponent","SourceMapsArtifactRow","artifact","onDelete","downloadUrl","downloadRole","name","size","dateCreated","dist","handleDeleteClick","Fragment","NameColumn","Name","t","TimeAndDistWrapper","TimeWrapper","date","StyledTag","type","tooltipText","SizeColumn","ActionsColumn","gap","disabled","icon","href","access","hasAccess","message","onConfirm","label","space","p","theme","fontSizeMedium","subText","Tag","ProjectSourceMapsDetail","query","location","router","push","cursor","addLoadingMessage","api","requestPromise","getArtifactsUrl","method","fetchData","addSuccessMessage","addErrorMessage","params","orgId","projectId","routeTitleGen","formatVersion","artifacts","getQuery","encodeURIComponent","decodeScalar","renderBody","state","artifactApiUrl","baseUrl","length","handleArtifactDelete","debugFilesRole","loading","artifactsPageLinks","project","StyledSettingsPageHeader","Title","version","tooltipRawVersion","anchor","truncate","action","StyledButtonBar","ReleaseButton","to","handleArchiveDelete","placeholder","onSearch","handleSearch","StyledPanelTable","headers","emptyMessage","getEmptyMessage","isEmpty","isLoading","renderArtifacts","pageLinks","SettingsPageHeader","breakpoints","ButtonBar","PanelTable","Button"],"mappings":"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","file":"app_views_settings_projectSourceMaps_detail_index_tsx.1243cfa4aa4a8c253c0e.js","sourcesContent":["import * as React from 'react';\n\nimport ConfigStore from 'app/stores/configStore';\nimport {Organization} from 'app/types';\nimport {isActiveSuperuser} from 'app/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'app/utils/isRenderFunc';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactNode;\n\ntype Props = {\n  /**\n   * Minimum required role\n   */\n  role: string;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactNode | ChildrenRenderFn;\n};\n\nclass Role extends React.Component<Props> {\n  hasRole() {\n    const user = ConfigStore.get('user');\n    const {organization, role} = this.props;\n    const {availableRoles} = organization;\n    const currentRole = organization.role ?? '';\n\n    if (!user) {\n      return false;\n    }\n\n    if (isActiveSuperuser()) {\n      return true;\n    }\n\n    if (!Array.isArray(availableRoles)) {\n      return false;\n    }\n\n    const roleIds = availableRoles.map(r => r.id);\n\n    if (!roleIds.includes(role) || !roleIds.includes(currentRole)) {\n      return false;\n    }\n\n    const requiredIndex = roleIds.indexOf(role);\n    const currentIndex = roleIds.indexOf(currentRole);\n    return currentIndex >= requiredIndex;\n  }\n\n  render() {\n    const {children} = this.props;\n    const hasRole = this.hasRole();\n\n    if (isRenderFunc<ChildrenRenderFn>(children)) {\n      return children({hasRole});\n    }\n\n    return hasRole && children ? children : null;\n  }\n}\n\nexport default withOrganization(Role);\n","import Cookies from 'js-cookie';\n\nimport ConfigStore from 'app/stores/configStore';\n\nconst SUPERUSER_COOKIE_NAME = 'su';\n\n/**\n * Checking for just isSuperuser on a config object may not be enough as backend often checks for *active* superuser.\n * We therefore check both isSuperuser flag AND superuser session cookie.\n */\nexport function isActiveSuperuser() {\n  const {isSuperuser} = ConfigStore.get('user') || {};\n\n  if (isSuperuser) {\n    /**\n     * Superuser cookie cannot be checked for existence as it is HttpOnly.\n     * As a workaround, we try to change it to something else and if that fails we can assume that it's being present.\n     * There may be an edgecase where it's present and expired but for current usage it's not a big deal.\n     */\n    Cookies.set(SUPERUSER_COOKIE_NAME, 'test');\n\n    if (Cookies.get(SUPERUSER_COOKIE_NAME) === undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import {formatBytesBase2} from 'app/utils';\nimport getDynamicText from 'app/utils/getDynamicText';\n\ntype Props = {\n  className?: string;\n  bytes: number;\n};\n\nfunction FileSize(props: Props) {\n  const {className, bytes} = props;\n\n  return (\n    <span className={className}>\n      {getDynamicText({value: formatBytesBase2(bytes), fixed: 'xx KB'})}\n    </span>\n  );\n}\n\nexport default FileSize;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'app/components/acl/access';\nimport Role from 'app/components/acl/role';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport Confirm from 'app/components/confirm';\nimport FileSize from 'app/components/fileSize';\nimport Tag from 'app/components/tag';\nimport TimeSince from 'app/components/timeSince';\nimport Tooltip from 'app/components/tooltip';\nimport {IconClock, IconDelete, IconDownload} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Artifact} from 'app/types';\n\ntype Props = {\n  artifact: Artifact;\n  onDelete: (id: string) => void;\n  downloadUrl: string;\n  downloadRole: string;\n};\n\nconst SourceMapsArtifactRow = ({\n  artifact,\n  onDelete,\n  downloadUrl,\n  downloadRole,\n}: Props) => {\n  const {name, size, dateCreated, id, dist} = artifact;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <Fragment>\n      <NameColumn>\n        <Name>{name || `(${t('empty')})`}</Name>\n        <TimeAndDistWrapper>\n          <TimeWrapper>\n            <IconClock size=\"sm\" />\n            <TimeSince date={dateCreated} />\n          </TimeWrapper>\n          <StyledTag\n            type={dist ? 'info' : undefined}\n            tooltipText={dist ? undefined : t('No distribution set')}\n          >\n            {dist ?? t('none')}\n          </StyledTag>\n        </TimeAndDistWrapper>\n      </NameColumn>\n      <SizeColumn>\n        <FileSize bytes={size} />\n      </SizeColumn>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Role role={downloadRole}>\n            {({hasRole}) => (\n              <Tooltip\n                title={t('You do not have permission to download artifacts.')}\n                disabled={hasRole}\n              >\n                <Button\n                  size=\"small\"\n                  icon={<IconDownload size=\"sm\" />}\n                  disabled={!hasRole}\n                  href={downloadUrl}\n                  title={hasRole ? t('Download Artifact') : undefined}\n                />\n              </Tooltip>\n            )}\n          </Role>\n\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete artifacts.')}\n              >\n                <Confirm\n                  message={t('Are you sure you want to remove this artifact?')}\n                  onConfirm={handleDeleteClick}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"small\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={hasAccess ? t('Remove Artifact') : undefined}\n                    label={t('Remove Artifact')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </Fragment>\n  );\n};\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SizeColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n  align-items: center;\n`;\n\nconst ActionsColumn = styled(SizeColumn)``;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeAndDistWrapper = styled('div')`\n  width: 100%;\n  display: flex;\n  margin-top: ${space(1)};\n  align-items: center;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  grid-gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeMedium};\n  align-items: center;\n  color: ${p => p.theme.subText};\n`;\n\nconst StyledTag = styled(Tag)`\n  margin-left: ${space(1)};\n`;\n\nexport default SourceMapsArtifactRow;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport Access from 'app/components/acl/access';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport Confirm from 'app/components/confirm';\nimport Pagination from 'app/components/pagination';\nimport {PanelTable} from 'app/components/panels';\nimport SearchBar from 'app/components/searchBar';\nimport TextOverflow from 'app/components/textOverflow';\nimport Tooltip from 'app/components/tooltip';\nimport Version from 'app/components/version';\nimport {IconDelete} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Artifact, Organization, Project} from 'app/types';\nimport {formatVersion} from 'app/utils/formatters';\nimport {decodeScalar} from 'app/utils/queryString';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nimport SourceMapsArtifactRow from './sourceMapsArtifactRow';\n\ntype RouteParams = {orgId: string; projectId: string; name: string};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  artifacts: Artifact[];\n};\n\nclass ProjectSourceMapsDetail extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId, name} = this.props.params;\n\n    return routeTitleGen(t('Archive %s', formatVersion(name)), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      artifacts: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['artifacts', this.getArtifactsUrl(), {query: {query: this.getQuery()}}]];\n  }\n\n  getArtifactsUrl() {\n    const {orgId, projectId, name} = this.props.params;\n\n    return `/projects/${orgId}/${projectId}/releases/${encodeURIComponent(name)}/files/`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  handleArtifactDelete = async (id: string) => {\n    addLoadingMessage(t('Removing artifact\\u2026'));\n\n    try {\n      await this.api.requestPromise(`${this.getArtifactsUrl()}${id}/`, {\n        method: 'DELETE',\n      });\n      this.fetchData();\n      addSuccessMessage(t('Artifact removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifact. Please try again.'));\n    }\n  };\n\n  handleArchiveDelete = async () => {\n    const {orgId, projectId, name} = this.props.params;\n\n    addLoadingMessage(t('Removing artifacts\\u2026'));\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${orgId}/${projectId}/files/source-maps/`,\n        {\n          method: 'DELETE',\n          query: {name},\n        }\n      );\n      this.fetchData();\n      addSuccessMessage(t('Artifacts removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifacts. Please try again.'));\n    }\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return decodeScalar(query);\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no artifacts that match your search.');\n    }\n\n    return t('There are no artifacts in this archive.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderArtifacts() {\n    const {organization} = this.props;\n    const {artifacts} = this.state;\n    const artifactApiUrl = this.api.baseUrl + this.getArtifactsUrl();\n\n    if (!artifacts.length) {\n      return null;\n    }\n\n    return artifacts.map(artifact => {\n      return (\n        <SourceMapsArtifactRow\n          key={artifact.id}\n          artifact={artifact}\n          onDelete={this.handleArtifactDelete}\n          downloadUrl={`${artifactApiUrl}${artifact.id}/?download=1`}\n          downloadRole={organization.debugFilesRole}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, artifacts, artifactsPageLinks} = this.state;\n    const {name, orgId} = this.props.params;\n    const {project} = this.props;\n\n    return (\n      <Fragment>\n        <StyledSettingsPageHeader\n          title={\n            <Title>\n              {t('Archive')}&nbsp;\n              <TextOverflow>\n                <Version version={name} tooltipRawVersion anchor={false} truncate />\n              </TextOverflow>\n            </Title>\n          }\n          action={\n            <StyledButtonBar gap={1}>\n              <ReleaseButton\n                to={`/organizations/${orgId}/releases/${encodeURIComponent(\n                  name\n                )}/?project=${project.id}`}\n              >\n                {t('Go to Release')}\n              </ReleaseButton>\n              <Access access={['project:releases']}>\n                {({hasAccess}) => (\n                  <Tooltip\n                    disabled={hasAccess}\n                    title={t('You do not have permission to delete artifacts.')}\n                  >\n                    <Confirm\n                      message={t(\n                        'Are you sure you want to remove all artifacts in this archive?'\n                      )}\n                      onConfirm={this.handleArchiveDelete}\n                      disabled={!hasAccess}\n                    >\n                      <Button\n                        icon={<IconDelete size=\"sm\" />}\n                        title={t('Remove All Artifacts')}\n                        label={t('Remove All Artifacts')}\n                        disabled={!hasAccess}\n                      />\n                    </Confirm>\n                  </Tooltip>\n                )}\n              </Access>\n\n              <SearchBar\n                placeholder={t('Filter artifacts')}\n                onSearch={this.handleSearch}\n                query={this.getQuery()}\n              />\n            </StyledButtonBar>\n          }\n        />\n\n        <StyledPanelTable\n          headers={[\n            t('Artifact'),\n            <SizeColumn key=\"size\">{t('File Size')}</SizeColumn>,\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={artifacts.length === 0}\n          isLoading={loading}\n        >\n          {this.renderArtifacts()}\n        </StyledPanelTable>\n        <Pagination pageLinks={artifactsPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledSettingsPageHeader = styled(SettingsPageHeader)`\n  /*\n    ugly selector to make header work on mobile\n    we can refactor this once we start making other settings more responsive\n  */\n  > div {\n    @media (max-width: ${p => p.theme.breakpoints[2]}) {\n      display: block;\n    }\n    > div {\n      min-width: 0;\n      @media (max-width: ${p => p.theme.breakpoints[2]}) {\n        margin-bottom: ${space(2)};\n      }\n    }\n  }\n`;\n\nconst Title = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  justify-content: flex-start;\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: minmax(220px, 1fr) max-content 120px;\n`;\n\nconst ReleaseButton = styled(Button)`\n  white-space: nowrap;\n`;\n\nconst SizeColumn = styled('div')`\n  text-align: right;\n`;\n\nexport default ProjectSourceMapsDetail;\n"],"sourceRoot":""}