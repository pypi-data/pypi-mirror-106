{"version":3,"sources":["webpack:///./app/actionCreators/dashboards.tsx","webpack:///./app/components/activity/item/avatar.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/dashboardsV2/contextMenu.tsx","webpack:///./app/views/dashboardsV2/manage/dashboardCard.tsx","webpack:///./app/views/dashboardsV2/manage/dashboardList.tsx","webpack:///./app/views/dashboardsV2/manage/index.tsx","webpack:///./app/views/dashboardsV2/types.tsx","webpack:///./app/views/dashboardsV2/utils.tsx","webpack:///./images/dashboard/widget-area.svg","webpack:///./images/dashboard/widget-bar.svg","webpack:///./images/dashboard/widget-big-number.svg","webpack:///./images/dashboard/widget-line-1.svg","webpack:///./images/dashboard/widget-table.svg","webpack:///./images/dashboard/widget-world-map.svg"],"names":["createDashboard","api","orgId","newDashboard","duplicate","title","widgets","promise","requestPromise","method","data","response","errorResponse","responseJSON","addErrorMessage","t","fetchDashboard","dashboardId","updateDashboard","dashboard","id","deleteDashboard","validateWidget","widget","ActivityAvatar","className","type","user","size","SystemAvatar","StyledIconSentry","width","height","shape","p","theme","textColor","background","IconSentry","SentryDocumentTitle","orgSlug","projectSlug","children","docTitle","AsyncView","this","getTitle","renderComponent","AsyncComponent","ContextMenu","isOpen","getRootProps","getActorProps","getMenuProps","topLevelCx","classNames","open","MoreOptions","DropdownTarget","onClick","event","stopPropagation","preventDefault","data-test-id","DashboardCard","detail","createdBy","renderWidgets","dateStatus","to","onEventClick","renderContextMenu","StyledDashboardCard","interactive","CardHeader","CardContent","Title","Detail","AvatarWrapper","CardBody","CardFooter","DateSelected","DateStatus","border","space","Card","overflowEllipsis","text","familyMono","fontSizeSmall","gray300","gray100","purple300","DashboardList","organization","location","dashboards","pageLinks","onDashboardsChange","miniWidget","displayType","DisplayType","WidgetBar","WidgetArea","WidgetBigNumber","WidgetTable","WidgetWorldMap","WidgetLine","Fragment","length","DashboardGrid","map","index","pathname","slug","query","tn","widgetDisplay","dateCreated","date","undefined","trackAnalyticsEvent","eventKey","eventName","organization_id","parseInt","dashboard_id","handleClick","WidgetGrid","i","BigNumberWidgetWrapper","src","MiniWidgetWrapper","then","addSuccessMessage","handleDelete","disabled","dashboardDetail","cloneDashboard","handleDuplicate","PaginationRow","onCursor","cursor","path","direction","offset","Number","split","newQuery","browserHistory","breakpoints","Pagination","withApi","SORT_OPTIONS","label","value","ManageDashboards","props","sort","pick","getActiveSort","per_page","urlSort","decodeScalar","find","item","reloadData","router","push","activeSort","StyledActions","StyledSearchBar","defaultQuery","getQuery","placeholder","onSearch","handleSearch","StyledDropdownControl","buttonProps","prefix","onSelect","handleSortChange","isActive","state","dashboardsPageLinks","features","renderDisabled","renderNoAccess","StyledPageContent","StyledPageHeader","onCreate","priority","icon","isCircled","renderActions","renderDashboards","PageContent","SearchBar","headerFontSize","DropdownControl","withOrganization","DashboardState","cloneDeep","eventViewFromWidget","selection","datetime","start","end","statsPeriod","period","projects","environments","EventView","name","version","fields","conditions","orderby","range","getUtcDateString","environment","module","exports"],"mappings":"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","file":"app_views_dashboardsV2_manage_index_tsx.87669df8cf7fb879dcba.js","sourcesContent":["import {addErrorMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport {DashboardDetails, Widget} from 'app/views/dashboardsV2/types';\n\nexport function createDashboard(\n  api: Client,\n  orgId: string,\n  newDashboard: DashboardDetails,\n  duplicate?: boolean\n): Promise<DashboardDetails> {\n  const {title, widgets} = newDashboard;\n\n  const promise: Promise<DashboardDetails> = api.requestPromise(\n    `/organizations/${orgId}/dashboards/`,\n    {\n      method: 'POST',\n      data: {title, widgets, duplicate},\n    }\n  );\n\n  promise.catch(response => {\n    const errorResponse = response?.responseJSON ?? null;\n\n    if (errorResponse) {\n      addErrorMessage(errorResponse);\n    } else {\n      addErrorMessage(t('Unable to create dashboard'));\n    }\n  });\n\n  return promise;\n}\n\nexport function fetchDashboard(\n  api: Client,\n  orgId: string,\n  dashboardId: string\n): Promise<DashboardDetails> {\n  const promise: Promise<DashboardDetails> = api.requestPromise(\n    `/organizations/${orgId}/dashboards/${dashboardId}/`,\n    {\n      method: 'GET',\n    }\n  );\n\n  promise.catch(response => {\n    const errorResponse = response?.responseJSON ?? null;\n\n    if (errorResponse) {\n      addErrorMessage(errorResponse);\n    } else {\n      addErrorMessage(t('Unable to load dashboard'));\n    }\n  });\n  return promise;\n}\n\nexport function updateDashboard(\n  api: Client,\n  orgId: string,\n  dashboard: DashboardDetails\n): Promise<DashboardDetails> {\n  const data = {\n    title: dashboard.title,\n    widgets: dashboard.widgets,\n  };\n\n  const promise: Promise<DashboardDetails> = api.requestPromise(\n    `/organizations/${orgId}/dashboards/${dashboard.id}/`,\n    {\n      method: 'PUT',\n      data,\n    }\n  );\n\n  promise.catch(response => {\n    const errorResponse = response?.responseJSON ?? null;\n\n    if (errorResponse) {\n      addErrorMessage(errorResponse);\n    } else {\n      addErrorMessage(t('Unable to update dashboard'));\n    }\n  });\n\n  return promise;\n}\n\nexport function deleteDashboard(\n  api: Client,\n  orgId: string,\n  dashboardId: string\n): Promise<undefined> {\n  const promise: Promise<undefined> = api.requestPromise(\n    `/organizations/${orgId}/dashboards/${dashboardId}/`,\n    {\n      method: 'DELETE',\n    }\n  );\n\n  promise.catch(response => {\n    const errorResponse = response?.responseJSON ?? null;\n\n    if (errorResponse) {\n      addErrorMessage(errorResponse);\n    } else {\n      addErrorMessage(t('Unable to delete dashboard'));\n    }\n  });\n\n  return promise;\n}\n\nexport function validateWidget(\n  api: Client,\n  orgId: string,\n  widget: Widget\n): Promise<undefined> {\n  const promise: Promise<undefined> = api.requestPromise(\n    `/organizations/${orgId}/dashboards/widgets/`,\n    {\n      method: 'POST',\n      data: widget,\n    }\n  );\n  return promise;\n}\n","import styled from '@emotion/styled';\n\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport Placeholder from 'app/components/placeholder';\nimport {IconSentry} from 'app/icons';\nimport {AvatarUser} from 'app/types';\n\ntype Props = {\n  type: 'system' | 'user';\n  user?: AvatarUser;\n  className?: string;\n  size?: number;\n};\n\nfunction ActivityAvatar({className, type, user, size = 38}: Props) {\n  if (user) {\n    return <UserAvatar user={user} size={size} className={className} />;\n  }\n\n  if (type === 'system') {\n    // Return Sentry avatar\n    return (\n      <SystemAvatar className={className} size={size}>\n        <StyledIconSentry size=\"md\" />\n      </SystemAvatar>\n    );\n  }\n\n  return (\n    <Placeholder\n      className={className}\n      width={`${size}px`}\n      height={`${size}px`}\n      shape=\"circle\"\n    />\n  );\n}\n\nexport default ActivityAvatar;\n\ntype SystemAvatarProps = {\n  size: number;\n};\n\nconst SystemAvatar = styled('span')<SystemAvatarProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  background-color: ${p => p.theme.textColor};\n  color: ${p => p.theme.background};\n  border-radius: 50%;\n`;\n\nconst StyledIconSentry = styled(IconSentry)`\n  padding-bottom: 3px;\n`;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import {MouseEvent} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport DropdownMenu from 'app/components/dropdownMenu';\nimport {IconEllipsis} from 'app/icons';\n\nconst ContextMenu = ({children}) => (\n  <DropdownMenu>\n    {({isOpen, getRootProps, getActorProps, getMenuProps}) => {\n      const topLevelCx = classNames('dropdown', {\n        'anchor-right': true,\n        open: isOpen,\n      });\n\n      return (\n        <MoreOptions\n          {...getRootProps({\n            className: topLevelCx,\n          })}\n        >\n          <DropdownTarget\n            {...getActorProps<HTMLDivElement>({\n              onClick: (event: MouseEvent) => {\n                event.stopPropagation();\n                event.preventDefault();\n              },\n            })}\n          >\n            <IconEllipsis data-test-id=\"context-menu\" size=\"md\" />\n          </DropdownTarget>\n          {isOpen && (\n            <ul {...getMenuProps({})} className={classNames('dropdown-menu')}>\n              {children}\n            </ul>\n          )}\n        </MoreOptions>\n      );\n    }}\n  </DropdownMenu>\n);\n\nconst MoreOptions = styled('span')`\n  display: flex;\n  color: ${p => p.theme.textColor};\n`;\n\nconst DropdownTarget = styled('div')`\n  display: flex;\n  cursor: pointer;\n  padding: 0 5px;\n`;\n\nexport default ContextMenu;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport ActivityAvatar from 'app/components/activity/item/avatar';\nimport Card from 'app/components/card';\nimport Link from 'app/components/links/link';\nimport {t} from 'app/locale';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {User} from 'app/types';\n\ntype Props = {\n  title: string;\n  detail: React.ReactNode;\n  to: React.ComponentProps<typeof Link>['to'];\n  renderWidgets: () => React.ReactNode;\n  createdBy?: User;\n  dateStatus?: React.ReactNode;\n  onEventClick?: () => void;\n  renderContextMenu?: () => void;\n};\n\nfunction DashboardCard({\n  title,\n  detail,\n  createdBy,\n  renderWidgets,\n  dateStatus,\n  to,\n  onEventClick,\n  renderContextMenu,\n}: Props) {\n  function onClick() {\n    onEventClick?.();\n  }\n\n  return (\n    <Link data-test-id={`card-${title}`} onClick={onClick} to={to}>\n      <StyledDashboardCard interactive>\n        <CardHeader>\n          <CardContent>\n            <Title>{title}</Title>\n            <Detail>{detail}</Detail>\n          </CardContent>\n          <AvatarWrapper>\n            {createdBy ? (\n              <ActivityAvatar type=\"user\" user={createdBy} size={34} />\n            ) : (\n              <ActivityAvatar type=\"system\" size={34} />\n            )}\n          </AvatarWrapper>\n        </CardHeader>\n        <CardBody>{renderWidgets()}</CardBody>\n        <CardFooter>\n          <DateSelected>\n            {dateStatus ? (\n              <DateStatus>\n                {t('Created')} {dateStatus}\n              </DateStatus>\n            ) : (\n              <DateStatus />\n            )}\n          </DateSelected>\n          {renderContextMenu && renderContextMenu()}\n        </CardFooter>\n      </StyledDashboardCard>\n    </Link>\n  );\n}\n\nconst AvatarWrapper = styled('span')`\n  border: 3px solid ${p => p.theme.border};\n  border-radius: 50%;\n  height: min-content;\n`;\n\nconst CardContent = styled('div')`\n  flex-grow: 1;\n  overflow: hidden;\n  margin-right: ${space(1)};\n`;\n\nconst StyledDashboardCard = styled(Card)`\n  justify-content: space-between;\n  height: 100%;\n  &:focus,\n  &:hover {\n    top: -1px;\n  }\n`;\n\nconst CardHeader = styled('div')`\n  display: flex;\n  padding: ${space(1.5)} ${space(2)};\n`;\n\nconst Title = styled('div')`\n  color: ${p => p.theme.textColor};\n  ${overflowEllipsis};\n`;\n\nconst Detail = styled('div')`\n  font-family: ${p => p.theme.text.familyMono};\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray300};\n  ${overflowEllipsis};\n  line-height: 1.5;\n`;\n\nconst CardBody = styled('div')`\n  background: ${p => p.theme.gray100};\n  padding: ${space(1.5)} ${space(2)};\n  max-height: 150px;\n  min-height: 150px;\n  overflow: hidden;\n`;\n\nconst CardFooter = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${space(1)} ${space(2)};\n`;\n\nconst DateSelected = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  display: grid;\n  grid-column-gap: ${space(1)};\n  color: ${p => p.theme.textColor};\n  ${overflowEllipsis};\n`;\n\nconst DateStatus = styled('span')`\n  color: ${p => p.theme.purple300};\n  padding-left: ${space(1)};\n`;\n\nexport default DashboardCard;\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location, Query} from 'history';\n\nimport WidgetArea from 'sentry-images/dashboard/widget-area.svg';\nimport WidgetBar from 'sentry-images/dashboard/widget-bar.svg';\nimport WidgetBigNumber from 'sentry-images/dashboard/widget-big-number.svg';\nimport WidgetLine from 'sentry-images/dashboard/widget-line-1.svg';\nimport WidgetTable from 'sentry-images/dashboard/widget-table.svg';\nimport WidgetWorldMap from 'sentry-images/dashboard/widget-world-map.svg';\n\nimport {\n  createDashboard,\n  deleteDashboard,\n  fetchDashboard,\n} from 'app/actionCreators/dashboards';\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport MenuItem from 'app/components/menuItem';\nimport Pagination from 'app/components/pagination';\nimport TimeSince from 'app/components/timeSince';\nimport {t, tn} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport withApi from 'app/utils/withApi';\nimport {DashboardListItem, DisplayType} from 'app/views/dashboardsV2/types';\n\nimport ContextMenu from '../contextMenu';\nimport {cloneDashboard} from '../utils';\n\nimport DashboardCard from './dashboardCard';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  location: Location;\n  dashboards: DashboardListItem[] | null;\n  pageLinks: string;\n  onDashboardsChange: () => void;\n};\n\nfunction DashboardList({\n  api,\n  organization,\n  location,\n  dashboards,\n  pageLinks,\n  onDashboardsChange,\n}: Props) {\n  function miniWidget(displayType: DisplayType): string {\n    switch (displayType) {\n      case DisplayType.BAR:\n        return WidgetBar;\n      case DisplayType.AREA:\n        return WidgetArea;\n      case DisplayType.BIG_NUMBER:\n        return WidgetBigNumber;\n      case DisplayType.TABLE:\n        return WidgetTable;\n      case DisplayType.WORLD_MAP:\n        return WidgetWorldMap;\n      case DisplayType.LINE:\n      default:\n        return WidgetLine;\n    }\n  }\n\n  function handleDelete(dashboard: DashboardListItem) {\n    deleteDashboard(api, organization.slug, dashboard.id)\n      .then(() => {\n        trackAnalyticsEvent({\n          eventKey: 'dashboards_manage.delete',\n          eventName: 'Dashboards Manager: Dashboard Deleted',\n          organization_id: parseInt(organization.id, 10),\n          dashboard_id: parseInt(dashboard.id, 10),\n        });\n        onDashboardsChange();\n        addSuccessMessage(t('Dashboard deleted'));\n      })\n      .catch(() => {\n        addErrorMessage(t('Error deleting Dashboard'));\n      });\n  }\n\n  function handleDuplicate(dashboard: DashboardListItem) {\n    fetchDashboard(api, organization.slug, dashboard.id)\n      .then(dashboardDetail => {\n        const newDashboard = cloneDashboard(dashboardDetail);\n        newDashboard.widgets.map(widget => (widget.id = undefined));\n        createDashboard(api, organization.slug, newDashboard, true).then(() => {\n          trackAnalyticsEvent({\n            eventKey: 'dashboards_manage.duplicate',\n            eventName: 'Dashboards Manager: Dashboard Duplicated',\n            organization_id: parseInt(organization.id, 10),\n            dashboard_id: parseInt(dashboard.id, 10),\n          });\n          onDashboardsChange();\n          addSuccessMessage(t('Dashboard duplicated'));\n        });\n      })\n      .catch(() => addErrorMessage(t('Error duplicating Dashboard')));\n  }\n\n  function handleClick(dashboard: DashboardListItem) {\n    trackAnalyticsEvent({\n      eventKey: 'dashboards_manage.change_sort',\n      eventName: 'Dashboards Manager: Sort By Changed',\n      organization_id: parseInt(organization.id, 10),\n      dashboard_id: parseInt(dashboard.id, 10),\n    });\n  }\n\n  function renderMiniDashboards() {\n    return dashboards?.map((dashboard, index) => {\n      return (\n        <DashboardCard\n          key={`${index}-${dashboard.id}`}\n          title={\n            dashboard.id === 'default-overview' ? 'Default Dashboard' : dashboard.title\n          }\n          to={{\n            pathname: `/organizations/${organization.slug}/dashboard/${dashboard.id}/`,\n            query: {...location.query},\n          }}\n          detail={tn('%s widget', '%s widgets', dashboard.widgetDisplay.length)}\n          dateStatus={\n            dashboard.dateCreated ? <TimeSince date={dashboard.dateCreated} /> : undefined\n          }\n          onEventClick={() => handleClick(dashboard)}\n          createdBy={dashboard.createdBy}\n          renderWidgets={() => (\n            <WidgetGrid>\n              {dashboard.widgetDisplay.map((displayType, i) => {\n                return displayType === DisplayType.BIG_NUMBER ? (\n                  <BigNumberWidgetWrapper\n                    key={`${i}-${displayType}`}\n                    src={miniWidget(displayType)}\n                  />\n                ) : (\n                  <MiniWidgetWrapper\n                    key={`${i}-${displayType}`}\n                    src={miniWidget(displayType)}\n                  />\n                );\n              })}\n            </WidgetGrid>\n          )}\n          renderContextMenu={() => (\n            <ContextMenu>\n              <MenuItem\n                data-test-id=\"dashboard-delete\"\n                onClick={event => {\n                  event.preventDefault();\n                  handleDelete(dashboard);\n                }}\n                disabled={dashboards.length <= 1}\n              >\n                {t('Delete')}\n              </MenuItem>\n              <MenuItem\n                data-test-id=\"dashboard-duplicate\"\n                onClick={event => {\n                  event.preventDefault();\n                  handleDuplicate(dashboard);\n                }}\n              >\n                {t('Duplicate')}\n              </MenuItem>\n            </ContextMenu>\n          )}\n        />\n      );\n    });\n  }\n\n  function renderDashboardGrid() {\n    if (!dashboards?.length) {\n      return (\n        <EmptyStateWarning>\n          <p>{t('Sorry, no Dashboards match your filters.')}</p>\n        </EmptyStateWarning>\n      );\n    }\n    return <DashboardGrid>{renderMiniDashboards()}</DashboardGrid>;\n  }\n\n  return (\n    <Fragment>\n      {renderDashboardGrid()}\n      <PaginationRow\n        pageLinks={pageLinks}\n        onCursor={(cursor: string, path: string, query: Query, direction: number) => {\n          const offset = Number(cursor.split(':')[1]);\n\n          const newQuery: Query & {cursor?: string} = {...query, cursor};\n          const isPrevious = direction === -1;\n\n          if (offset <= 0 && isPrevious) {\n            delete newQuery.cursor;\n          }\n\n          trackAnalyticsEvent({\n            eventKey: 'dashboards_manage.paginate',\n            eventName: 'Dashboards Manager: Paginate',\n            organization_id: parseInt(organization.id, 10),\n          });\n\n          browserHistory.push({\n            pathname: path,\n            query: newQuery,\n          });\n        }}\n      />\n    </Fragment>\n  );\n}\n\nconst DashboardGrid = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(100px, 1fr);\n  grid-gap: ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[2]}) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n`;\n\nconst WidgetGrid = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n  grid-auto-flow: row dense;\n  grid-gap: ${space(0.25)};\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[3]}) {\n    grid-template-columns: repeat(6, minmax(0, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[4]}) {\n    grid-template-columns: repeat(8, minmax(0, 1fr));\n  }\n`;\n\nconst BigNumberWidgetWrapper = styled('img')`\n  width: 100%;\n  height: 100%;\n  /* 2 cols */\n  grid-area: span 1 / span 2;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    /* 4 cols */\n    grid-area: span 1 / span 1;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[3]}) {\n    /* 6 and 8 cols */\n    grid-area: span 1 / span 2;\n  }\n`;\n\nconst MiniWidgetWrapper = styled('img')`\n  width: 100%;\n  height: 100%;\n  grid-area: span 2 / span 2;\n`;\n\nconst PaginationRow = styled(Pagination)`\n  margin-bottom: ${space(3)};\n`;\n\nexport default withApi(DashboardList);\n","import * as ReactRouter from 'react-router';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport pick from 'lodash/pick';\n\nimport {Client} from 'app/api';\nimport Feature from 'app/components/acl/feature';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport DropdownControl, {DropdownItem} from 'app/components/dropdownControl';\nimport LightWeightNoProjectMessage from 'app/components/lightWeightNoProjectMessage';\nimport SearchBar from 'app/components/searchBar';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport space from 'app/styles/space';\nimport {Organization, SelectValue} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport {decodeScalar} from 'app/utils/queryString';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport {DashboardListItem} from '../types';\n\nimport DashboardList from './dashboardList';\n\nconst SORT_OPTIONS: SelectValue<string>[] = [\n  {label: t('My Dashboards'), value: 'mydashboards'},\n  {label: t('Dashboard Name (A-Z)'), value: 'title'},\n  {label: t('Date Created (Newest)'), value: '-dateCreated'},\n  {label: t('Date Created (Oldest)'), value: 'dateCreated'},\n];\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  location: Location;\n  router: ReactRouter.InjectedRouter;\n} & AsyncView['props'];\n\ntype State = {\n  dashboards: DashboardListItem[] | null;\n  dashboardsPageLinks: string;\n} & AsyncView['state'];\n\nclass ManageDashboards extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, location} = this.props;\n    return [\n      [\n        'dashboards',\n        `/organizations/${organization.slug}/dashboards/`,\n        {\n          query: {\n            ...pick(location.query, ['cursor', 'query']),\n            sort: this.getActiveSort().value,\n            per_page: '9',\n          },\n        },\n      ],\n    ];\n  }\n\n  getActiveSort() {\n    const {location} = this.props;\n\n    const urlSort = decodeScalar(location.query.sort, 'mydashboards');\n    return SORT_OPTIONS.find(item => item.value === urlSort) || SORT_OPTIONS[0];\n  }\n\n  onDashboardsChange() {\n    this.reloadData();\n  }\n\n  handleSearch(query: string) {\n    const {location, router} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'dashboards_manage.search',\n      eventName: 'Dashboards Manager: Search',\n      organization_id: parseInt(this.props.organization.id, 10),\n    });\n\n    router.push({\n      pathname: location.pathname,\n      query: {...location.query, cursor: undefined, query},\n    });\n  }\n\n  handleSortChange = (value: string) => {\n    const {location} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'dashboards_manage.change_sort',\n      eventName: 'Dashboards Manager: Sort By Changed',\n      organization_id: parseInt(this.props.organization.id, 10),\n      sort: value,\n    });\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        cursor: undefined,\n        sort: value,\n      },\n    });\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return typeof query === 'string' ? query : undefined;\n  }\n\n  renderActions() {\n    const activeSort = this.getActiveSort();\n\n    return (\n      <StyledActions>\n        <StyledSearchBar\n          defaultQuery=\"\"\n          query={this.getQuery()}\n          placeholder={t('Search Dashboards')}\n          onSearch={query => this.handleSearch(query)}\n        />\n        <StyledDropdownControl\n          buttonProps={{prefix: t('Sort By')}}\n          label={activeSort.label}\n        >\n          {SORT_OPTIONS.map(({label, value}) => (\n            <DropdownItem\n              key={value}\n              onSelect={this.handleSortChange}\n              eventKey={value}\n              isActive={value === activeSort.value}\n            >\n              {label}\n            </DropdownItem>\n          ))}\n        </StyledDropdownControl>\n      </StyledActions>\n    );\n  }\n\n  renderNoAccess() {\n    return (\n      <PageContent>\n        <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n      </PageContent>\n    );\n  }\n\n  renderDashboards() {\n    const {dashboards, dashboardsPageLinks} = this.state;\n    const {organization, location, api} = this.props;\n    return (\n      <DashboardList\n        api={api}\n        dashboards={dashboards}\n        organization={organization}\n        pageLinks={dashboardsPageLinks}\n        location={location}\n        onDashboardsChange={() => this.onDashboardsChange()}\n      />\n    );\n  }\n\n  getTitle() {\n    return t('Dashboards');\n  }\n\n  onCreate() {\n    const {organization, location} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'dashboards_manage.create.start',\n      eventName: 'Dashboards Manager: Dashboard Create Started',\n      organization_id: parseInt(organization.id, 10),\n    });\n    browserHistory.push({\n      pathname: `/organizations/${organization.slug}/dashboards/new/`,\n      query: location.query,\n    });\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n\n    return (\n      <Feature\n        organization={organization}\n        features={['dashboards-manage']}\n        renderDisabled={this.renderNoAccess}\n      >\n        <SentryDocumentTitle title={t('Dashboards')} orgSlug={organization.slug}>\n          <StyledPageContent>\n            <LightWeightNoProjectMessage organization={organization}>\n              <PageContent>\n                <StyledPageHeader>\n                  {t('Dashboards')}\n                  <Button\n                    data-test-id=\"dashboard-create\"\n                    onClick={event => {\n                      event.preventDefault();\n                      this.onCreate();\n                    }}\n                    priority=\"primary\"\n                    icon={<IconAdd size=\"xs\" isCircled />}\n                  >\n                    {t('Create Dashboard')}\n                  </Button>\n                </StyledPageHeader>\n                {this.renderActions()}\n                {this.renderDashboards()}\n              </PageContent>\n            </LightWeightNoProjectMessage>\n          </StyledPageContent>\n        </SentryDocumentTitle>\n      </Feature>\n    );\n  }\n}\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  flex-grow: 1;\n  margin-right: ${space(2)};\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledPageHeader = styled('div')`\n  display: flex;\n  align-items: flex-end;\n  font-size: ${p => p.theme.headerFontSize};\n  color: ${p => p.theme.textColor};\n  justify-content: space-between;\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledDropdownControl = styled(DropdownControl)`\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledActions = styled('div')`\n  display: grid;\n  grid-template-columns: auto max-content min-content;\n  width: 100%;\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    grid-template-columns: auto;\n  }\n\n  margin-bottom: ${space(1)};\n  align-items: center;\n`;\n\nexport default withApi(withOrganization(ManageDashboards));\n","import {User} from 'app/types';\n\nexport enum DisplayType {\n  AREA = 'area',\n  BAR = 'bar',\n  LINE = 'line',\n  TABLE = 'table',\n  WORLD_MAP = 'world_map',\n  BIG_NUMBER = 'big_number',\n  STACKED_AREA = 'stacked_area',\n}\n\nexport type WidgetQuery = {\n  name: string;\n  fields: string[];\n  conditions: string;\n  orderby: string;\n};\n\nexport type Widget = {\n  id?: string;\n  title: string;\n  displayType: DisplayType;\n  interval: string;\n  queries: WidgetQuery[];\n};\n\n/**\n * The response shape from dashboard list endpoint\n */\nexport type DashboardListItem = {\n  id: string;\n  title: string;\n  dateCreated?: string;\n  createdBy?: User;\n  widgetDisplay: DisplayType[];\n};\n\n/**\n * Saved dashboard with widgets\n */\nexport type DashboardDetails = {\n  title: string;\n  widgets: Widget[];\n  id: string;\n  dateCreated: string;\n  createdBy?: User;\n};\n\nexport enum DashboardState {\n  VIEW = 'view',\n  EDIT = 'edit',\n  CREATE = 'create',\n  PENDING_DELETE = 'pending_delete',\n}\n","import cloneDeep from 'lodash/cloneDeep';\n\nimport {GlobalSelection} from 'app/types';\nimport {getUtcDateString} from 'app/utils/dates';\nimport EventView from 'app/utils/discover/eventView';\n\nimport {DashboardDetails, WidgetQuery} from './types';\n\nexport function cloneDashboard(dashboard: DashboardDetails): DashboardDetails {\n  return cloneDeep(dashboard);\n}\n\nexport function eventViewFromWidget(\n  title: string,\n  query: WidgetQuery,\n  selection: GlobalSelection\n): EventView {\n  const {start, end, period: statsPeriod} = selection.datetime;\n  const {projects, environments} = selection;\n\n  return EventView.fromSavedQuery({\n    id: undefined,\n    name: title,\n    version: 2,\n    fields: query.fields,\n    query: query.conditions,\n    orderby: query.orderby,\n    projects,\n    range: statsPeriod,\n    start: start ? getUtcDateString(start) : undefined,\n    end: end ? getUtcDateString(end) : undefined,\n    environment: environments,\n  });\n}\n","module.exports = __webpack_public_path__ + \"dashboard/widget-area.843693.svg\";","module.exports = __webpack_public_path__ + \"dashboard/widget-bar.8913b0.svg\";","module.exports = __webpack_public_path__ + \"dashboard/widget-big-number.1b5f87.svg\";","module.exports = __webpack_public_path__ + \"dashboard/widget-line-1.6f678e.svg\";","module.exports = __webpack_public_path__ + \"dashboard/widget-table.f6a36f.svg\";","module.exports = __webpack_public_path__ + \"dashboard/widget-world-map.b5c509.svg\";"],"sourceRoot":""}