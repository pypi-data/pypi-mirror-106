[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "nuts"
version = "3.0.0"
description = "Network Unit Testing System Component of NetTowel"
authors = ["Méline Sieber, Urs Baumann, Matthias Gabriel"]
maintainers = ["Méline Sieber <meline.sieber@ost.ch>"]
classifiers = ["Framework :: Pytest", "Topic :: System :: Networking"]
homepage = "https://github.com/INSRapperswil/Nuts"
repository = "https://github.com/INSRapperswil/Nuts"
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.7"
pytest = "^6.1.1"
PyYAML = "^5.3.1"
nornir = "^3.0.0"
nornir-napalm = "^0.1.1"
nornir-netmiko = "^0.1.1"
nornir-utils = "^0.1.0"

[tool.poetry.dev-dependencies]
black = "^20.8b1"
pytest-cov = "^2.10.1"

[tool.poetry.plugins."pytest11"]
"nuts"="nuts.plugin"
# why "pytest11": https://github.com/pytest-dev/pytest/commit/ed03eef81b220199a819632a27f9c452b8e1fb81
# https://docs.pytest.org/en/latest/how-to/writing_plugins.html#making-your-plugin-installable-by-others

[tool.black]
line-length = 120

[tool.pytest.ini_options]
testpaths = "tests"
filterwarnings = [
    "error",
    "ignore:Using or importing the ABCs from 'collections':DeprecationWarning:napalm\\.base\\.helpers",
    "ignore:Using or importing the ABCs from 'collections':DeprecationWarning:jnpr\\.junos\\.factcache",
    "ignore:NutsYamlFile\\.fspath is deprecated and will be replaced by NutsYamlFile\\.path\\.",
]
markers = [
    "nuts_test_ctx: A NutsContext to be used in tests."
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py,black,mypy,docs
testpaths = "tests"

[testenv]
description = Run pytest and generate report
deps = 
    pytest
    pytest-cov
commands = pytest {posargs} --junitxml=test-reports/pytest.xml --cov="{envsitepackagesdir}/nuts" --cov=tests --cov-report xml:test-reports/coverage.xml
# envsitepackagesdir see: https://tox.readthedocs.io/en/latest/example/pytest.html


[testenv:black]
description = Check formatting with black
skip_install = true
deps = black
commands = black --check {posargs} .

[testenv:mypy]
description = Check typing with mypy
deps = mypy
passenv = TERM
commands = mypy {posargs} nuts tests

[testenv:docs]
description = Build docs with sphinx
deps = sphinx
changedir = docs/
commands = sphinx-build {posargs} source build

[testenv:pytest-main]
description = Run project tests against pytest-main branch
deps = 
    git+https://github.com/pytest-dev/pytest.git#main
    pytest-cov
commands = pytest {posargs} --junitxml=test-reports/pytest.xml --cov="{envsitepackagesdir}/nuts" --cov=tests --cov-report xml:test-reports/coverage.xml
# envsitepackagesdir see: https://tox.readthedocs.io/en/latest/example/pytest.html

"""

