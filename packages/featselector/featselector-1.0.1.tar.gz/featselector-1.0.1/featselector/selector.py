import pandas as pd
import numpy as np
from sklearn.model_selection import StratifiedKFold
from sklearn.metrics import f1_score
from sklearn.metrics import roc_auc_score, roc_curve
import matplotlib.pyplot as plt
# from catboost import CatBoostClassifier
import pickle
import inspect
import os


def plotroc(train_y, train_pred, test_y, val_pred):
    lw = 2
    ##train
    fpr, tpr, thresholds = roc_curve(train_y.values, train_pred, pos_label=1.0)
    train_auc_value = roc_auc_score(train_y.values, train_pred)
    # print('train--------thresholds={},auc={}'.format(thresholds,train_auc_value))
    plt.plot(fpr, tpr, linewidth=lw, label='Train_ROC curve (area = %0.4f)' % train_auc_value)
    # plt.plot([0, 1], [0, 1], color='navy', linewidth=lw, linestyle='--')

    ##valid
    fpr, tpr, thresholds = roc_curve(test_y.values, val_pred, pos_label=1.0)
    valid_auc_value = roc_auc_score(test_y.values, val_pred)
    # print('valid--------thresholds={},auc={}'.format(thresholds,valid_auc_value))
    plt.plot(fpr, tpr, linewidth=lw, label='Valid_ROC curve (area = %0.4f)' % valid_auc_value)
    plt.plot([0, 1], [0, 1], color='navy', linewidth=lw, linestyle='--')
    plt.show()

    return train_auc_value, valid_auc_value


def cal_f1(train_y, train_pred, test_y, val_pred):
    train_pred[train_pred >= 0.5] = 1
    train_pred[train_pred < 0.5] = 0
    val_pred[val_pred >= 0.5] = 1
    val_pred[val_pred < 0.5] = 0
    ##train
    train_f1 = f1_score(train_y.values, train_pred, average='macro')
    val_f1 = f1_score(test_y.values, val_pred, average='macro')

    print('train_f1:', train_f1, 'val_f1:', val_f1)

    return train_f1, val_f1


def getselect(df):
    # with open(inspect.getfile(featselector)[:-11] + './r1.ru', 'rb') as f:
    #     sr = pickle.load(f)
    # with open('./r2.ru', 'rb') as f:
    #     sn = pickle.load(f)
    sr = [1000011, 1000028, 1000030, 1000037, 1000058, 1000076, 1000087, 1000088, 1000091, 1000093, 1000094, 1000108,
          1000129, 1000131, 1000136, 1000141, 1000144, 1000148, 1000212, 1000252, 1000351, 1000374, 1000398, 1000401,
          1000405, 1000452, 1000462, 1000465, 1000472, 1000496, 1000510, 1000535, 1000556, 1000559, 1000571, 1000585,
          1000611, 1000620, 1000625, 1000638, 1000639, 1000671, 1000685, 1000698, 1000700, 1000724, 1000728, 1000751,
          1000756, 1000758, 1000768, 1000793, 1000849, 1000856, 1000862, 1000884, 1000911, 1000929, 1000950, 1000965,
          1000970, 1001002, 1001015, 1001024, 1001028, 1001032, 1001042, 1001079, 1001100, 1001103, 1001112, 1001129,
          1001144, 1001149, 1001166, 1001171, 1001177, 1001197, 1001223, 1001249, 1001251, 1001255, 1001256, 1001279,
          1001305, 1001343, 1001358, 1001368, 1001396, 1001462, 1001468, 1001539, 1001545, 1001547, 1001563, 1001565,
          1001570, 1001573, 1001596, 1001598, 1001610, 1001673, 1001674, 1001689, 1001694, 1001700, 1001756, 1001770,
          1001801, 1001843, 1001844, 1001846, 1001853, 1001881, 1001883, 1001888, 1001905, 1001911, 1001921, 1001934,
          1001935, 1001959, 1001968, 1001977, 1001984, 1002009, 1002116, 1002125, 1002152, 1002154, 1002173, 1002188,
          1002197, 1002208, 1002242, 1002244, 1002255, 1002264, 1002275, 1002282, 1002306, 1002320, 1002346, 1002351,
          1002362, 1002390, 1002401, 1002407, 1002463, 1002465, 1002499, 1002525, 1002536, 1002545, 1002552, 1002556,
          1002587, 1002615, 1002626, 1002715, 1002727, 1002823, 1002827, 1002828, 1002835, 1002842, 1002855, 1002935,
          1002938, 1002947, 1002983, 1002988, 1003034, 1003053, 1003063, 1003094, 1003119, 1003133, 1003143, 1003144,
          1003159, 1003176, 1003188, 1003210, 1003212, 1003213, 1003240, 1003294, 1003319, 1003329, 1003337, 1003361,
          1003387, 1003397, 1003404, 1003416, 1003419, 1003432, 1003439, 1003484, 1003490, 1003491, 1003517, 1003537,
          1003555, 1003588, 1003607, 1003694, 1003703, 1003710, 1003712, 1003726, 1003742, 1003753, 1003763, 1003808,
          1003867, 1003902, 1003916, 1003950, 1003955, 1003972, 1003982, 1003998, 1004010, 1004036, 1004052, 1004055,
          1004070, 1004126, 1004135, 1004150, 1004161, 1004185, 1004203, 1004224, 1004246, 1004282, 1004307, 1004309,
          1004327, 1004330, 1004346, 1004357, 1004364, 1004407, 1004425, 1004426, 1004428, 1004435, 1004450, 1004467,
          1004477, 1004486, 1004497, 1004501, 1004522, 1004542, 1004576, 1004586, 1004615, 1004632, 1004655, 1004718,
          1004723, 1004727, 1004733, 1004746, 1004747, 1004760, 1004785]
    sn = [1000001, 1000009, 1000010, 1000012, 1000017, 1000019, 1000025, 1000027, 1000031, 1000033, 1000039, 1000040,
          1000046, 1000053, 1000055, 1000061, 1000066, 1000075, 1000077, 1000079, 1000081, 1000090, 1000097, 1000099,
          1000106, 1000107, 1000109, 1000114, 1000119, 1000121, 1000124, 1000130, 1000132, 1000137, 1000139, 1000153,
          1000157, 1000160, 1000161, 1000166, 1000170, 1000171, 1000176, 1000177, 1000180, 1000181, 1000186, 1000201,
          1000203, 1000208, 1000211, 1000232, 1000236, 1000237, 1000238, 1000240, 1000243, 1000248, 1000249, 1000251,
          1000253, 1000256, 1000257, 1000258, 1000261, 1000263, 1000268, 1000271, 1000272, 1000277, 1000279, 1000283,
          1000295, 1000299, 1000300, 1000302, 1000305, 1000309, 1000317, 1000319, 1000322, 1000327, 1000334, 1000338,
          1000339, 1000341, 1000343, 1000345, 1000346, 1000347, 1000350, 1000368, 1000375, 1000379, 1000380, 1000382,
          1000383, 1000389, 1000393, 1000397, 1000402, 1000419, 1000421, 1000422, 1000429, 1000434, 1000441, 1000444,
          1000447, 1000457, 1000461, 1000464, 1000469, 1000476, 1000477, 1000478, 1000484, 1000489, 1000495, 1000506,
          1000509, 1000514, 1000516, 1000518, 1000527, 1000529, 1000533, 1000536, 1000542, 1000552, 1000567, 1000577,
          1000581, 1000588, 1000602, 1000612, 1000627, 1000629, 1000630, 1000635, 1000643, 1000668, 1000672, 1000687,
          1000688, 1000690, 1000693, 1000694, 1000696, 1000701, 1000706, 1000707, 1000710, 1000721, 1000729, 1000730,
          1000732, 1000735, 1000739, 1000749, 1000750, 1000754, 1000757, 1000760, 1000762, 1000766, 1000767, 1000772,
          1000776, 1000779, 1000781, 1000789, 1000790, 1000795, 1000797, 1000799, 1000803, 1000812, 1000813, 1000817,
          1000819, 1000820, 1000822, 1000826, 1000832, 1000833, 1000836, 1000838, 1000855, 1000859, 1000869, 1000876,
          1000880, 1000883, 1000887, 1000889, 1000890, 1000891, 1000902, 1000910, 1000914, 1000917, 1000923, 1000924,
          1000926, 1000927, 1000937, 1000941, 1000945, 1000951, 1000956, 1000961, 1000966, 1000971, 1000972, 1000973,
          1000974, 1000975, 1000981, 1000991, 1000992, 1000996, 1001005, 1001007, 1001013, 1001017, 1001029, 1001033,
          1001034, 1001035, 1001037, 1001039, 1001045, 1001049, 1001050, 1001051, 1001059, 1001064, 1001069, 1001077,
          1001085, 1001091, 1001094, 1001110, 1001114, 1001117, 1001119, 1001132, 1001134, 1001138, 1001139, 1001140,
          1001142, 1001148, 1001150, 1001152, 1001155, 1001157, 1001158, 1001167, 1001178, 1001179, 1001180, 1001188,
          1001194, 1001198, 1001201, 1001209, 1001211, 1001212, 1001234, 1001235, 1001240, 1001248, 1001250, 1001254,
          1001259, 1001263, 1001267, 1001273, 1001275, 1001280, 1001285, 1001290, 1001291, 1001293, 1001295, 1001314,
          1001315, 1001323, 1001327, 1001334, 1001336, 1001341, 1001344, 1001345, 1001346, 1001357, 1001360, 1001363,
          1001374, 1001376, 1001378, 1001385, 1001388, 1001390, 1001393, 1001395, 1001402, 1001407, 1001408, 1001412,
          1001416, 1001422, 1001424, 1001430, 1001433, 1001435, 1001436, 1001447, 1001448, 1001449, 1001450, 1001456,
          1001461, 1001465, 1001471, 1001476, 1001480, 1001484, 1001487, 1001490, 1001495, 1001498, 1001510, 1001511,
          1001512, 1001513, 1001518, 1001521, 1001524, 1001525, 1001527, 1001529, 1001538, 1001544, 1001549, 1001551,
          1001558, 1001567, 1001576, 1001582, 1001586, 1001587, 1001589, 1001599, 1001606, 1001611, 1001623, 1001624,
          1001625, 1001627, 1001629, 1001630, 1001631, 1001654, 1001661, 1001662, 1001668, 1001676, 1001678, 1001685,
          1001688, 1001691, 1001696, 1001697, 1001701, 1001709, 1001710, 1001714, 1001715, 1001717, 1001723, 1001724,
          1001725, 1001727, 1001729, 1001730, 1001731, 1001736, 1001737, 1001738, 1001745, 1001746, 1001753, 1001754,
          1001759, 1001760, 1001763, 1001765, 1001768, 1001769, 1001776, 1001793, 1001794, 1001796, 1001805, 1001807,
          1001811, 1001813, 1001828, 1001830, 1001836, 1001851, 1001852, 1001854, 1001861, 1001863, 1001870, 1001878,
          1001885, 1001889, 1001897, 1001898, 1001908, 1001909, 1001910, 1001914, 1001917, 1001918, 1001923, 1001929,
          1001940, 1001945, 1001951, 1001952, 1001953, 1001954, 1001958, 1001964, 1001966, 1001969, 1001971, 1001972,
          1001973, 1001978, 1001982, 1001988, 1001994, 1001999, 1002002, 1002014, 1002016, 1002031, 1002033, 1002034,
          1002037, 1002038, 1002039, 1002046, 1002050, 1002053, 1002054, 1002064, 1002067, 1002074, 1002075, 1002077,
          1002088, 1002091, 1002097, 1002101, 1002113, 1002121, 1002129, 1002133, 1002139, 1002140, 1002150, 1002156,
          1002157, 1002160, 1002181, 1002190, 1002203, 1002206, 1002207, 1002209, 1002215, 1002216, 1002222, 1002225,
          1002229, 1002231, 1002235, 1002241, 1002252, 1002254, 1002257, 1002261, 1002262, 1002265, 1002270, 1002272,
          1002273, 1002274, 1002285, 1002288, 1002290, 1002298, 1002304, 1002310, 1002314, 1002315, 1002325, 1002333,
          1002340, 1002345, 1002348, 1002353, 1002354, 1002355, 1002361, 1002374, 1002376, 1002386, 1002397, 1002404,
          1002406, 1002416, 1002417, 1002422, 1002427, 1002430, 1002431, 1002434, 1002436, 1002438, 1002439, 1002447,
          1002459, 1002469, 1002482, 1002494, 1002495, 1002496, 1002502, 1002515, 1002516, 1002517, 1002528, 1002530,
          1002533, 1002534, 1002535, 1002539, 1002551, 1002557, 1002558, 1002559, 1002560, 1002566, 1002570, 1002574,
          1002577, 1002583, 1002586, 1002589, 1002593, 1002595, 1002598, 1002602, 1002604, 1002605, 1002608, 1002611,
          1002613, 1002624, 1002630, 1002634, 1002636, 1002642, 1002643, 1002644, 1002649, 1002654, 1002656, 1002661,
          1002663, 1002668, 1002669, 1002670, 1002678, 1002686, 1002692, 1002698, 1002701, 1002711, 1002716, 1002717,
          1002720, 1002722, 1002723, 1002725, 1002731, 1002733, 1002738, 1002740, 1002742, 1002745, 1002753, 1002760,
          1002762, 1002765, 1002766, 1002768, 1002774, 1002775, 1002784, 1002791, 1002793, 1002798, 1002800, 1002803,
          1002811, 1002824, 1002837, 1002839, 1002841, 1002844, 1002854, 1002857, 1002862, 1002865, 1002869, 1002872,
          1002876, 1002897, 1002911, 1002915, 1002919, 1002927, 1002928, 1002932, 1002933, 1002934, 1002953, 1002956,
          1002960, 1002961, 1002963, 1002966, 1002972, 1002984, 1002985, 1002986, 1002992, 1002996, 1002998, 1003006,
          1003020, 1003024, 1003030, 1003039, 1003047, 1003055, 1003056, 1003057, 1003058, 1003067, 1003068, 1003071,
          1003073, 1003079, 1003081, 1003091, 1003098, 1003099, 1003109, 1003113, 1003114, 1003120, 1003123, 1003138,
          1003152, 1003156, 1003158, 1003160, 1003163, 1003167, 1003174, 1003179, 1003181, 1003182, 1003183, 1003191,
          1003193, 1003194, 1003196, 1003201, 1003209, 1003214, 1003223, 1003225, 1003231, 1003233, 1003242, 1003254,
          1003258, 1003278, 1003289, 1003293, 1003301, 1003310, 1003317, 1003332, 1003344, 1003346, 1003349, 1003353,
          1003354, 1003358, 1003362, 1003364, 1003366, 1003372, 1003377, 1003378, 1003390, 1003393, 1003407, 1003410,
          1003412, 1003414, 1003426, 1003427, 1003429, 1003452, 1003453, 1003455, 1003457, 1003462, 1003473, 1003475,
          1003476, 1003478, 1003489, 1003498, 1003508, 1003510, 1003511, 1003516, 1003519, 1003523, 1003530, 1003539,
          1003542, 1003548, 1003550, 1003558, 1003563, 1003564, 1003568, 1003569, 1003574, 1003576, 1003581, 1003591,
          1003592, 1003597, 1003601, 1003603, 1003612, 1003616, 1003623, 1003625, 1003637, 1003638, 1003639, 1003641,
          1003645, 1003647, 1003648, 1003649, 1003658, 1003660, 1003661, 1003663, 1003665, 1003683, 1003684, 1003687,
          1003689, 1003691, 1003692, 1003693, 1003706, 1003708, 1003709, 1003716, 1003720, 1003721, 1003727, 1003740,
          1003741, 1003744, 1003752, 1003756, 1003758, 1003760, 1003762, 1003764, 1003770, 1003772, 1003777, 1003781,
          1003784, 1003785, 1003791, 1003792, 1003796, 1003799, 1003803, 1003810, 1003818, 1003820, 1003821, 1003824,
          1003827, 1003830, 1003842, 1003847, 1003848, 1003849, 1003852, 1003855, 1003860, 1003862, 1003866, 1003871,
          1003876, 1003877, 1003880, 1003883, 1003884, 1003885, 1003887, 1003888, 1003890, 1003893, 1003894, 1003897,
          1003913, 1003924, 1003927, 1003929, 1003936, 1003937, 1003941, 1003942, 1003943, 1003947, 1003949, 1003952,
          1003957, 1003960, 1003966, 1003968, 1003969, 1003970, 1003974, 1003978, 1003985, 1003986, 1003987, 1003988,
          1003996, 1004009, 1004011, 1004022, 1004031, 1004038, 1004044, 1004047, 1004056, 1004059, 1004061, 1004064,
          1004066, 1004075, 1004080, 1004086, 1004088, 1004090, 1004096, 1004099, 1004101, 1004104, 1004106, 1004107,
          1004110, 1004118, 1004144, 1004163, 1004174, 1004175, 1004176, 1004183, 1004184, 1004193, 1004194, 1004202,
          1004204, 1004208, 1004210, 1004213, 1004225, 1004240, 1004241, 1004249, 1004251, 1004258, 1004259, 1004264,
          1004271, 1004272, 1004286, 1004288, 1004289, 1004297, 1004300, 1004314, 1004319, 1004320, 1004336, 1004338,
          1004340, 1004342, 1004354, 1004356, 1004360, 1004365, 1004366, 1004372, 1004379, 1004382, 1004383, 1004387,
          1004396, 1004397, 1004400, 1004404, 1004409, 1004415, 1004421, 1004431, 1004433, 1004442, 1004454, 1004456,
          1004464, 1004469, 1004471, 1004481, 1004485, 1004487, 1004490, 1004492, 1004498, 1004504, 1004509, 1004516,
          1004517, 1004519, 1004523, 1004529, 1004533, 1004535, 1004537, 1004546, 1004547, 1004552, 1004560, 1004561,
          1004564, 1004570, 1004577, 1004580, 1004582, 1004584, 1004595, 1004599, 1004604, 1004606, 1004616, 1004618,
          1004622, 1004628, 1004631, 1004645, 1004652, 1004665, 1004668, 1004672, 1004676, 1004687, 1004693, 1004695,
          1004697, 1004702, 1004705, 1004712, 1004715, 1004721, 1004722, 1004731, 1004739, 1004741, 1004750, 1004752,
          1004754, 1004763, 1004766, 1004771, 1004776, 1004777, 1004778, 1004784]

    return sr, sn


def selector(train, test, k, seed):
    pass
    # train.label = 0
    # test.label = 1
    # ori = train.copy()
    # train = pd.concat([train, test], axis=0).reset_index(drop=True)
    # target = train.label
    # test = ori
    #
    # print('\n\n###################\nCatClassifier--------------\n#####################')
    # feats = [f for f in train.columns if f not in ['user_id', 'label', 'product_no']]
    #
    # print('Current num of features:', len(feats))
    # folds = StratifiedKFold(n_splits=k, shuffle=True, random_state=seed)
    # oof_probs = np.zeros(len(train))
    # offline_score = []
    # feature_importance_df = pd.DataFrame()
    # output_preds = 0
    # # stack_lgb_train=target.copy()
    # parameters = {
    #     'od_type': 'Iter',
    #     # 'learning_rate': 0.01,
    #     'eval_metric': 'AUC',
    #     # 'class_weights':[1,13],
    #     #     'auto_class_weights':'Balanced',  # SqrtBalanced
    #     'loss_function': 'Logloss',
    #     'random_seed': seed,
    #     'metric_period': 100,
    #     'one_hot_max_size': 6,
    #     'l2_leaf_reg': 8,
    #     'max_depth': 8,
    #     'iterations': 4000,
    #     'verbose': 100,
    #     'early_stopping_rounds': 300,
    #     'bagging_temperature': 0.8,
    #     # 'task_type': 'GPU',
    # }
    # model = CatBoostClassifier(**parameters)
    # for i, (train_index, test_index) in enumerate(folds.split(train, target)):
    #     train_y, test_y = target[train_index], target[test_index]
    #     train_X, test_X = train[feats].iloc[train_index, :], train[feats].iloc[test_index, :]
    #
    #     model = CatBoostClassifier(**parameters)
    #     model.fit(train_X, train_y, eval_set=(test_X, test_y), use_best_model=True)
    #
    #     val_pred = model.predict_proba(test_X)[:, 1]
    #     train_pred = model.predict_proba(train_X)[:, 1]
    #     oof_probs[test_index] += val_pred
    #
    #     test_pred = model.predict_proba(test[feats])[:, 1]
    #
    #     train_auc_value, valid_auc_value = plotroc(train_y, train_pred, test_y, val_pred)
    #     # print('train_auc:{},valid_auc{}'.format(train_auc_value, valid_auc_value))
    #     offline_score.append(valid_auc_value)
    #     print(offline_score)
    #     output_preds += test_pred / k
    #
    # return model.get_feature_importance(prettified=True), np.mean(offline_score)
