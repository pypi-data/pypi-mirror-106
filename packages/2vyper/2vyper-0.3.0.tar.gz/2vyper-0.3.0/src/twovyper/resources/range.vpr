/*
  Copyright (c) 2021 ETH Zurich
  This Source Code Form is subject to the terms of the Mozilla Public
  License, v. 2.0. If a copy of the MPL was not distributed with this
  file, You can obtain one at http://mozilla.org/MPL/2.0/.
*/

domain $Range {

    function $range($f: Int, $t: Int): Seq[Int]

    axiom $range_len_ax {
        forall $f: Int, $t: Int :: { |$range($f, $t)| }
            |$range($f, $t)| == $t - $f
    }

    axiom $range_lookup_ax {
        forall $f: Int, $t: Int, $i: Int :: { $range($f, $t)[$i] }
            0 <= $i && $i < |$range($f, $t)| ==> $range($f, $t)[$i] == $f + $i
    }

}

function $range_sum($x:Int, $y:Int): Int
    requires $x <= $y
{
    let $x_ge_0 == ($x >= 0) in
    let $y_ge_0 == ($y >= 0) in
    let $x_exclusive == ($x_ge_0 ? (($x - 1) * $x) \ 2 :  (((-$x) - 1) * (-$x)) \ 2) in
    let $y_exclusive == ($y_ge_0 ? (($y - 1) * $y) \ 2 :  (((-$y) - 1) * (-$y)) \ 2) in
    (($x_ge_0 && $y_ge_0) ? ($y_exclusive - $x_exclusive) :
    ((!$x_ge_0 && $y_ge_0) ? ($y_exclusive - $x_exclusive + $x) :
    ($y_exclusive - $y - $x_exclusive + $x)))
}
