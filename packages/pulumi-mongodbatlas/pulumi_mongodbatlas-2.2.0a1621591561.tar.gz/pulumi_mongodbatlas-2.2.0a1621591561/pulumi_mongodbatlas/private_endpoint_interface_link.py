# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['PrivateEndpointInterfaceLinkArgs', 'PrivateEndpointInterfaceLink']

@pulumi.input_type
class PrivateEndpointInterfaceLinkArgs:
    def __init__(__self__, *,
                 interface_endpoint_id: pulumi.Input[str],
                 private_link_id: pulumi.Input[str],
                 project_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a PrivateEndpointInterfaceLink resource.
        :param pulumi.Input[str] interface_endpoint_id: Unique identifier of the interface endpoint you created in your VPC with the AWS resource.
        :param pulumi.Input[str] private_link_id: Unique identifier of the AWS PrivateLink connection which is created by `PrivateEndpoint` resource.
        :param pulumi.Input[str] project_id: Unique identifier for the project.
        """
        pulumi.set(__self__, "interface_endpoint_id", interface_endpoint_id)
        pulumi.set(__self__, "private_link_id", private_link_id)
        pulumi.set(__self__, "project_id", project_id)

    @property
    @pulumi.getter(name="interfaceEndpointId")
    def interface_endpoint_id(self) -> pulumi.Input[str]:
        """
        Unique identifier of the interface endpoint you created in your VPC with the AWS resource.
        """
        return pulumi.get(self, "interface_endpoint_id")

    @interface_endpoint_id.setter
    def interface_endpoint_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "interface_endpoint_id", value)

    @property
    @pulumi.getter(name="privateLinkId")
    def private_link_id(self) -> pulumi.Input[str]:
        """
        Unique identifier of the AWS PrivateLink connection which is created by `PrivateEndpoint` resource.
        """
        return pulumi.get(self, "private_link_id")

    @private_link_id.setter
    def private_link_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "private_link_id", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Input[str]:
        """
        Unique identifier for the project.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "project_id", value)


@pulumi.input_type
class _PrivateEndpointInterfaceLinkState:
    def __init__(__self__, *,
                 connection_status: Optional[pulumi.Input[str]] = None,
                 delete_requested: Optional[pulumi.Input[bool]] = None,
                 error_message: Optional[pulumi.Input[str]] = None,
                 interface_endpoint_id: Optional[pulumi.Input[str]] = None,
                 private_link_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering PrivateEndpointInterfaceLink resources.
        :param pulumi.Input[str] connection_status: Status of the interface endpoint.
               Returns one of the following values:
        :param pulumi.Input[bool] delete_requested: Indicates if Atlas received a request to remove the interface endpoint from the private endpoint connection.
        :param pulumi.Input[str] error_message: Error message pertaining to the interface endpoint. Returns null if there are no errors.
        :param pulumi.Input[str] interface_endpoint_id: Unique identifier of the interface endpoint you created in your VPC with the AWS resource.
        :param pulumi.Input[str] private_link_id: Unique identifier of the AWS PrivateLink connection which is created by `PrivateEndpoint` resource.
        :param pulumi.Input[str] project_id: Unique identifier for the project.
        """
        if connection_status is not None:
            pulumi.set(__self__, "connection_status", connection_status)
        if delete_requested is not None:
            pulumi.set(__self__, "delete_requested", delete_requested)
        if error_message is not None:
            pulumi.set(__self__, "error_message", error_message)
        if interface_endpoint_id is not None:
            pulumi.set(__self__, "interface_endpoint_id", interface_endpoint_id)
        if private_link_id is not None:
            pulumi.set(__self__, "private_link_id", private_link_id)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)

    @property
    @pulumi.getter(name="connectionStatus")
    def connection_status(self) -> Optional[pulumi.Input[str]]:
        """
        Status of the interface endpoint.
        Returns one of the following values:
        """
        return pulumi.get(self, "connection_status")

    @connection_status.setter
    def connection_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "connection_status", value)

    @property
    @pulumi.getter(name="deleteRequested")
    def delete_requested(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates if Atlas received a request to remove the interface endpoint from the private endpoint connection.
        """
        return pulumi.get(self, "delete_requested")

    @delete_requested.setter
    def delete_requested(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "delete_requested", value)

    @property
    @pulumi.getter(name="errorMessage")
    def error_message(self) -> Optional[pulumi.Input[str]]:
        """
        Error message pertaining to the interface endpoint. Returns null if there are no errors.
        """
        return pulumi.get(self, "error_message")

    @error_message.setter
    def error_message(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "error_message", value)

    @property
    @pulumi.getter(name="interfaceEndpointId")
    def interface_endpoint_id(self) -> Optional[pulumi.Input[str]]:
        """
        Unique identifier of the interface endpoint you created in your VPC with the AWS resource.
        """
        return pulumi.get(self, "interface_endpoint_id")

    @interface_endpoint_id.setter
    def interface_endpoint_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface_endpoint_id", value)

    @property
    @pulumi.getter(name="privateLinkId")
    def private_link_id(self) -> Optional[pulumi.Input[str]]:
        """
        Unique identifier of the AWS PrivateLink connection which is created by `PrivateEndpoint` resource.
        """
        return pulumi.get(self, "private_link_id")

    @private_link_id.setter
    def private_link_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "private_link_id", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[str]]:
        """
        Unique identifier for the project.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "project_id", value)


class PrivateEndpointInterfaceLink(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 interface_endpoint_id: Optional[pulumi.Input[str]] = None,
                 private_link_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        `PrivateEndpointInterfaceLink` provides a Private Endpoint Interface Link resource. This represents a Private Endpoint Interface Link, which adds one interface endpoint to a private endpoint connection in an Atlas project.

        !> **WARNING:** This resource is deprecated and will be removed in the next major version
                        Please transition to privatelink_endpoint_service as soon as possible. [PrivateLink Endpoints] (https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/)

        > **IMPORTANT:**You must have one of the following roles to successfully handle the resource:
          * Organization Owner
          * Project Owner

        > **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_aws as aws
        import pulumi_mongodbatlas as mongodbatlas

        test_private_endpoint = mongodbatlas.PrivateEndpoint("testPrivateEndpoint",
            project_id="<PROJECT_ID>",
            provider_name="AWS",
            region="us-east-1")
        ptfe_service = aws.ec2.VpcEndpoint("ptfeService",
            vpc_id="vpc-7fc0a543",
            service_name=test_private_endpoint.endpoint_service_name,
            vpc_endpoint_type="Interface",
            subnet_ids=["subnet-de0406d2"],
            security_group_ids=["sg-3f238186"])
        test_private_endpoint_interface_link = mongodbatlas.PrivateEndpointInterfaceLink("testPrivateEndpointInterfaceLink",
            project_id=test_private_endpoint.project_id,
            private_link_id=test_private_endpoint.private_link_id,
            interface_endpoint_id=ptfe_service.id)
        ```

        ## Import

        Private Endpoint Link Connection can be imported using project ID and username, in the format `{project_id}-{private_link_id}-{interface_endpoint_id}`, e.g.

        ```sh
         $ pulumi import mongodbatlas:index/privateEndpointInterfaceLink:PrivateEndpointInterfaceLink test 1112222b3bf99403840e8934-3242342343112-vpce-4242342343
        ```

         See detailed information for arguments and attributes[MongoDB API Private Endpoint Link Connection](https://docs.atlas.mongodb.com/reference/api/private-endpoint-create-one-interface-endpoint/)

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] interface_endpoint_id: Unique identifier of the interface endpoint you created in your VPC with the AWS resource.
        :param pulumi.Input[str] private_link_id: Unique identifier of the AWS PrivateLink connection which is created by `PrivateEndpoint` resource.
        :param pulumi.Input[str] project_id: Unique identifier for the project.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PrivateEndpointInterfaceLinkArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        `PrivateEndpointInterfaceLink` provides a Private Endpoint Interface Link resource. This represents a Private Endpoint Interface Link, which adds one interface endpoint to a private endpoint connection in an Atlas project.

        !> **WARNING:** This resource is deprecated and will be removed in the next major version
                        Please transition to privatelink_endpoint_service as soon as possible. [PrivateLink Endpoints] (https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/)

        > **IMPORTANT:**You must have one of the following roles to successfully handle the resource:
          * Organization Owner
          * Project Owner

        > **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_aws as aws
        import pulumi_mongodbatlas as mongodbatlas

        test_private_endpoint = mongodbatlas.PrivateEndpoint("testPrivateEndpoint",
            project_id="<PROJECT_ID>",
            provider_name="AWS",
            region="us-east-1")
        ptfe_service = aws.ec2.VpcEndpoint("ptfeService",
            vpc_id="vpc-7fc0a543",
            service_name=test_private_endpoint.endpoint_service_name,
            vpc_endpoint_type="Interface",
            subnet_ids=["subnet-de0406d2"],
            security_group_ids=["sg-3f238186"])
        test_private_endpoint_interface_link = mongodbatlas.PrivateEndpointInterfaceLink("testPrivateEndpointInterfaceLink",
            project_id=test_private_endpoint.project_id,
            private_link_id=test_private_endpoint.private_link_id,
            interface_endpoint_id=ptfe_service.id)
        ```

        ## Import

        Private Endpoint Link Connection can be imported using project ID and username, in the format `{project_id}-{private_link_id}-{interface_endpoint_id}`, e.g.

        ```sh
         $ pulumi import mongodbatlas:index/privateEndpointInterfaceLink:PrivateEndpointInterfaceLink test 1112222b3bf99403840e8934-3242342343112-vpce-4242342343
        ```

         See detailed information for arguments and attributes[MongoDB API Private Endpoint Link Connection](https://docs.atlas.mongodb.com/reference/api/private-endpoint-create-one-interface-endpoint/)

        :param str resource_name: The name of the resource.
        :param PrivateEndpointInterfaceLinkArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PrivateEndpointInterfaceLinkArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 interface_endpoint_id: Optional[pulumi.Input[str]] = None,
                 private_link_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PrivateEndpointInterfaceLinkArgs.__new__(PrivateEndpointInterfaceLinkArgs)

            if interface_endpoint_id is None and not opts.urn:
                raise TypeError("Missing required property 'interface_endpoint_id'")
            __props__.__dict__["interface_endpoint_id"] = interface_endpoint_id
            if private_link_id is None and not opts.urn:
                raise TypeError("Missing required property 'private_link_id'")
            __props__.__dict__["private_link_id"] = private_link_id
            if project_id is None and not opts.urn:
                raise TypeError("Missing required property 'project_id'")
            __props__.__dict__["project_id"] = project_id
            __props__.__dict__["connection_status"] = None
            __props__.__dict__["delete_requested"] = None
            __props__.__dict__["error_message"] = None
        super(PrivateEndpointInterfaceLink, __self__).__init__(
            'mongodbatlas:index/privateEndpointInterfaceLink:PrivateEndpointInterfaceLink',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            connection_status: Optional[pulumi.Input[str]] = None,
            delete_requested: Optional[pulumi.Input[bool]] = None,
            error_message: Optional[pulumi.Input[str]] = None,
            interface_endpoint_id: Optional[pulumi.Input[str]] = None,
            private_link_id: Optional[pulumi.Input[str]] = None,
            project_id: Optional[pulumi.Input[str]] = None) -> 'PrivateEndpointInterfaceLink':
        """
        Get an existing PrivateEndpointInterfaceLink resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] connection_status: Status of the interface endpoint.
               Returns one of the following values:
        :param pulumi.Input[bool] delete_requested: Indicates if Atlas received a request to remove the interface endpoint from the private endpoint connection.
        :param pulumi.Input[str] error_message: Error message pertaining to the interface endpoint. Returns null if there are no errors.
        :param pulumi.Input[str] interface_endpoint_id: Unique identifier of the interface endpoint you created in your VPC with the AWS resource.
        :param pulumi.Input[str] private_link_id: Unique identifier of the AWS PrivateLink connection which is created by `PrivateEndpoint` resource.
        :param pulumi.Input[str] project_id: Unique identifier for the project.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PrivateEndpointInterfaceLinkState.__new__(_PrivateEndpointInterfaceLinkState)

        __props__.__dict__["connection_status"] = connection_status
        __props__.__dict__["delete_requested"] = delete_requested
        __props__.__dict__["error_message"] = error_message
        __props__.__dict__["interface_endpoint_id"] = interface_endpoint_id
        __props__.__dict__["private_link_id"] = private_link_id
        __props__.__dict__["project_id"] = project_id
        return PrivateEndpointInterfaceLink(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="connectionStatus")
    def connection_status(self) -> pulumi.Output[str]:
        """
        Status of the interface endpoint.
        Returns one of the following values:
        """
        return pulumi.get(self, "connection_status")

    @property
    @pulumi.getter(name="deleteRequested")
    def delete_requested(self) -> pulumi.Output[bool]:
        """
        Indicates if Atlas received a request to remove the interface endpoint from the private endpoint connection.
        """
        return pulumi.get(self, "delete_requested")

    @property
    @pulumi.getter(name="errorMessage")
    def error_message(self) -> pulumi.Output[str]:
        """
        Error message pertaining to the interface endpoint. Returns null if there are no errors.
        """
        return pulumi.get(self, "error_message")

    @property
    @pulumi.getter(name="interfaceEndpointId")
    def interface_endpoint_id(self) -> pulumi.Output[str]:
        """
        Unique identifier of the interface endpoint you created in your VPC with the AWS resource.
        """
        return pulumi.get(self, "interface_endpoint_id")

    @property
    @pulumi.getter(name="privateLinkId")
    def private_link_id(self) -> pulumi.Output[str]:
        """
        Unique identifier of the AWS PrivateLink connection which is created by `PrivateEndpoint` resource.
        """
        return pulumi.get(self, "private_link_id")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[str]:
        """
        Unique identifier for the project.
        """
        return pulumi.get(self, "project_id")

