[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "poetry-scripts"
version = "0.0.1"
description = ""
authors = ["Trim21 <i@trim21.me>"]
packages = [{ include = "poetry_scripts" }]

[tool.poetry.plugins."poetry.application.plugin"]
do = "poetry_scripts:MyApplicationPlugin"

[tool.poetry_scripts.options]
shell = 'bash'

[tool.poetry_scripts.scripts]
test = 'pytest'
codecov = ['coverage', 'run', '-m', 'pytest']
cov = 'coverage run -m pytest'

[tool.poetry.dependencies]
python = "^3.6.2"
poetry = '^1.2.0a1'

[tool.poetry.dev-dependencies]
# tests
coverage = { version = "5.5", extras = ['toml'] }
pytest = "6.2.4"
# lint
pre-commit = { version = "2.12.1", markers = "implementation_name != 'pypy'" }
mypy = { version = "0.812", markers = "implementation_name != 'pypy'" }
flake8 = "^3.9.2"
flake8-comprehensions = "^3.5.0"
flake8-bugbear = "21.4.3"
flake8-mutable = "1.2.0"
flake8-eradicate = "1.0.0"
flake8-pep3101 = "1.3.0"
flake8-2020 = "1.6.0"
flake8-pytest-style = "1.4.1"

[tool.coverage.report]
exclude_lines = [
  'pragma: no cover',
  'if TYPE_CHECKING:',
  'if __name__  "__main__":',
  'if typing.TYPE_CHECKING:',
  'raise NotImplementedError'
]

[tool.isort]
default_section = 'THIRDPARTY'
indent = '    '
known_first_party = 'anime_episode_parser'
length_sort = true
line_length = 88
multi_line_output = 3
no_lines_before = 'LOCALFOLDER'
use_parentheses = true
include_trailing_comma = true

[tool.pytest.ini_options]
addopts = '-rqa'
junit_family = 'legacy'
