[tool.poetry]
name = "functions-cache"
version = "0.1.0"
description = "cache functions output with auto refresh everytime you call it"
authors = ["Baligh Hatem <balighmehrez@gmail.com>"]
license = "BSD License"
readme = "README.md"
homepage = "https://github.com/BalighMehrez/functions-cache"
repository = "https://github.com/BalighMehrez/functions-cache"
keywords = ["cache", "persistence", "threading", "sqlite", "redis", "mongodb", "gridfs", "dynamodb"]
include = [
    { path = "*.md" },
    { path = "*.yml" },
    { path = "docs", format = "sdist" },
    { path = "examples", format = "sdist" },
    { path = "tests", format = "sdist" }
]     

[tool.poetry.urls]                                                   
"Documentation" = "https://functions-cache.readthedocs.io"

[tool.poetry.dependencies]
python = "^3.6"

# Optional backend dependencies
boto3 = { version = "^1.15", optional = true }
pymongo = { version = "^3.0", optional = true }
redis = { version = "^3.0", optional = true }

# Documentation dependencies
docutils = { version = "0.16", optional = true }
m2r2 = { version = "^0.2", optional = true }
Sphinx = { version = "3.5.3", optional = true }
sphinx-autodoc-typehints = { version = "^1.11", optional = true }
sphinx-copybutton = { version = "^0.3", optional = true }
sphinx-rtd-theme = { version = "0.5.2", optional = true }
sphinxcontrib-apidoc = { version = "^0.3", optional = true }

[tool.poetry.extras]
engines = ["boto3", "pymongo", "redis"]
docs = ["docutils", "m2r2", "Sphinx", "sphinx-autodoc-typehints", "sphinx-copybutton",
        "sphinx-material", "sphinxcontrib-apidoc"]

[tool.poetry.dev-dependencies]
black = {version = "21.5b0", python = "^3.6.2"}
isort = "^5.8"
flake8 = "^3.9"
flake8-comprehensions = "*"
flake8-polyfill = "*"
pre-commit = {version = "^2.12", python = "^3.6.2"}
psutil = "^5.0"
pytest = "^6.2"
pytest-cov = "^2.11"
pytest-order = "0.11.0"
pytest-xdist = "^2.2"
radon = "^4.5"
timeout-decorator = "^0.5"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 105
skip-string-normalization = true

[tool.coverage.html]
directory = 'test-reports'

[tool.coverage.run]
branch = true
source = ['requests_cache']
omit = [
    'functions_cache/engines/__init__.py',
]

[tool.isort]
profile = 'black'
line_length = 105
skip_gitignore = true
skip = ['examples/']
known_first_party = ['tests']
# Things that are common enough they may as well be grouped with stdlib imports
extra_standard_library = ['pytest', 'setuptools']
