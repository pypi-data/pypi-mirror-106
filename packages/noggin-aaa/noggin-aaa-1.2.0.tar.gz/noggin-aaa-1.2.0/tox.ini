[tox]
envlist = lint,format,licenses,bandit,covclean,docs,{py36,py37,py38}-{unittest,integration},covreport
isolated_build = true

[testenv]
passenv = HOME
skip_install = true
sitepackages = False
commands =
    poetry install
    unittest: poetry run pytest -vv --cov --cov-append --cov-report= noggin/tests/unit {posargs}
    integration: poetry run pytest -vv --no-cov noggin/tests/integration {posargs}
depends =
    {py36,py37,py38}: covclean
    covreport: py36-unittest,py37-unittest,py38-unittest
whitelist_externals = poetry

[testenv:covreport]
basepython = python3.8
deps = coverage
commands =
    -coverage html
    coverage report -m

[testenv:covclean]
deps = coverage
commands = coverage erase


[testenv:docs]
changedir = docs
deps =
    sphinx
    sphinxcontrib-napoleon
whitelist_externals =
    poetry
    mkdir
    rm
commands=
    mkdir -p _static
    rm -rf _build
    rm -rf _source
    poetry install -q
    poetry run sphinx-build -W -b html -d {envtmpdir}/doctrees .  _build/html

[testenv:lint]
commands =
    poetry install
    poetry run flake8 {posargs}
    poetry run rstcheck -r docs

[testenv:format]
commands =
    poetry install
    poetry run black --check {posargs:.}
    poetry run isort --check {posargs:.}

[testenv:licenses]
# Note: we can't use poetry export because it isn't smart enough with conditional dependencies:
# flake8 requires importlib_metadata on python < 3.8, so it's not installed, but it's exported
# and liccheck crashes on packages listed in the req file but not installed.
commands =
    poetry install
    #poetry export --dev -f requirements.txt -o /tmp/noggin-requirements.txt
    bash -c "pip freeze --exclude-editable --isolated > /tmp/noggin-requirements.txt"
    poetry run liccheck -r /tmp/noggin-requirements.txt
    rm -f /tmp/noggin-requirements.txt
whitelist_externals =
    rm
    poetry
    bash

[testenv:bandit]
commands =
    poetry install
    poetry run bandit -r noggin/ -x noggin/tests/ -ll


[flake8]
show-source = True
max-line-length = 100
exclude = .git,.tox,dist,*egg

[pytest]
testpaths = noggin/tests/unit/
