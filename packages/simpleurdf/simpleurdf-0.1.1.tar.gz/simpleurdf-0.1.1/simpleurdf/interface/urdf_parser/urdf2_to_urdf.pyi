from lxml.etree import ElementTree as ElementTree
from simpleurdf.urdf2model.metamodel import CollisionModel as CollisionModel, GeometryBoxModel, GeometryCylinderModel, InertialModel as InertialModel, LimitModel as LimitModel, LinkModel as LinkModel, MaterialModel as MaterialModel, MeshModel, ModelModel as ModelModel, PoseModel as PoseModel, VisualModel as VisualModel
from typing import Any, List, Optional

class Urdf2ToUrdf:
    URDF_TYPE_JOINT_MAPPING: Any = ...
    em: Any = ...
    def __init__(self) -> None: ...
    def create_pose(self, pose: PoseModel) -> Any: ...
    def create_robot(self, robot: ModelModel) -> ElementTree: ...
    def create_link(self, link: LinkModel) -> ElementTree: ...
    def create_collision(self, collision: Optional[CollisionModel]) -> Any: ...
    def create_visual(self, visuals: List[VisualModel]) -> Any: ...
    def create_geometry(self, shape: Any): ...
    def create_mesh(self, shape: MeshModel) -> Any: ...
    def create_box(self, shape: GeometryBoxModel) -> Any: ...
    def create_cylinder(self, shape: GeometryCylinderModel) -> Any: ...
    def create_material(self, material: MaterialModel) -> Any: ...
    def create_inertial(self, inertial: InertialModel) -> Any: ...
    def create_joint(self, joint: Any) -> ElementTree: ...
    def create_axis(self, axis: List[float]) -> Any: ...
    def create_limit(self, limit: LimitModel) -> Any: ...
