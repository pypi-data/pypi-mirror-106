import w from"../../../../../__snowpack__/env.js";import.meta.env=w;function H(g,e){var t=Object.keys(g);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(g);e&&(i=i.filter(function(s){return Object.getOwnPropertyDescriptor(g,s).enumerable})),t.push.apply(t,i)}return t}function G(g){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?H(Object(t),!0).forEach(function(i){h(g,i,t[i])}):Object.getOwnPropertyDescriptors?Object.defineProperties(g,Object.getOwnPropertyDescriptors(t)):H(Object(t)).forEach(function(i){Object.defineProperty(g,i,Object.getOwnPropertyDescriptor(t,i))})}return g}function h(g,e,t){return e in g?Object.defineProperty(g,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):g[e]=t,g}import*as c from"../../../../../web_modules/d3.js";import A from"../../../../../web_modules/eventemitter3.js";import{ScaleMethod as y}from"../../../../resource/hyper-parameter/index.js";import E from"../../../../../web_modules/lodash/intersection.js";const W=import.meta.env.SNOWPACK_PUBLIC_PATH,b=25,D=60,L=5;export default class u extends A{get svgWidth(){return this.columnWidth*this.grids.length+u.GRID_BRUSH_WIDTH/2}get columnWidth(){return this.grids.length===0?0:Math.max((this.containerWidth-u.GRID_BRUSH_WIDTH)/this.grids.length,D)}get brushedLineIndexes(){return this.brushedLineIndexesArray.every(e=>e==null)?null:E(...this.brushedLineIndexesArray.filter(e=>e!=null))}get sequenceGrids(){return[...this.grids].sort((e,t)=>e.x-t.x)}constructor(e){super();h(this,"svg",void 0),h(this,"containerWidth",void 0),h(this,"colors",[]),h(this,"data",[]),h(this,"grids",[]),h(this,"lines",[]),h(this,"hoveredLineIndex",null),h(this,"selectedLineIndex",null),h(this,"brushedLineIndexesArray",[]),h(this,"dragStartX",0),h(this,"draggingIndicator",null),this.containerWidth=e.getBoundingClientRect().width;const[t,i]=[this.containerWidth,u.GRAPH_HEIGHT+b];this.svg=c.select(e).append("svg").attr("width",t).attr("height",i).attr("viewBox",`0 0 ${t} ${i}`).on("click",()=>{this.unselectLine()})}getDataByIndicator(e){return this.data.map(t=>t[e.group][e.name])}removeGrids(){this.brushedLineIndexesArray=[],this.grids.forEach(e=>{var t;(t=e.grid)===null||t===void 0||t.remove(),e.grid=null})}drawGrids(){this.brushedLineIndexesArray=Array(this.grids.length).fill(null),this.sequenceGrids.forEach((e,t)=>{var i,s;const n=e.x,r=this.svg.append("g").classed("grid",!0).attr("transform",`translate(${n}, 0)`),l=r.append("g").classed("indicator",!0).classed(e.group,!0),a=l.append("text").attr("x",0).attr("y",0).text(e.name);let d=(i=(s=a.node())===null||s===void 0?void 0:s.getComputedTextLength())!==null&&i!==void 0?i:0;for(;d>this.columnWidth-u.GRID_BRUSH_WIDTH/2;){var v,o;a.text(a.text().slice(0,-1)+"..."),d=(v=(o=a.node())===null||o===void 0?void 0:o.getComputedTextLength())!==null&&v!==void 0?v:0}l.append("image").classed("dragger",!0).attr("x",-15).attr("y",-1).attr("width",16).attr("height",16).attr("href",`${W}/icons/dragger.svg`).call(c.drag().container(this.svg).on("start",({x:m})=>this.dragstart(e,m)).on("drag",({x:m})=>this.dragging(e,m)).on("end",()=>this.dragend()));const p=r.append("g").classed("axis",!0).attr("transform",`translate(0, ${b})`),I=e.yScale,f=c.axisRight(I);e.scale===y.QUANTILE&&f.tickValues(I.quantiles()).tickFormat(c.format("-.6g")),p.call(f);const _=u.GRAPH_HEIGHT-2*L,x=u.GRID_BRUSH_WIDTH,S=p.append("g").classed("grid-brush",!0).attr("transform",`translate(${-x/2}, 0)`);S.call(c.brushY().extent([[0,L-.5],[x,_+L+.5]]).on("brush end",({selection:m})=>this.brushed(t,m))),S.select(".selection").attr("fill",null).attr("fill-opacity",null).attr("stroke",null).attr("stroke-width",null),e.grid=r})}removeLines(){this.lines.forEach(e=>{var t;(t=e.line)===null||t===void 0||t.remove(),e.line=null})}drawLines(){this.lines.forEach((e,t)=>{const i=this.svg.append("g").attr("transform",`translate(0, ${b})`);i.append("path").classed("line",!0).attr("fill","none").attr("stroke-width",1),i.append("path").classed("hover-trigger",!0).attr("stroke","transparent").attr("fill","none").attr("stroke-width",7).on("mouseenter",()=>{i.classed("disabled")||this.hoverLine(t)}).on("mouseleave",()=>{i.classed("disabled")||this.unhoverLine()}).on("click",s=>{i.classed("disabled")||(this.selectLine(t),s.stopPropagation())}),e.line=i}),this.updateLines(!1),this.updateLineColors(),this.updateLineWidths()}updateLineColors(){this.lines.forEach((e,t)=>{var i;const s=this.brushedLineIndexes!=null&&!this.brushedLineIndexes.includes(t),n=(i=e.line)===null||i===void 0?void 0:i.classed("disabled",s),r=n==null?void 0:n.select(".line"),l=n==null?void 0:n.selectAll(".select-indicator");if(s)r==null||r.attr("stroke",null),l==null||l.attr("stroke",null);else{var a,d;(a=this.select(r,!0))===null||a===void 0||a.attr("stroke",e.color),(d=this.select(l,!0))===null||d===void 0||d.attr("stroke",e.color)}})}updateLineWidths(){this.lines.forEach((e,t)=>{var i,s;let n=1;(t===this.hoveredLineIndex||t===this.selectedLineIndex)&&(n=3),(i=this.select((s=e.line)===null||s===void 0?void 0:s.select(".line"),!0))===null||i===void 0||i.attr("stroke-width",n)})}hoverLine(e){this.emit("hover",e),this.hoveredLineIndex=e,this.updateLineWidths()}unhoverLine(){this.hoveredLineIndex!=null&&(this.hoveredLineIndex=null,this.emit("hover",null)),this.updateLineWidths()}selectLine(e){this.emit("select",e),this.selectedLineIndex=e;const t=this.lines[e];this.lines.forEach(i=>{var s;return(s=i.line)===null||s===void 0?void 0:s.selectAll(".select-indicator").remove()}),this.sequenceGrids.forEach(i=>{var s,n;(s=t.line)===null||s===void 0||s.append("circle").classed("select-indicator",!0).attr("cx",i.x).attr("cy",(n=i.yScale(t.data[i.group][i.name]))!==null&&n!==void 0?n:0).attr("r",4).attr("stroke",t.color)}),this.updateLineWidths()}unselectLine(){if(this.selectedLineIndex!=null){var e;(e=this.lines[this.selectedLineIndex].line)===null||e===void 0||e.selectAll(".select-indicator").remove(),this.selectedLineIndex=null,this.emit("select",null)}this.updateLineWidths()}calculateLineColors(){this.lines.forEach((e,t)=>{var i;e.color=(i=this.colors[t])!==null&&i!==void 0?i:"#000"})}calculateXScale(){const e=u.GRID_BRUSH_WIDTH/2,t=c.scalePoint().domain(this.sequenceGrids.map(i=>i.name)).range([e,e+this.columnWidth*(this.sequenceGrids.length-1)]);this.sequenceGrids.forEach(i=>{var s;i.x=(s=t(i.name))!==null&&s!==void 0?s:0})}calculateYScales(){const e=this.grids.map(t=>{var i;const s=u.GRAPH_HEIGHT-2*L;let n=[s+L,L];if(t.type==="continuous"){let r;const l=this.getDataByIndicator(t).map(d=>+d),a=c.extent(l);if(t.scale===y.LOGARITHMIC)r=c.scaleLog();else if(t.scale===y.QUANTILE){const d=20;r=c.scaleQuantile(),n=c.range(d).map(v=>n[0]-v*s/(d-1))}else r=c.scaleLinear();return r.domain(a).range(n)}return c.scalePoint().domain((i=t.selectedValues)!==null&&i!==void 0?i:[]).range(n).padding(.1)});this.grids.forEach((t,i)=>{t.yScale=e[i]})}getDiscreteLineBySelection(e,[t,i]){const s=this.grids[e],n=s.yScale,r=n.domain(),l=n.step(),a=n.padding()*l,d=r.length-Math.min(Math.floor((i-L-a)/l),r.length-1)-1,v=r.length-Math.max(Math.ceil((t-L-a)/l),0)-1;return this.data.reduce((o,p,I)=>{const f=r.indexOf(p[s.group][s.name]);return f>=d&&f<=v&&o.push(I),o},[])}getContinuousLineBySelection(e,[t,i]){const s=this.grids[e],n=s.yScale;let r,l;if(s.scale===y.QUANTILE){const a=n,d=a.range(),v=d.filter(o=>t<=o&&o<=i).map(o=>{const p=a.invertExtent(o);return o===d[d.length-1]?[p[0],p[1]+1]:p});[r,l]=c.extent(c.merge(v))}else{const a=n.invert;r=a(t),l=a(i)}return r>l&&([r,l]=[l,r]),this.data.reduce((a,d,v)=>{const o=d[s.group][s.name];return o>=r&&o<=l&&a.push(v),a},[])}brushed(e,t){const i=this.sequenceGrids[e];t==null?this.brushedLineIndexesArray[e]=null:i.type!=="continuous"?this.brushedLineIndexesArray[e]=this.getDiscreteLineBySelection(e,t):this.brushedLineIndexesArray[e]=this.getContinuousLineBySelection(e,t),this.updateLineColors()}dragstart(e,t){var i;this.draggingIndicator=G({},e),this.dragStartX=t,(i=e.grid)===null||i===void 0||i.classed("dragging",!0)}dragging(e,t){if(this.draggingIndicator){const i=t-this.dragStartX,s=Math.min(this.svgWidth-this.columnWidth+u.GRID_BRUSH_WIDTH/2,Math.max(0,this.draggingIndicator.x+i));e.x=s,this.calculateXScale(),this.sequenceGrids.forEach(({grid:n,name:r,x:l})=>n==null?void 0:n.attr("transform",`translate(${r===e.name?s:l}, 0)`)),this.updateLines(!1,{indicator:e.name,x:s}),this.emit("dragging",e.name,s-e.x,this.sequenceGrids.map(({name:n})=>n))}}dragend(){var e,t;(e=this.draggingIndicator)===null||e===void 0||(t=e.grid)===null||t===void 0||t.classed("dragging",!1),this.draggingIndicator=null,this.updateGrids(),this.updateLines(),this.emit("dragged",this.sequenceGrids.map(({name:i})=>i))}updateGrids(e=!0){this.sequenceGrids.forEach(({grid:t,x:i})=>{var s;return(s=this.select(t,e))===null||s===void 0?void 0:s.attr("transform",`translate(${i}, 0)`)})}updateLines(e=!0,t){this.lines.forEach(i=>{var s,n,r,l;const a=(s=(n=i.line)===null||n===void 0?void 0:n.selectAll(".select-indicator").nodes())!==null&&s!==void 0?s:[],d=c.line()(this.sequenceGrids.map(({group:v,name:o,x:p,yScale:I},f)=>{var _;let x=p;const S=(_=I(i.data[v][o]))!==null&&_!==void 0?_:0;if(t&&t.indicator===o&&(x=t.x),a[f]){var m;(m=this.select(c.select(a[f]),e))===null||m===void 0||m.attr("cx",x).attr("cy",S)}return[x,S]}));(r=this.select((l=i.line)===null||l===void 0?void 0:l.selectAll("path"),e))===null||r===void 0||r.attr("d",d!=null?d:"")})}select(e,t=!1){return t?e==null?void 0:e.transition().duration(75):e}setSvgSize(){const e=this.svgWidth,t=u.GRAPH_HEIGHT+b;this.svg.attr("width",e).attr("height",t).attr("viewBox",`0 0 ${e} ${t}`)}resize(e){this.containerWidth=e,this.setSvgSize(),this.calculateXScale(),this.updateGrids(!1),this.updateLines(!1)}setColors(e){this.colors=e,this.calculateLineColors(),this.updateLineColors()}setScaleMethod(e,t){const i=this.grids.find(s=>s.name===e);i&&(i.scale=t,this.removeGrids(),this.calculateYScales(),this.drawGrids(),this.updateLines())}render(e,t){if(e.length!==this.grids.length)this.unselectLine();else for(const i of e){const s=this.grids.find(n=>n.name===i.name);if(!s||s.group!==i.group||s.type!==i.type){this.unselectLine();break}}this.unhoverLine(),this.removeLines(),this.removeGrids(),this.grids=e.map(i=>G(G({},i),{},{scale:y.LINEAR,x:0,yScale:c.scaleLinear(),grid:null})),this.data=t,this.setSvgSize(),this.calculateXScale(),this.calculateYScales(),this.lines=t.map(i=>({data:i,color:"",line:null})),this.calculateLineColors(),this.drawLines(),this.drawGrids()}dispose(){this.removeLines(),this.removeGrids(),this.svg.remove()}}h(u,"GRAPH_HEIGHT",300),h(u,"GRID_BRUSH_WIDTH",20);
