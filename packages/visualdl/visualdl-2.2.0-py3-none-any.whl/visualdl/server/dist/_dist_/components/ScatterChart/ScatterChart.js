function i(u,e,t){return e in u?Object.defineProperty(u,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):u[e]=t,u}import*as r from"../../../web_modules/three.js";import*as c from"../../../web_modules/d3.js";import{ColorType as v}from"./types.js";import{OrbitControls as A}from"../../../web_modules/three/examples/jsm/controls/OrbitControls.js";export default class s{get dataCount(){return this.data.length}constructor(e,t){var n,a;i(this,"width",void 0),i(this,"height",void 0),i(this,"background","#fff"),i(this,"is3D",!0),i(this,"data",[]),i(this,"labels",[]),i(this,"vertexShader",void 0),i(this,"fragmentShader",void 0),i(this,"container",void 0),i(this,"canvas",void 0),i(this,"scene",void 0),i(this,"renderer",void 0),i(this,"camera",void 0),i(this,"controls",void 0),i(this,"axes",null),i(this,"geometry",void 0),i(this,"material",null),i(this,"positions",new Float32Array),i(this,"colors",new Float32Array),i(this,"pickingRenderTarget",void 0),i(this,"pickingMaterial",null),i(this,"pickingColors",null),i(this,"fog",null),i(this,"blending",r.NormalBlending),i(this,"depth",!0),i(this,"colorMap",{type:v.Null,labels:[]}),i(this,"colorGenerator",null),i(this,"mouseCoordinates",null),i(this,"onMouseMoveBindThis",void 0),i(this,"focusedDataIndices",[]),i(this,"hoveredDataIndices",[]),i(this,"highLightDataIndices",[]),i(this,"rotate",!1),i(this,"animationId",null),this.container=e,this.width=t.width,this.height=t.height,this.is3D=(n=t.is3D)!==null&&n!==void 0?n:this.is3D,this.background=(a=t.background)!==null&&a!==void 0?a:this.background,this.canvas=this.initCanvas(),this.container.appendChild(this.canvas),this.scene=this.initScene(),this.camera=this.initCamera(),this.renderer=this.initRenderer(),this.controls=this.initControls(),this.pickingRenderTarget=this.initRenderTarget(),this.geometry=this.createGeometry(),this.onMouseMoveBindThis=this.onMouseMove.bind(this),this.bindEventListeners(),this.is3D&&this.addAxes(),this.reset()}initCanvas(){const e=document.createElement("canvas");return e.width=this.width,e.height=this.height,e}initScene(){const e=new r.Scene;e.background=new r.Color(this.background);const t=new r.PointLight(16772287,1,0);return t.name="light",e.add(t),e}initCamera(){const e=new r.Vector3(0,0,0);let t;return this.is3D?(t=new r.PerspectiveCamera(s.PERSP_CAMERA_FOV_VERTICAL,this.width/this.height,s.PERSP_CAMERA_NEAR_CLIP_PLANE,s.PERSP_CAMERA_FAR_CLIP_PLANE),t.position.set(...s.PERSP_CAMERA_INIT_POSITION)):(t=new r.OrthographicCamera(-s.ORTHO_CAMERA_FRUSTUM_HALF_EXTENT,s.ORTHO_CAMERA_FRUSTUM_HALF_EXTENT,s.ORTHO_CAMERA_FRUSTUM_HALF_EXTENT,-s.ORTHO_CAMERA_FRUSTUM_HALF_EXTENT,-1e3,1e3),t.position.set(...s.ORTHO_CAMERA_INIT_POSITION),t.up=new r.Vector3(0,1,0)),t.lookAt(e),t.zoom=1,t.updateProjectionMatrix(),t}initRenderer(){var e;const t=new r.WebGLRenderer({canvas:(e=this.canvas)!==null&&e!==void 0?e:void 0,alpha:!0,premultipliedAlpha:!1,antialias:!1});return t.setClearColor(this.background,1),t.setPixelRatio(window.devicePixelRatio||1),t.setSize(this.width,this.height),t}initControls(){const e=new A(this.camera,this.renderer.domElement);return e.enableRotate=this.is3D,e.autoRotate=!1,e.rotateSpeed=s.ORBIT_MOUSE_ROTATION_SPEED,e.minDistance=s.MIN_ZOOM,e.maxDistance=s.MAX_ZOOM,e.mouseButtons.LEFT=this.is3D?r.MOUSE.ROTATE:r.MOUSE.PAN,e.reset(),e.addEventListener("start",()=>{this.stopRotate()}),e.addEventListener("change",()=>{this.render()}),e}initRenderTarget(){const e=new r.Vector2;this.renderer.getSize(e);const t=this.renderer.getPixelRatio(),n=new r.WebGLRenderTarget(e.width*t,e.height*t);return n.texture.minFilter=r.LinearFilter,n}createGeometry(){const e=new r.BufferGeometry;return e.computeBoundingSphere(),e}createRenderMaterial(){const e=this.createShaderUniforms(!1);return new r.ShaderMaterial({transparent:!0,depthTest:this.depth,depthWrite:this.depth,fog:this.fog!=null,blending:this.blending,uniforms:e,vertexShader:this.vertexShader,fragmentShader:this.fragmentShader})}createPickingMaterial(){const e=this.createShaderUniforms(!0);return new r.ShaderMaterial({transparent:!0,depthTest:!0,depthWrite:!0,fog:!1,blending:r.NormalBlending,uniforms:e,vertexShader:this.vertexShader,fragmentShader:this.fragmentShader})}convertColorMap(){switch(this.colorMap.type){case v.Value:{const{minValue:e,maxValue:t}=this.colorMap;return n=>{const a=Number.parseFloat(n);if(!Number.isFinite(a))return this.defaultColor;const l=c.scaleLinear().domain([e,t]).range(s.VALUE_COLOR_MAP_RANGE);return new r.Color(l(a))}}case v.Category:{const e=this.colorMap.categories;return t=>{const n=e.indexOf(t);return n===-1?this.defaultColor:s.CATEGORY_COLOR_MAP[n%s.CATEGORY_COLOR_MAP.length]}}default:return null}}getColorByIndex(e){return this.hoveredDataIndices.includes(e)?this.hoveredColor:this.focusedDataIndices.includes(e)?this.focusedColor:this.highLightDataIndices.includes(e)?this.highLightColor:this.colorGenerator?this.colorGenerator(this.colorMap.labels[e]):this.defaultColor}createMaterial(){this.material=this.createRenderMaterial(),this.pickingMaterial=this.createPickingMaterial()}setGeometryAttribute(e,t,n){this.geometry.setAttribute(e,new r.BufferAttribute(t,n))}setPosition(e){this.setGeometryAttribute("position",e,3)}setColor(e){this.setGeometryAttribute("color",e,3)}convertDataToPosition(){const e=this.data,t=c.scaleLinear(),n=c.scaleLinear();let a=null;const l=c.extent(e,(o,h)=>e[h][0]),p=c.extent(e,(o,h)=>e[h][1]),d=[-s.CUBE_LENGTH/2,s.CUBE_LENGTH/2];if(t.domain(l).range(d),n.domain(p).range(d),this.is3D){a=c.scaleLinear();const o=c.extent(e,(h,E)=>e[E][2]);a.domain(o).range(d)}const g=e.map(o=>{var h,E,R,f;return[(h=t(o[0]))!==null&&h!==void 0?h:0,(E=n(o[1]))!==null&&E!==void 0?E:0,(R=(f=a)===null||f===void 0?void 0:f(o[2]))!==null&&R!==void 0?R:0]}),m=new Float32Array(g.length*3);let _=0;return g.forEach(o=>{m[_++]=o[0],m[_++]=o[1],m[_++]=o[2]}),m}convertDataPickingColor(){const e=this.dataCount,t=new Float32Array(e*3);let n=0;for(let a=0;a<e;a++){const l=new r.Color(a);t[n++]=l.r,t[n++]=l.g,t[n++]=l.b}return t}updateHoveredPoints(){if(!this.mouseCoordinates)return;const e=window.devicePixelRatio||1,t=Math.floor(this.mouseCoordinates[0]*e),n=Math.floor(this.mouseCoordinates[1]*e),a=this.dataCount,l=Math.floor(e),p=Math.floor(e),d=new Uint8Array(l*p*4);this.renderer.readRenderTargetPixels(this.pickingRenderTarget,t,this.pickingRenderTarget.height-n,l,p,d);const g=new Uint8Array(a),m=l*p;for(let o=0;o<m;o++){const h=d[o*4]<<16|d[o*4+1]<<8|d[o*4+2];h!==16777215&&h<a&&(g[h]=1)}const _=[];for(let o=0;o<g.length;o++)g[o]===1&&_.push(o);this.hoveredDataIndices=_}updateLight(){const e=this.scene.getObjectByName("light"),n=this.camera.position.clone();n.x+=1,n.y+=1,e.position.set(n.x,n.y,n.z)}bindEventListeners(){var e;(e=this.canvas)===null||e===void 0||e.addEventListener("mousemove",this.onMouseMoveBindThis)}removeEventListeners(){var e;(e=this.canvas)===null||e===void 0||e.removeEventListener("mousemove",this.onMouseMoveBindThis)}onMouseMove(e){this.mouseCoordinates=[e.offsetX,e.offsetY],this.render()}addAxes(){this.axes&&this.removeAxes(),this.axes=new r.AxesHelper,this.scene.add(this.axes)}removeAxes(){this.axes&&(this.scene.remove(this.axes),this.axes=null)}render(){this.updateLight(),this.updateHoveredPoints(),this.onRender(),this.pickingMaterial&&(this.axes&&this.scene.remove(this.axes),this.object&&this.pickingMaterial&&(this.object.material=this.pickingMaterial),this.pickingColors&&this.setColor(this.pickingColors),this.renderer.setRenderTarget(this.pickingRenderTarget),this.renderer.render(this.scene,this.camera),this.axes&&this.scene.add(this.axes),this.object&&this.material&&(this.object.material=this.material)),this.colors.length&&this.setColor(this.colors),this.renderer.setRenderTarget(null),this.renderer.render(this.scene,this.camera)}startRotate(){if(this.rotate)return;this.rotate=!0,this.controls.autoRotate=!0,this.controls.autoRotateSpeed=s.ORBIT_ANIMATION_ROTATION_CYCLE_IN_SECONDS;const e=()=>{this.controls.update(),this.animationId=requestAnimationFrame(e)};e()}stopRotate(){this.rotate&&(this.rotate=!1,this.controls.autoRotate=!1,this.controls.rotateSpeed=s.ORBIT_MOUSE_ROTATION_SPEED,this.animationId!=null&&(cancelAnimationFrame(this.animationId),this.animationId=null))}reset(){this.controls.reset(),this.is3D&&!this.animationId&&this.startRotate()}setSize(e,t){if(this.width=e,this.height=t,this.onSetSize(e,t),this.is3D){const n=this.camera;n.aspect=e/t,n.updateProjectionMatrix()}this.renderer.setSize(e,t),this.pickingRenderTarget=this.initRenderTarget(),this.controls.update()}setDimension(e){this.is3D!==e&&(this.is3D=e,this.stopRotate(),this.controls.dispose(),this.camera=this.initCamera(),this.controls=this.initControls(),e?(this.addAxes(),this.startRotate()):this.removeAxes(),this.setData(this.data,this.labels,this.colorMap))}setData(e,t,n){this.object&&this.scene.remove(this.object),this.labels=t,this.colorMap=n!=null?n:{type:v.Null,labels:[]},this.data=e,this.colorGenerator=this.convertColorMap(),this.positions=this.convertDataToPosition(),this.pickingColors=this.convertDataPickingColor(),this.onDataSet(),this.object&&this.scene.add(this.object),this.render()}setHighLightIndices(e){this.highLightDataIndices=e,this.render()}setFocusedPointIndices(e){this.focusedDataIndices=e,this.render()}dispose(){var e,t;this.removeEventListeners(),this.onDispose(),this.canvas&&(this.container.removeChild(this.canvas),this.canvas=null),this.renderer.dispose(),this.controls.dispose(),this.pickingRenderTarget.dispose(),this.geometry.dispose(),(e=this.material)===null||e===void 0||e.dispose(),(t=this.pickingMaterial)===null||t===void 0||t.dispose()}}i(s,"CUBE_LENGTH",2),i(s,"MAX_ZOOM",5*s.CUBE_LENGTH),i(s,"MIN_ZOOM",.025*s.CUBE_LENGTH),i(s,"PERSP_CAMERA_FOV_VERTICAL",70),i(s,"PERSP_CAMERA_NEAR_CLIP_PLANE",.01),i(s,"PERSP_CAMERA_FAR_CLIP_PLANE",100),i(s,"ORTHO_CAMERA_FRUSTUM_HALF_EXTENT",1.2),i(s,"ORBIT_MOUSE_ROTATION_SPEED",1),i(s,"ORBIT_ANIMATION_ROTATION_CYCLE_IN_SECONDS",2),i(s,"PERSP_CAMERA_INIT_POSITION",[.45,.9,1.6]),i(s,"ORTHO_CAMERA_INIT_POSITION",[0,0,4]),i(s,"VALUE_COLOR_MAP_RANGE",["#ffffdd","#1f2d86"]),i(s,"CATEGORY_COLOR_MAP",["#9BB9E8","#8BB8FF","#B4CCB7","#A8E9B8","#DB989A","#6DCDE4","#93C2CA","#DE7CCE","#DA96BC","#309E51","#D6C482","#6D7CE4","#CDCB74","#2576AD","#E46D6D","#CA5353","#E49D6D","#E4E06D"].map(u=>new r.Color(u)));
