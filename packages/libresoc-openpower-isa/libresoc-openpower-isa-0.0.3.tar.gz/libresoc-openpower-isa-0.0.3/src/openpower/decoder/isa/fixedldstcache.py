# auto-generated by pywriter.py, do not edit or commit

from openpower.decoder.isa.caller import inject, instruction_info
from openpower.decoder.helpers import (EXTS, EXTS64, EXTZ64, ROTL64, ROTL32,
                                 MASK, MASK32,
                                 ne, eq, gt, ge, lt, le, ltu, gtu, length,
                                 trunc_divs, trunc_rems, MULS, DIVS, MODS,
                                 EXTS128, undefined,
                                 DOUBLE, SINGLE)
from openpower.decoder.selectable_int import SelectableInt
from openpower.decoder.selectable_int import selectconcat as concat
from openpower.decoder.orderedset import OrderedSet

class fixedldstcache:

    @inject()
    def op_lbzcix(self, RA, RB):
        b = GPR.getz(_RA)
        EA = b + RB
        RT = concat(concat(0, repeat=56), MEM(EA, 1))
        return (RT,)

    @inject()
    def op_lhzcix(self, RA, RB):
        b = GPR.getz(_RA)
        EA = b + RB
        RT = concat(concat(0, repeat=48), MEM(EA, 2))
        return (RT,)

    @inject()
    def op_lwzcix(self, RA, RB):
        b = GPR.getz(_RA)
        EA = b + RB
        RT = concat(concat(0, repeat=32), MEM(EA, 4))
        return (RT,)

    @inject()
    def op_ldcix(self, RA, RB):
        b = GPR.getz(_RA)
        EA = b + RB
        RT = MEM(EA, 8)
        return (RT,)

    @inject()
    def op_stbcix(self, RA, RB, RS):
        b = GPR.getz(_RA)
        EA = b + RB
        memassign(EA, 1, RS[56:64])

    @inject()
    def op_sthcix(self, RA, RB, RS):
        b = GPR.getz(_RA)
        EA = b + RB
        memassign(EA, 2, RS[48:64])

    @inject()
    def op_stwcix(self, RA, RB, RS):
        b = GPR.getz(_RA)
        EA = b + RB
        memassign(EA, 4, RS[32:64])

    @inject()
    def op_stdcix(self, RA, RB, RS):
        b = GPR.getz(_RA)
        EA = b + RB
        memassign(EA, 8, RS)

    fixedldstcache_instrs = {}
    fixedldstcache_instrs['lbzcix'] = instruction_info(func=op_lbzcix,
                read_regs=OrderedSet(['RA', 'RB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RT', 'RA', 'RB']])
    fixedldstcache_instrs['lhzcix'] = instruction_info(func=op_lhzcix,
                read_regs=OrderedSet(['RA', 'RB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RT', 'RA', 'RB']])
    fixedldstcache_instrs['lwzcix'] = instruction_info(func=op_lwzcix,
                read_regs=OrderedSet(['RA', 'RB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RT', 'RA', 'RB']])
    fixedldstcache_instrs['ldcix'] = instruction_info(func=op_ldcix,
                read_regs=OrderedSet(['RA', 'RB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RT', 'RA', 'RB']])
    fixedldstcache_instrs['stbcix'] = instruction_info(func=op_stbcix,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedldstcache_instrs['sthcix'] = instruction_info(func=op_sthcix,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedldstcache_instrs['stwcix'] = instruction_info(func=op_stwcix,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedldstcache_instrs['stdcix'] = instruction_info(func=op_stdcix,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
