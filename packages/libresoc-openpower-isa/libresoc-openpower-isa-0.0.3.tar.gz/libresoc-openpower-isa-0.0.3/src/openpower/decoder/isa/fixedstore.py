# auto-generated by pywriter.py, do not edit or commit

from openpower.decoder.isa.caller import inject, instruction_info
from openpower.decoder.helpers import (EXTS, EXTS64, EXTZ64, ROTL64, ROTL32,
                                 MASK, MASK32,
                                 ne, eq, gt, ge, lt, le, ltu, gtu, length,
                                 trunc_divs, trunc_rems, MULS, DIVS, MODS,
                                 EXTS128, undefined,
                                 DOUBLE, SINGLE)
from openpower.decoder.selectable_int import SelectableInt
from openpower.decoder.selectable_int import selectconcat as concat
from openpower.decoder.orderedset import OrderedSet

class fixedstore:

    @inject()
    def op_stb(self, RA, RS):
        b = GPR.getz(_RA)
        EA = b + EXTS(D)
        memassign(EA, 1, RS[56:64])

    @inject()
    def op_stbx(self, RA, RB, RS):
        b = GPR.getz(_RA)
        EA = b + RB
        memassign(EA, 1, RS[56:64])

    @inject()
    def op_stbu(self, RA, RS):
        EA = RA + EXTS(D)
        memassign(EA, 1, RS[56:64])
        RA = EA
        return (RA,)

    @inject()
    def op_stbux(self, RA, RB, RS):
        EA = RA + RB
        memassign(EA, 1, RS[56:64])
        RA = EA
        return (RA,)

    @inject()
    def op_sth(self, RA, RS):
        b = GPR.getz(_RA)
        EA = b + EXTS(D)
        memassign(EA, 2, RS[48:64])

    @inject()
    def op_sthx(self, RA, RB, RS):
        b = GPR.getz(_RA)
        EA = b + RB
        memassign(EA, 2, RS[48:64])

    @inject()
    def op_sthu(self, RA, RS):
        EA = RA + EXTS(D)
        memassign(EA, 2, RS[48:64])
        RA = EA
        return (RA,)

    @inject()
    def op_sthux(self, RA, RB, RS):
        EA = RA + RB
        memassign(EA, 2, RS[48:64])
        RA = EA
        return (RA,)

    @inject()
    def op_stw(self, RA, RS):
        b = GPR.getz(_RA)
        EA = b + EXTS(D)
        memassign(EA, 4, RS[32:64])

    @inject()
    def op_stwx(self, RA, RB, RS):
        b = GPR.getz(_RA)
        EA = b + RB
        memassign(EA, 4, RS[32:64])

    @inject()
    def op_stwu(self, RA, RS):
        EA = RA + EXTS(D)
        memassign(EA, 4, RS[32:64])
        RA = EA
        return (RA,)

    @inject()
    def op_stwux(self, RA, RB, RS):
        EA = RA + RB
        memassign(EA, 4, RS[32:64])
        RA = EA
        return (RA,)

    @inject()
    def op_std(self, RA, RS):
        b = GPR.getz(_RA)
        EA = b + EXTS(concat(DS, SelectableInt(value=0x0, bits=2)))
        memassign(EA, 8, RS)

    @inject()
    def op_stdx(self, RA, RB, RS):
        b = GPR.getz(_RA)
        EA = b + RB
        memassign(EA, 8, RS)

    @inject()
    def op_stdu(self, RA, RS):
        EA = RA + EXTS(concat(DS, SelectableInt(value=0x0, bits=2)))
        memassign(EA, 8, RS)
        RA = EA
        return (RA,)

    @inject()
    def op_stdux(self, RA, RB, RS):
        EA = RA + RB
        memassign(EA, 8, RS)
        RA = EA
        return (RA,)

    @inject()
    def op_stq(self, RA):
        b = GPR.getz(_RA)
        EA = b + EXTS(concat(DS, SelectableInt(value=0x0, bits=2)))
        memassign(EA, 16, RSp)

    @inject()
    def op_sthbrx(self, RA, RB, RS):
        b = GPR.getz(_RA)
        EA = b + RB
        memassign(EA, 2, concat(RS[56:64], RS[48:56]))

    @inject()
    def op_stwbrx(self, RA, RB, RS):
        b = GPR.getz(_RA)
        EA = b + RB
        memassign(EA, 4, concat(RS[56:64], RS[48:56], RS[40:48], RS[32:40]))

    @inject()
    def op_stdbrx(self, RA, RB, RS):
        b = GPR.getz(_RA)
        EA = b + RB
        memassign(EA, 8, concat(RS[56:64], RS[48:56], RS[40:48], RS[32:40], RS[24:
            32], RS[16:24], RS[8:16], RS[0:8]))

    @inject()
    def op_stmw(self, RA):
        b = GPR.getz(_RA)
        EA = b + EXTS(D)
        r = RS
        while le(r, 31):
            memassign(EA, 4, GPR(r)[32:64])
            r = r + 1
            EA = EA + 4

    fixedstore_instrs = {}
    fixedstore_instrs['stb'] = instruction_info(func=op_stb,
                read_regs=OrderedSet(['RA', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(['D']),
                form='D',
                asmregs=[['RS', 'D(RA)']])
    fixedstore_instrs['stbx'] = instruction_info(func=op_stbx,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedstore_instrs['stbu'] = instruction_info(func=op_stbu,
                read_regs=OrderedSet(['RA', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RA']),
                special_regs=OrderedSet(), op_fields=OrderedSet(['D']),
                form='D',
                asmregs=[['RS', 'D(RA)']])
    fixedstore_instrs['stbux'] = instruction_info(func=op_stbux,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RA']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedstore_instrs['sth'] = instruction_info(func=op_sth,
                read_regs=OrderedSet(['RA', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(['D']),
                form='D',
                asmregs=[['RS', 'D(RA)']])
    fixedstore_instrs['sthx'] = instruction_info(func=op_sthx,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedstore_instrs['sthu'] = instruction_info(func=op_sthu,
                read_regs=OrderedSet(['RA', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RA']),
                special_regs=OrderedSet(), op_fields=OrderedSet(['D']),
                form='D',
                asmregs=[['RS', 'D(RA)']])
    fixedstore_instrs['sthux'] = instruction_info(func=op_sthux,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RA']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedstore_instrs['stw'] = instruction_info(func=op_stw,
                read_regs=OrderedSet(['RA', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(['D']),
                form='D',
                asmregs=[['RS', 'D(RA)']])
    fixedstore_instrs['stwx'] = instruction_info(func=op_stwx,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedstore_instrs['stwu'] = instruction_info(func=op_stwu,
                read_regs=OrderedSet(['RA', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RA']),
                special_regs=OrderedSet(), op_fields=OrderedSet(['D']),
                form='D',
                asmregs=[['RS', 'D(RA)']])
    fixedstore_instrs['stwux'] = instruction_info(func=op_stwux,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RA']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedstore_instrs['std'] = instruction_info(func=op_std,
                read_regs=OrderedSet(['RA', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(['DS']),
                form='DS',
                asmregs=[['RS', 'DS(RA)']])
    fixedstore_instrs['stdx'] = instruction_info(func=op_stdx,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedstore_instrs['stdu'] = instruction_info(func=op_stdu,
                read_regs=OrderedSet(['RA', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RA']),
                special_regs=OrderedSet(), op_fields=OrderedSet(['DS']),
                form='DS',
                asmregs=[['RS', 'DS(RA)']])
    fixedstore_instrs['stdux'] = instruction_info(func=op_stdux,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RA']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedstore_instrs['stq'] = instruction_info(func=op_stq,
                read_regs=OrderedSet(['RA']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(['DS', 'RSp']),
                form='DS',
                asmregs=[['RSp', 'DS(RA)']])
    fixedstore_instrs['sthbrx'] = instruction_info(func=op_sthbrx,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedstore_instrs['stwbrx'] = instruction_info(func=op_stwbrx,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedstore_instrs['stdbrx'] = instruction_info(func=op_stdbrx,
                read_regs=OrderedSet(['RA', 'RB', 'RS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['RS', 'RA', 'RB']])
    fixedstore_instrs['stmw'] = instruction_info(func=op_stmw,
                read_regs=OrderedSet(['RA']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(['D']),
                form='D',
                asmregs=[['RS', 'D(RA)']])
