# auto-generated by pywriter.py, do not edit or commit

from openpower.decoder.isa.caller import inject, instruction_info
from openpower.decoder.helpers import (EXTS, EXTS64, EXTZ64, ROTL64, ROTL32,
                                 MASK, MASK32,
                                 ne, eq, gt, ge, lt, le, ltu, gtu, length,
                                 trunc_divs, trunc_rems, MULS, DIVS, MODS,
                                 EXTS128, undefined,
                                 DOUBLE, SINGLE)
from openpower.decoder.selectable_int import SelectableInt
from openpower.decoder.selectable_int import selectconcat as concat
from openpower.decoder.orderedset import OrderedSet

class fpstore:

    @inject()
    def op_stfs(self, RA, FRS):
        EA = GPR.getz(_RA) + EXTS(D)
        memassign(EA, 4, SINGLE(FRS))

    @inject()
    def op_stfsx(self, RA, RB, FRS):
        EA = GPR.getz(_RA) + RB
        memassign(EA, 4, SINGLE(FRS))

    @inject()
    def op_stfsu(self, RA, FRS):
        EA = RA + EXTS(D)
        memassign(EA, 4, SINGLE(FRS))
        RA = EA
        return (RA,)

    @inject()
    def op_stfsux(self, RA, RB, FRS):
        EA = RA + RB
        memassign(EA, 4, SINGLE(FRS))
        RA = EA
        return (RA,)

    @inject()
    def op_stfd(self, RA, FRS):
        EA = GPR.getz(_RA) + EXTS(D)
        memassign(EA, 8, FRS)

    @inject()
    def op_stfdx(self, RA, RB, FRS):
        EA = GPR.getz(_RA) + RB
        memassign(EA, 8, FRS)

    @inject()
    def op_stfdu(self, RA, FRS):
        EA = RA + EXTS(D)
        memassign(EA, 8, FRS)
        RA = EA
        return (RA,)

    @inject()
    def op_stfdux(self, RA, RB, FRS):
        EA = RA + RB
        memassign(EA, 8, FRS)
        RA = EA
        return (RA,)

    @inject()
    def op_stfiwx(self, RA, RB, FRS):
        b = GPR.getz(_RA)
        EA = b + RB
        memassign(EA, 8, FRS[32:64])

    fpstore_instrs = {}
    fpstore_instrs['stfs'] = instruction_info(func=op_stfs,
                read_regs=OrderedSet(['RA', 'FRS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(['D']),
                form='D',
                asmregs=[['FRS', 'D(RA)']])
    fpstore_instrs['stfsx'] = instruction_info(func=op_stfsx,
                read_regs=OrderedSet(['RA', 'RB', 'FRS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['FRS', 'RA', 'RB']])
    fpstore_instrs['stfsu'] = instruction_info(func=op_stfsu,
                read_regs=OrderedSet(['RA', 'FRS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RA']),
                special_regs=OrderedSet(), op_fields=OrderedSet(['D']),
                form='D',
                asmregs=[['FRS', 'D(RA)']])
    fpstore_instrs['stfsux'] = instruction_info(func=op_stfsux,
                read_regs=OrderedSet(['RA', 'RB', 'FRS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RA']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['FRS', 'RA', 'RB']])
    fpstore_instrs['stfd'] = instruction_info(func=op_stfd,
                read_regs=OrderedSet(['RA', 'FRS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(['D']),
                form='D',
                asmregs=[['FRS', 'D(RA)']])
    fpstore_instrs['stfdx'] = instruction_info(func=op_stfdx,
                read_regs=OrderedSet(['RA', 'RB', 'FRS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['FRS', 'RA', 'RB']])
    fpstore_instrs['stfdu'] = instruction_info(func=op_stfdu,
                read_regs=OrderedSet(['RA', 'FRS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RA']),
                special_regs=OrderedSet(), op_fields=OrderedSet(['D']),
                form='D',
                asmregs=[['FRS', 'D(RA)']])
    fpstore_instrs['stfdux'] = instruction_info(func=op_stfdux,
                read_regs=OrderedSet(['RA', 'RB', 'FRS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['RA']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['FRS', 'RA', 'RB']])
    fpstore_instrs['stfiwx'] = instruction_info(func=op_stfiwx,
                read_regs=OrderedSet(['RA', 'RB', 'FRS']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='X',
                asmregs=[['FRS', 'RA', 'RB']])
