# auto-generated by pywriter.py, do not edit or commit

from openpower.decoder.isa.caller import inject, instruction_info
from openpower.decoder.helpers import (EXTS, EXTS64, EXTZ64, ROTL64, ROTL32,
                                 MASK, MASK32,
                                 ne, eq, gt, ge, lt, le, ltu, gtu, length,
                                 trunc_divs, trunc_rems, MULS, DIVS, MODS,
                                 EXTS128, undefined,
                                 DOUBLE, SINGLE,
                                 FPADD32, FPSUB32, FPMUL32, FPDIV32,
                                 FPADD64, FPSUB64, FPMUL64, FPDIV64,
                                )
from openpower.decoder.selectable_int import SelectableInt
from openpower.decoder.selectable_int import selectconcat as concat
from openpower.decoder.orderedset import OrderedSet

class fparith:

    @inject()
    def op_fadds(self, FRA, FRB):
        FRT = FPADD32(FRA, FRB)
        return (FRT,)

    @inject()
    def op_fadds_(self, FRA, FRB):
        FRT = FPADD32(FRA, FRB)
        return (FRT,)

    @inject()
    def op_fadd(self, FRA, FRB):
        FRT = FPADD64(FRA, FRB)
        return (FRT,)

    @inject()
    def op_fadd_(self, FRA, FRB):
        FRT = FPADD64(FRA, FRB)
        return (FRT,)

    @inject()
    def op_fsubs(self, FRA, FRB):
        FRT = FPSUB32(FRA, FRB)
        return (FRT,)

    @inject()
    def op_fsubs_(self, FRA, FRB):
        FRT = FPSUB32(FRA, FRB)
        return (FRT,)

    @inject()
    def op_fsub(self, FRA, FRB):
        FRT = FPSUB64(FRA, FRB)
        return (FRT,)

    @inject()
    def op_fsub_(self, FRA, FRB):
        FRT = FPSUB64(FRA, FRB)
        return (FRT,)

    @inject()
    def op_fmuls(self, FRA, FRC):
        FRT = FPMUL32(FRA, FRC)
        return (FRT,)

    @inject()
    def op_fmuls_(self, FRA, FRC):
        FRT = FPMUL32(FRA, FRC)
        return (FRT,)

    @inject()
    def op_fmul(self, FRA, FRC):
        FRT = FPMUL64(FRA, FRC)
        return (FRT,)

    @inject()
    def op_fmul_(self, FRA, FRC):
        FRT = FPMUL64(FRA, FRC)
        return (FRT,)

    @inject()
    def op_fdivs(self, FRA, FRB):
        FRT = FPDIV32(FRA, FRB)
        return (FRT,)

    @inject()
    def op_fdivs_(self, FRA, FRB):
        FRT = FPDIV32(FRA, FRB)
        return (FRT,)

    @inject()
    def op_fdiv(self, FRA, FRB):
        FRT = FPDIV64(FRA, FRB)
        return (FRT,)

    @inject()
    def op_fdiv_(self, FRA, FRB):
        FRT = FPDIV64(FRA, FRB)
        return (FRT,)

    fparith_instrs = {}
    fparith_instrs['fadds'] = instruction_info(func=op_fadds,
                read_regs=OrderedSet(['FRA', 'FRB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRB'], '(Rc=0)'])
    fparith_instrs['fadds.'] = instruction_info(func=op_fadds_,
                read_regs=OrderedSet(['FRA', 'FRB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRB'], '(Rc=0)'])
    fparith_instrs['fadd'] = instruction_info(func=op_fadd,
                read_regs=OrderedSet(['FRA', 'FRB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRB'], '(Rc=0)'])
    fparith_instrs['fadd.'] = instruction_info(func=op_fadd_,
                read_regs=OrderedSet(['FRA', 'FRB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRB'], '(Rc=0)'])
    fparith_instrs['fsubs'] = instruction_info(func=op_fsubs,
                read_regs=OrderedSet(['FRA', 'FRB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRB'], '(Rc=0)'])
    fparith_instrs['fsubs.'] = instruction_info(func=op_fsubs_,
                read_regs=OrderedSet(['FRA', 'FRB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRB'], '(Rc=0)'])
    fparith_instrs['fsub'] = instruction_info(func=op_fsub,
                read_regs=OrderedSet(['FRA', 'FRB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRB'], '(Rc=0)'])
    fparith_instrs['fsub.'] = instruction_info(func=op_fsub_,
                read_regs=OrderedSet(['FRA', 'FRB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRB'], '(Rc=0)'])
    fparith_instrs['fmuls'] = instruction_info(func=op_fmuls,
                read_regs=OrderedSet(['FRA', 'FRC']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRC'], '(Rc=0)'])
    fparith_instrs['fmuls.'] = instruction_info(func=op_fmuls_,
                read_regs=OrderedSet(['FRA', 'FRC']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRC'], '(Rc=0)'])
    fparith_instrs['fmul'] = instruction_info(func=op_fmul,
                read_regs=OrderedSet(['FRA', 'FRC']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRC'], '(Rc=0)'])
    fparith_instrs['fmul.'] = instruction_info(func=op_fmul_,
                read_regs=OrderedSet(['FRA', 'FRC']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRC'], '(Rc=0)'])
    fparith_instrs['fdivs'] = instruction_info(func=op_fdivs,
                read_regs=OrderedSet(['FRA', 'FRB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRB'], '(Rc=0)'])
    fparith_instrs['fdivs.'] = instruction_info(func=op_fdivs_,
                read_regs=OrderedSet(['FRA', 'FRB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRB'], '(Rc=0)'])
    fparith_instrs['fdiv'] = instruction_info(func=op_fdiv,
                read_regs=OrderedSet(['FRA', 'FRB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRB'], '(Rc=0)'])
    fparith_instrs['fdiv.'] = instruction_info(func=op_fdiv_,
                read_regs=OrderedSet(['FRA', 'FRB']),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['FRT']),
                special_regs=OrderedSet(), op_fields=OrderedSet(),
                form='A',
                asmregs=[['FRT', 'FRA', 'FRB'], '(Rc=0)'])
