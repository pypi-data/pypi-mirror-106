# auto-generated by pywriter.py, do not edit or commit

from openpower.decoder.isa.caller import inject, instruction_info
from openpower.decoder.helpers import (EXTS, EXTS64, EXTZ64, ROTL64, ROTL32,
                                 MASK, MASK32,
                                 ne, eq, gt, ge, lt, le, ltu, gtu, length,
                                 trunc_divs, trunc_rems, MULS, DIVS, MODS,
                                 EXTS128, undefined,
                                 DOUBLE, SINGLE)
from openpower.decoder.selectable_int import SelectableInt
from openpower.decoder.selectable_int import selectconcat as concat
from openpower.decoder.orderedset import OrderedSet

class condition:

    @inject()
    def op_crand(self, CR):
        CR[BT + 32] = CR[BA + 32] & CR[BB + 32]
        return (CR,)

    @inject()
    def op_crnand(self, CR):
        CR[BT + 32] = ~(CR[BA + 32] & CR[BB + 32])
        return (CR,)

    @inject()
    def op_cror(self, CR):
        CR[BT + 32] = CR[BA + 32] | CR[BB + 32]
        return (CR,)

    @inject()
    def op_crxor(self, CR):
        CR[BT + 32] = CR[BA + 32] ^ CR[BB + 32]
        return (CR,)

    @inject()
    def op_crnor(self, CR):
        CR[BT + 32] = ~(CR[BA + 32] | CR[BB + 32])
        return (CR,)

    @inject()
    def op_creqv(self, CR):
        CR[BT + 32] = ~(CR[BA + 32] ^ CR[BB + 32])
        return (CR,)

    @inject()
    def op_crandc(self, CR):
        CR[BT + 32] = CR[BA + 32] & ~CR[BB + 32]
        return (CR,)

    @inject()
    def op_crorc(self, CR):
        CR[BT + 32] = CR[BA + 32] | ~CR[BB + 32]
        return (CR,)

    @inject()
    def op_mcrf(self, CR):
        CR[4 * BF + 32:4 * BF + 35 + 1] = CR[4 * BFA + 32:4 * BFA + 35 + 1]
        return (CR,)

    condition_instrs = {}
    condition_instrs['crand'] = instruction_info(func=op_crand,
                read_regs=OrderedSet(),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['CR']),
                special_regs=OrderedSet(['CR']), op_fields=OrderedSet(['BT', 'BA', 'BB']),
                form='XL',
                asmregs=[['BT', 'BA', 'BB']])
    condition_instrs['crnand'] = instruction_info(func=op_crnand,
                read_regs=OrderedSet(),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['CR']),
                special_regs=OrderedSet(['CR']), op_fields=OrderedSet(['BT', 'BA', 'BB']),
                form='XL',
                asmregs=[['BT', 'BA', 'BB']])
    condition_instrs['cror'] = instruction_info(func=op_cror,
                read_regs=OrderedSet(),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['CR']),
                special_regs=OrderedSet(['CR']), op_fields=OrderedSet(['BT', 'BA', 'BB']),
                form='XL',
                asmregs=[['BT', 'BA', 'BB']])
    condition_instrs['crxor'] = instruction_info(func=op_crxor,
                read_regs=OrderedSet(),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['CR']),
                special_regs=OrderedSet(['CR']), op_fields=OrderedSet(['BT', 'BA', 'BB']),
                form='XL',
                asmregs=[['BT', 'BA', 'BB']])
    condition_instrs['crnor'] = instruction_info(func=op_crnor,
                read_regs=OrderedSet(),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['CR']),
                special_regs=OrderedSet(['CR']), op_fields=OrderedSet(['BT', 'BA', 'BB']),
                form='XL',
                asmregs=[['BT', 'BA', 'BB']])
    condition_instrs['creqv'] = instruction_info(func=op_creqv,
                read_regs=OrderedSet(),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['CR']),
                special_regs=OrderedSet(['CR']), op_fields=OrderedSet(['BT', 'BA', 'BB']),
                form='XL',
                asmregs=[['BT', 'BA', 'BB']])
    condition_instrs['crandc'] = instruction_info(func=op_crandc,
                read_regs=OrderedSet(),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['CR']),
                special_regs=OrderedSet(['CR']), op_fields=OrderedSet(['BT', 'BA', 'BB']),
                form='XL',
                asmregs=[['BT', 'BA', 'BB']])
    condition_instrs['crorc'] = instruction_info(func=op_crorc,
                read_regs=OrderedSet(),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['CR']),
                special_regs=OrderedSet(['CR']), op_fields=OrderedSet(['BT', 'BA', 'BB']),
                form='XL',
                asmregs=[['BT', 'BA', 'BB']])
    condition_instrs['mcrf'] = instruction_info(func=op_mcrf,
                read_regs=OrderedSet(),
                uninit_regs=OrderedSet(), write_regs=OrderedSet(['CR']),
                special_regs=OrderedSet(['CR']), op_fields=OrderedSet(['BF', 'BFA']),
                form='XL',
                asmregs=[['BF', 'BFA']])
