{"version":3,"sources":["ThemeProvider.tsx","MediaStreamPlayer.tsx","Placeholder.tsx","WebRtcStreamer.tsx","index.tsx","DeviceSelector.tsx"],"names":["ThemeProvider","props","stTheme","theme","muiTheme","React","useMemo","textColorScale","chroma","scale","textColor","backgroundColor","mode","createMuiTheme","palette","primary","main","primaryColor","background","default","paper","secondaryBackgroundColor","text","secondary","hex","disabled","typography","fontFamily","font","children","videoStyle","width","MediaStreamPlayer","useEffect","Streamlit","setFrameHeight","hasVideo","stream","getVideoTracks","length","refCallback","useCallback","node","srcObject","refreshFrameHeight","style","ref","autoPlay","controls","onCanPlay","memo","useStyles","makeStyles","padding","spacing","display","justifyContent","alignItems","Placeholder","classes","Paper","className","elevation","loading","CircularProgress","fontSize","isWebRtcMode","val","getVideoAudioUsage","args","constraintsFromPython","settings","media_stream_constraints","videoEnabled","video","audioEnabled","audio","setupOffer","pc","createOffer","then","offer","console","log","setLocalDescription","Promise","resolve","iceGatheringState","addEventListener","checkState","removeEventListener","localDescription","catch","err","error","WebRtcStreamer","videoRef","audioRef","processAnswerInner","sdpAnswerJson","a","sdpAnswer","JSON","parse","setRemoteDescription","processAnswer","finally","setState","signaling","startInner","Error","config","rtc_configuration","RTCPeerConnection","evt","streams","constraints","state","audioInput","deviceId","videoInput","navigator","mediaDevices","getUserMedia","getTracks","forEach","track","addTrack","getTransceivers","direction","addTransceiver","playing","toJSON","setComponentValue","sdpOffer","warn","start","stopInner","undefined","transceiver","stop","getSenders","sender","setTimeout","close","stopping","handleDeviceSelect","render","buttonDisabled","receivable","isReceivable","transmittable","isTransmittable","Box","Alert","severity","name","message","py","Button","variant","onClick","color","DeviceSelector","onSelect","value","createRef","this","remoteDescription","StreamlitComponentBase","withStreamlitConnection","overrides","MuiCssBaseline","body","ReactDOM","StrictMode","CssBaseline","document","getElementById","formControl","maxWidth","margin","minWidth","formButtonControl","marginBottom","selectEmpty","marginTop","DeviceSelecter","labelId","devices","onChangeProp","onChange","e","selected","find","d","target","aria-label","setImmediate","map","device","label","DeviceSelectPopper","open","anchorEl","devicesMap","onSubmit","useState","selectedVideo","setSelectedVideo","selectedAudio","setSelectedAudio","handleSubmit","preventDefault","originalBodyHeightRef","useRef","popperRefFn","popper","getElementsByTagName","current","height","window","getComputedStyle","scrollBottom","WebKitCSSMatrix","transform","m42","getBoundingClientRect","scrollHeight","placement","id","type","setOpen","setAnchorEl","setDevicesMap","unavailable","setUnavailable","onOpen","event","currentTarget","enumerateDevices","vidoeDevices","audioDevices","kind","push","onClose"],"mappings":"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","file":"static/js/main.e8ebcbb7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Theme } from \"streamlit-component-lib\";\nimport {\n  createMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n} from \"@material-ui/core/styles\";\nimport chroma from \"chroma-js\";\n\ninterface StreamlitThemeProviderProps {\n  theme: Theme | undefined;\n}\nexport const ThemeProvider: React.VFC<\n  React.PropsWithChildren<StreamlitThemeProviderProps>\n> = (props) => {\n  const stTheme = props.theme;\n\n  const muiTheme = React.useMemo(() => {\n    if (stTheme == null) {\n      return undefined;\n    }\n\n    const textColorScale = chroma\n      .scale([stTheme.textColor, stTheme.backgroundColor])\n      .mode(\"lab\");\n\n    return createMuiTheme({\n      palette: {\n        primary: {\n          main: stTheme.primaryColor,\n        },\n        background: {\n          default: stTheme.backgroundColor,\n          paper: stTheme.secondaryBackgroundColor,\n        },\n        text: {\n          primary: stTheme.textColor,\n          secondary: textColorScale(0.1).hex(),\n          disabled: textColorScale(0.5).hex(),\n        },\n      },\n      typography: {\n        fontFamily: stTheme.font,\n      },\n    });\n  }, [stTheme]);\n\n  if (muiTheme == null) {\n    return <>{props.children}</>;\n  }\n\n  return <MuiThemeProvider theme={muiTheme}>{props.children}</MuiThemeProvider>;\n};\n\nexport default ThemeProvider;\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, { useEffect, useCallback } from \"react\";\n\nconst videoStyle: JSX.IntrinsicElements[\"video\"][\"style\"] = {\n  width: \"100%\",\n};\n\ninterface MediaStreamPlayerProps {\n  stream: MediaStream;\n}\nconst MediaStreamPlayer: React.VFC<MediaStreamPlayerProps> = (props) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  const hasVideo = props.stream.getVideoTracks().length > 0;\n\n  const refCallback = useCallback(\n    (node: HTMLVideoElement | HTMLAudioElement | null) => {\n      if (node) {\n        node.srcObject = props.stream;\n      }\n    },\n    [props.stream]\n  );\n\n  const refreshFrameHeight = useCallback(() => Streamlit.setFrameHeight(), []);\n\n  return hasVideo ? (\n    <video\n      style={videoStyle}\n      ref={refCallback}\n      autoPlay\n      controls\n      onCanPlay={refreshFrameHeight}\n    />\n  ) : (\n    <audio ref={refCallback} autoPlay controls />\n  );\n};\n\nexport default React.memo(MediaStreamPlayer);\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport VideoLabelIcon from \"@material-ui/icons/VideoLabel\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\ninterface PlaceholderProps {\n  loading: boolean;\n}\nconst Placeholder: React.VFC<PlaceholderProps> = (props) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper} elevation={0}>\n      {props.loading ? (\n        <CircularProgress />\n      ) : (\n        <VideoLabelIcon fontSize=\"large\" />\n      )}\n    </Paper>\n  );\n};\n\nexport default React.memo(Placeholder);\n","import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport DeviceSelector from \"./DeviceSelector\";\nimport ThemeProvider from \"./ThemeProvider\";\nimport MediaStreamPlayer from \"./MediaStreamPlayer\";\nimport Placeholder from \"./Placeholder\";\n\ntype WebRtcMode = \"RECVONLY\" | \"SENDONLY\" | \"SENDRECV\";\nconst isWebRtcMode = (val: unknown): val is WebRtcMode =>\n  val === \"RECVONLY\" || val === \"SENDONLY\" || val === \"SENDRECV\";\nconst isReceivable = (mode: WebRtcMode): boolean =>\n  mode === \"SENDRECV\" || mode === \"RECVONLY\";\nconst isTransmittable = (mode: WebRtcMode): boolean =>\n  mode === \"SENDRECV\" || mode === \"SENDONLY\";\n\nconst getVideoAudioUsage = (\n  args: any\n): { videoEnabled: boolean; audioEnabled: boolean } => {\n  const constraintsFromPython = args.settings?.media_stream_constraints;\n  const videoEnabled = constraintsFromPython\n    ? constraintsFromPython.video\n    : true;\n  const audioEnabled = constraintsFromPython\n    ? constraintsFromPython.audio\n    : true;\n\n  return { videoEnabled, audioEnabled };\n};\n\nconst setupOffer = (\n  pc: RTCPeerConnection\n): Promise<RTCSessionDescription | null> => {\n  return pc\n    .createOffer()\n    .then((offer) => {\n      console.log(\"Created offer:\", offer);\n      return pc.setLocalDescription(offer);\n    })\n    .then(() => {\n      console.log(\"Wait for ICE gethering...\");\n      // Wait for ICE gathering to complete\n      return new Promise<void>((resolve) => {\n        if (pc.iceGatheringState === \"complete\") {\n          resolve();\n        } else {\n          const checkState = () => {\n            if (pc.iceGatheringState === \"complete\") {\n              pc.removeEventListener(\"icegatheringstatechange\", checkState);\n              resolve();\n            }\n          };\n          pc.addEventListener(\"icegatheringstatechange\", checkState);\n        }\n      });\n    })\n    .then(() => {\n      const offer = pc.localDescription;\n      return offer;\n    })\n    .catch((err) => {\n      console.error(err);\n      throw err;\n    });\n};\n\ninterface State {\n  signaling: boolean;\n  playing: boolean;\n  stopping: boolean;\n  videoInput: MediaDeviceInfo | null;\n  audioInput: MediaDeviceInfo | null;\n  stream: MediaStream | null;\n  error: Error | null;\n}\n\nclass WebRtcStreamer extends StreamlitComponentBase<State> {\n  private pc: RTCPeerConnection | undefined;\n  private videoRef: React.RefObject<HTMLVideoElement>;\n  private audioRef: React.RefObject<HTMLAudioElement>;\n\n  constructor(props: ComponentProps) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.audioRef = React.createRef();\n\n    this.state = {\n      signaling: false,\n      playing: false,\n      stopping: false,\n      videoInput: null,\n      audioInput: null,\n      stream: null,\n      error: null,\n    };\n  }\n\n  private processAnswerInner = async (\n    pc: RTCPeerConnection,\n    sdpAnswerJson: string\n  ): Promise<void> => {\n    const sdpAnswer = JSON.parse(sdpAnswerJson);\n    console.log(\"Receive answer sdpOffer\", sdpAnswer);\n    await pc.setRemoteDescription(sdpAnswer);\n  };\n\n  private processAnswer = (\n    pc: RTCPeerConnection,\n    sdpAnswerJson: string\n  ): void => {\n    this.processAnswerInner(pc, sdpAnswerJson)\n      .then(() => {\n        console.log(\"Remote description is set\");\n      })\n      .finally(() => this.setState({ signaling: false }));\n  };\n\n  private startInner = async () => {\n    const mode = this.props.args[\"mode\"];\n    if (!isWebRtcMode(mode)) {\n      throw new Error(`Invalid mode ${mode}`);\n    }\n\n    this.setState({\n      signaling: true,\n      stream: null,\n      error: null,\n    });\n\n    const config: RTCConfiguration =\n      this.props.args.settings?.rtc_configuration || {};\n    console.log(\"RTCConfiguration:\", config);\n    const pc = new RTCPeerConnection(config);\n\n    // Connect received audio / video to DOM elements\n    if (mode === \"SENDRECV\" || mode === \"RECVONLY\") {\n      pc.addEventListener(\"track\", (evt) => {\n        const stream = evt.streams[0]; // TODO: Handle multiple streams\n        this.setState({\n          stream,\n        });\n      });\n    }\n\n    // Set up transceivers\n    if (mode === \"SENDRECV\" || mode === \"SENDONLY\") {\n      const { videoEnabled, audioEnabled } = getVideoAudioUsage(\n        this.props.args\n      );\n      const constraints: MediaStreamConstraints = {};\n      if (audioEnabled) {\n        constraints.audio = this.state.audioInput\n          ? {\n              deviceId: this.state.audioInput.deviceId,\n            }\n          : true;\n      }\n      if (videoEnabled) {\n        constraints.video = this.state.videoInput\n          ? {\n              deviceId: this.state.videoInput.deviceId,\n            }\n          : true;\n      }\n      console.log(\"MediaStreamConstraints:\", constraints);\n\n      if (constraints.audio || constraints.video) {\n        if (navigator.mediaDevices == null) {\n          // Ref: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#privacy_and_security\n          // > A secure context is, in short, a page loaded using HTTPS or the file:/// URL scheme, or a page loaded from localhost.\n          throw new Error(\n            \"navigator.mediaDevices is undefined. It seems the current document is not loaded securely.\"\n          );\n        }\n        if (navigator.mediaDevices.getUserMedia == null) {\n          throw new Error(\"getUserMedia is not implemented in this browser\");\n        }\n\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        stream.getTracks().forEach((track) => {\n          pc.addTrack(track, stream);\n        });\n      }\n\n      if (mode === \"SENDONLY\") {\n        for (const transceiver of pc.getTransceivers()) {\n          transceiver.direction = \"sendonly\";\n        }\n      }\n    } else if (mode === \"RECVONLY\") {\n      pc.addTransceiver(\"video\", { direction: \"recvonly\" });\n      pc.addTransceiver(\"audio\", { direction: \"recvonly\" });\n    }\n\n    this.setState({ playing: true });\n\n    console.log(\"transceivers\", pc.getTransceivers());\n\n    setupOffer(pc).then((offer) => {\n      if (offer == null) {\n        console.warn(\"Failed to create an offer SDP\");\n        return;\n      }\n\n      console.log(\"Send sdpOffer\", offer.toJSON());\n      Streamlit.setComponentValue({\n        sdpOffer: offer.toJSON(),\n        playing: true,\n      });\n    });\n    this.pc = pc;\n  };\n\n  private start = (): void => {\n    this.startInner().catch((error) =>\n      this.setState({ signaling: false, error })\n    );\n  };\n\n  private stopInner = async (): Promise<void> => {\n    const pc = this.pc;\n    this.pc = undefined;\n    this.setState({ playing: false }, () =>\n      Streamlit.setComponentValue({ playing: false })\n    );\n\n    if (pc == null) {\n      return Promise.resolve();\n    }\n\n    // close transceivers\n    if (pc.getTransceivers) {\n      pc.getTransceivers().forEach(function (transceiver) {\n        if (transceiver.stop) {\n          transceiver.stop();\n        }\n      });\n    }\n\n    // close local audio / video\n    pc.getSenders().forEach(function (sender) {\n      sender.track?.stop();\n    });\n\n    // close peer connection\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        pc.close();\n        resolve();\n      }, 500);\n    });\n  };\n\n  private stop = () => {\n    this.setState({ stopping: true });\n    this.stopInner().finally(() => {\n      this.setState({\n        stopping: false,\n        stream: null,\n      });\n    });\n  };\n\n  public componentDidUpdate() {\n    if (this.pc == null) {\n      return;\n    }\n    const pc = this.pc;\n    if (pc.remoteDescription == null) {\n      const sdpAnswerJson = this.props.args[\"sdp_answer_json\"];\n      if (sdpAnswerJson) {\n        this.processAnswer(pc, sdpAnswerJson);\n      }\n    }\n  }\n\n  private handleDeviceSelect = (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => {\n    this.setState({ videoInput: video, audioInput: audio });\n  };\n\n  public render = (): ReactNode => {\n    const buttonDisabled =\n      this.props.disabled || this.state.signaling || this.state.stopping;\n    const mode = this.props.args[\"mode\"];\n    const { videoEnabled, audioEnabled } = getVideoAudioUsage(this.props.args);\n    const receivable = isWebRtcMode(mode) && isReceivable(mode);\n    const transmittable = isWebRtcMode(mode) && isTransmittable(mode);\n\n    return (\n      <ThemeProvider theme={this.props.theme}>\n        <Box>\n          {this.state.error && (\n            <Alert severity=\"error\">\n              {this.state.error.name}: {this.state.error.message}\n            </Alert>\n          )}\n          <Box py={1}>\n            {this.state.stream ? (\n              <MediaStreamPlayer stream={this.state.stream} />\n            ) : (\n              receivable && <Placeholder loading={this.state.signaling} />\n            )}\n          </Box>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            {this.state.playing ? (\n              <Button\n                variant=\"contained\"\n                onClick={this.stop}\n                disabled={buttonDisabled}\n              >\n                Stop\n              </Button>\n            ) : (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.start}\n                disabled={buttonDisabled}\n              >\n                Start\n              </Button>\n            )}\n            {transmittable && (\n              <DeviceSelector\n                videoEnabled={videoEnabled}\n                audioEnabled={audioEnabled}\n                onSelect={this.handleDeviceSelect}\n                value={{\n                  video: this.state.videoInput,\n                  audio: this.state.audioInput,\n                }}\n              />\n            )}\n          </Box>\n        </Box>\n      </ThemeProvider>\n    );\n  };\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(WebRtcStreamer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport WebRtcStreamer from \"./WebRtcStreamer\";\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        body: {\n          // Unset the background-color since <CssBaseLine /> applies the default Material Design background color\n          // (https://material-ui.com/components/css-baseline/#approach),\n          // which however does not match the Streamlit's background.\n          backgroundColor: \"initial\",\n        },\n      },\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <WebRtcStreamer />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport { Streamlit } from \"streamlit-component-lib\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select, { SelectProps } from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popper, { PopperProps } from \"@material-ui/core/Popper\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    maxWidth: \"80vw\",\n    margin: theme.spacing(1),\n    minWidth: 120,\n    display: \"flex\",\n  },\n  formButtonControl: {\n    margin: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    minWidth: 120,\n    display: \"flex\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ninterface DevicesMap {\n  audio: MediaDeviceInfo[];\n  video: MediaDeviceInfo[];\n}\n\ninterface DeviceSelecterProps {\n  labelId: SelectProps[\"labelId\"];\n  value: MediaDeviceInfo | null;\n  devices: MediaDeviceInfo[];\n  onChange: (device: MediaDeviceInfo | null) => void;\n}\nconst DeviceSelecter = ({\n  labelId,\n  value,\n  devices,\n  onChange: onChangeProp,\n}: DeviceSelecterProps) => {\n  const classes = useStyles();\n\n  const onChange = useCallback<NonNullable<SelectProps[\"onChange\"]>>(\n    (e) => {\n      const selected = devices.find((d) => d.deviceId === e.target.value);\n      onChangeProp(selected || null);\n    },\n    [devices, onChangeProp]\n  );\n\n  if (devices.length === 0) {\n    return (\n      <Select value=\"\" disabled>\n        <option aria-label=\"None\" value=\"\" />\n      </Select>\n    );\n  }\n\n  if (value == null) {\n    setImmediate(() => onChangeProp(devices[0]));\n    return null;\n  }\n\n  return (\n    <Select\n      labelId={labelId}\n      value={value.deviceId}\n      onChange={onChange}\n      className={classes.selectEmpty}\n    >\n      {devices.map((device) => (\n        <MenuItem key={device.deviceId} value={device.deviceId}>\n          {device.label}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n\ninterface DeviceSelectPopperProps {\n  open: boolean;\n  anchorEl: PopperProps[\"anchorEl\"];\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n  value: {\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  };\n  devicesMap: DevicesMap;\n  onSubmit: (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => void;\n}\nconst DeviceSelectPopper = ({\n  open,\n  anchorEl,\n  videoEnabled,\n  audioEnabled,\n  value,\n  devicesMap,\n  onSubmit,\n}: DeviceSelectPopperProps) => {\n  const [selectedVideo, setSelectedVideo] =\n    useState<MediaDeviceInfo | null>(null);\n  const [selectedAudio, setSelectedAudio] =\n    useState<MediaDeviceInfo | null>(null);\n\n  useEffect(() => {\n    setSelectedVideo(\n      devicesMap.video.find((d) => d.deviceId === value.video?.deviceId) || null\n    );\n    setSelectedAudio(\n      devicesMap.audio.find((d) => d.deviceId === value.audio?.deviceId) || null\n    );\n  }, [devicesMap, value]);\n\n  const handleSubmit = useCallback<\n    NonNullable<React.ComponentProps<\"form\">[\"onSubmit\"]>\n  >(\n    (e) => {\n      e.preventDefault();\n      onSubmit(\n        videoEnabled ? selectedVideo : null,\n        audioEnabled ? selectedAudio : null\n      );\n    },\n    [onSubmit, videoEnabled, audioEnabled, selectedVideo, selectedAudio]\n  );\n\n  const classes = useStyles();\n\n  const originalBodyHeightRef = useRef<string>();\n  const popperRefFn = useCallback((popper: HTMLDivElement | null) => {\n    // Manage <body>'s height reacting to popper appearance.\n    if (popper) {\n      setTimeout(() => {\n        const body = document.getElementsByTagName(\"body\")[0];\n        originalBodyHeightRef.current = body.style.height;\n\n        const style = window.getComputedStyle(popper);\n        const matrix = new WebKitCSSMatrix(style.transform);\n        const translateY = matrix.m42;\n\n        const scrollBottom = translateY + popper.getBoundingClientRect().height;\n        if (scrollBottom > document.body.scrollHeight) {\n          body.style.height = `${scrollBottom}px`;\n          Streamlit.setFrameHeight();\n        }\n      }, 0);\n    } else {\n      const body = document.getElementsByTagName(\"body\")[0];\n      if (originalBodyHeightRef.current != null) {\n        body.style.height = originalBodyHeightRef.current;\n      }\n      Streamlit.setFrameHeight();\n    }\n  }, []);\n\n  return (\n    <Popper\n      ref={popperRefFn}\n      open={open}\n      anchorEl={anchorEl}\n      placement=\"left-end\"\n    >\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          {videoEnabled && (\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"video-input-select\">Video input</InputLabel>\n              <DeviceSelecter\n                labelId=\"video-input-select\"\n                devices={devicesMap.video}\n                value={selectedVideo}\n                onChange={setSelectedVideo}\n              />\n            </FormControl>\n          )}\n          {audioEnabled && (\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"audio-input-select\">Audio input</InputLabel>\n              <DeviceSelecter\n                labelId=\"audio-input-select\"\n                devices={devicesMap.audio}\n                value={selectedAudio}\n                onChange={setSelectedAudio}\n              />\n            </FormControl>\n          )}\n          <FormControl className={classes.formButtonControl}>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              OK\n            </Button>\n          </FormControl>\n        </form>\n      </Paper>\n    </Popper>\n  );\n};\n\ninterface DeviceSelectorProps {\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n  value: {\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  };\n  onSelect: (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => void;\n}\nconst DeviceSelector = ({\n  videoEnabled,\n  audioEnabled,\n  value,\n  onSelect,\n}: DeviceSelectorProps) => {\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const [devicesMap, setDevicesMap] = useState<DevicesMap>();\n  const [unavailable, setUnavailable] = useState(false);\n\n  const onOpen = useCallback<NonNullable<ButtonProps[\"onClick\"]>>((event) => {\n    setAnchorEl(event.currentTarget);\n\n    if (typeof navigator?.mediaDevices?.enumerateDevices !== \"function\") {\n      setDevicesMap(undefined);\n      setUnavailable(true);\n      return;\n    }\n\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\n      const vidoeDevices = [];\n      const audioDevices = [];\n      for (const device of devices) {\n        if (device.kind === \"videoinput\") {\n          vidoeDevices.push(device);\n        } else if (device.kind === \"audioinput\") {\n          audioDevices.push(device);\n        }\n      }\n      setDevicesMap({\n        video: vidoeDevices,\n        audio: audioDevices,\n      });\n      setOpen(true);\n    });\n  }, []);\n  const onClose = useCallback(() => setOpen(false), []);\n\n  const onSubmit = useCallback(\n    (video: MediaDeviceInfo | null, audio: MediaDeviceInfo | null) => {\n      setDevicesMap(undefined);\n      setOpen(false);\n      onSelect(video, audio);\n    },\n    [onSelect]\n  );\n\n  return (\n    <Box>\n      {unavailable && <p>Unavailable</p>}\n      {devicesMap && (\n        <DeviceSelectPopper\n          open={open}\n          anchorEl={anchorEl}\n          videoEnabled={videoEnabled}\n          audioEnabled={audioEnabled}\n          value={value}\n          devicesMap={devicesMap}\n          onSubmit={onSubmit}\n        />\n      )}\n      <Button onClick={open ? onClose : onOpen}>Select device</Button>\n    </Box>\n  );\n};\n\nexport default React.memo(DeviceSelector);\n"],"sourceRoot":""}