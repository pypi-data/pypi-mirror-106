# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from typedb_protocol.cluster import cluster_database_pb2 as cluster_dot_cluster__database__pb2
from typedb_protocol.cluster import cluster_server_pb2 as cluster_dot_cluster__server__pb2


class TypeDBClusterStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.servers_all = channel.unary_unary(
        '/typedb.protocol.TypeDBCluster/servers_all',
        request_serializer=cluster_dot_cluster__server__pb2.ServerManager.All.Req.SerializeToString,
        response_deserializer=cluster_dot_cluster__server__pb2.ServerManager.All.Res.FromString,
        )
    self.databases_get = channel.unary_unary(
        '/typedb.protocol.TypeDBCluster/databases_get',
        request_serializer=cluster_dot_cluster__database__pb2.ClusterDatabaseManager.Get.Req.SerializeToString,
        response_deserializer=cluster_dot_cluster__database__pb2.ClusterDatabaseManager.Get.Res.FromString,
        )
    self.databases_all = channel.unary_unary(
        '/typedb.protocol.TypeDBCluster/databases_all',
        request_serializer=cluster_dot_cluster__database__pb2.ClusterDatabaseManager.All.Req.SerializeToString,
        response_deserializer=cluster_dot_cluster__database__pb2.ClusterDatabaseManager.All.Res.FromString,
        )


class TypeDBClusterServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def servers_all(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def databases_get(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def databases_all(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TypeDBClusterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'servers_all': grpc.unary_unary_rpc_method_handler(
          servicer.servers_all,
          request_deserializer=cluster_dot_cluster__server__pb2.ServerManager.All.Req.FromString,
          response_serializer=cluster_dot_cluster__server__pb2.ServerManager.All.Res.SerializeToString,
      ),
      'databases_get': grpc.unary_unary_rpc_method_handler(
          servicer.databases_get,
          request_deserializer=cluster_dot_cluster__database__pb2.ClusterDatabaseManager.Get.Req.FromString,
          response_serializer=cluster_dot_cluster__database__pb2.ClusterDatabaseManager.Get.Res.SerializeToString,
      ),
      'databases_all': grpc.unary_unary_rpc_method_handler(
          servicer.databases_all,
          request_deserializer=cluster_dot_cluster__database__pb2.ClusterDatabaseManager.All.Req.FromString,
          response_serializer=cluster_dot_cluster__database__pb2.ClusterDatabaseManager.All.Res.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'typedb.protocol.TypeDBCluster', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
