name: tests

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "master"
      - "devel"

env:
  cache-version: 'cache-v1'

jobs:
  tests:    
    timeout-minutes: 720
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      max-parallel: 5
      matrix:
        config:
          - { python-version: 3.7, os: ubuntu-latest }
          - { python-version: 3.8, os: ubuntu-latest }
          - { python-version: 3.9, os: ubuntu-latest }
          # 3.8 fails on macosx likely because of issue noted here:
          # https://github.com/scipy/scipy/issues/11835
          - { python-version: 3.7, os: macos-latest }
    runs-on: ${{ matrix.config.os }}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      NOT_CRAN: true
      TZ: UTC
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Set up R
      uses: r-lib/actions/setup-r@v1
      with:
        r-version: '4.0.3'
    - name: Setup r-lib/remotes
      run:
        install.packages('remotes')
      shell: Rscript {0}
    - name: Install system dependencies
      run: |
        sudo apt-get install libcurl4-openssl-dev
        sysreqs=$(Rscript -e 'cat("apt-get update -y && apt-get install -y", paste(gsub("apt-get install -y ", "", remotes::system_requirements("ubuntu", "20.04")), collapse = " "))')
        echo $sysreqs
        sudo -s eval "$sysreqs"
        
    - name: Cache conda
      uses: actions/cache@v1
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
          hashFiles('environment.yml') }}

    - name: Cache R packages
      if: "!contains(github.event.head_commit.message, '/nocache') && matrix.config.os != 'ubuntu-latest'"
      uses: actions/cache@v2
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ env.cache-version }}-${{ matrix.config.os }}-biocversion-RELEASE_3_12-r-4.0-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ env.cache-version }}-${{ matrix.config.os }}-biocversion-RELEASE_3_12-r-4.0-

    - name: Cache R packages on ubuntu-latest
      if: "!contains(github.event.head_commit.message, '/nocache') && matrix.config.os == 'ubuntu-latest' "
      uses: actions/cache@v2
      with:
        path: /home/runner/work/_temp/Library
        key: ${{ env.cache-version }}-${{ matrix.config.os }}-biocversion-RELEASE_3_12-r-4.0-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ env.cache-version }}-${{ matrix.config.os }}-biocversion-RELEASE_3_12-r-4.0-
            
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.0.1
      with:
        auto-activate-base: true
        auto-update-conda : true
        activate-environment: dandelion
        channels: conda-forge, bioconda, anaconda, defaults
        channel-priority: true
        python-version: ${{ matrix.config.python-version }}
        environment-file: environment.yml
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
    
    - name: Install Dandelion
      run: |
        python setup.py install

    - name: Force installation of rpy2
      uses: nick-invision/retry@v2
      with:
        timeout_seconds: 15
        max_attempts: 3
        command: |
          pip install "rpy2>=3.4.0"
        on_retry_command: |
          pip install "rpy2>=3.4.0" -U
              
    - name: install R dependencies
      run: |
        install.packages(c('RCurl','XML'))
        remotes::install_cran("BiocManager")
        BiocManager::install(version = "3.12", ask = FALSE)
        BiocManager::install(c('Biostrings', 'GenomicAlignments', 'IRanges'))
        install.packages(c('shazam', 'alakazam', 'tigger', 'airr', 'optparse'))
      shell: Rscript {0}

    - name: Test if R dependencies are installed properly
      uses: nick-invision/retry@v2
      with:
        timeout_seconds: 15
        max_attempts: 3
        command: |
          Rscript tests/r_dependencies.R
        on_retry_command: |
          Rscript tests/r_install.R

    - name: Test with pytest
      run: |
        pytest -rP tests -W ignore::DeprecationWarning -W ignore::PendingDeprecationWarning -W ignore::FutureWarning
